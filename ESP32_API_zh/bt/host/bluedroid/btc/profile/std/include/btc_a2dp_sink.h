// 版权所有2015-2016 Espressif Systems（上海）私人有限公司
//
// 根据Apache许可证2.0版（“许可证”）获得许可；
// 除非符合许可证，否则不得使用此文件。
// 您可以在以下地址获取许可证副本：

//     http://www.apache.org/licenses/LICENSE-2.0
//
// 除非适用法律要求或书面同意，软件
// 根据许可证分发的内容是按“原样”分发的，
// 无任何明示或暗示的保证或条件。
// 有关管理权限和
// 许可证下的限制。

/*******************************************************************************
 * 文件名：btc_a2dp_sink.h
 *
 *******************************************************************************/

#ifndef __BTC_A2DP_SINK_H__
#define __BTC_A2DP_SINK_H__

#include <stdbool.h>
#include "common/bt_target.h"
#include "bta/bta_api.h"
#include "btc_av_api.h"
#include "esp_a2dp_api.h"

#if BTC_AV_SINK_INCLUDED
/*******************************************************************************
 **  数据类型
 *******************************************************************************/
typedef struct {
    BT_HDR hdr;
    UINT8 codec_info[AVDT_CODEC_SIZE];
} tBTC_MEDIA_SINK_CFG_UPDATE;

/*******************************************************************************
 **  公共职能
 *******************************************************************************/

/*******************************************************************************
 ** 函数btc_a2dp_sink_startup
 **
 ** 说明初始化并启动A2DP接收器模块。在使用模块之前，BTC AV状态机应调用此功能。
 **
 ** 如果成功，则返回true
 **
 *******************************************************************************/
bool btc_a2dp_sink_startup(void);

/*******************************************************************************
 ** 函数btc_a2dp_sink_shutdown
 **
 ** 说明关闭并清理A2DP接收器模块
 **
 *******************************************************************************/
void btc_a2dp_sink_shutdown(void);

/*******************************************************************************
 ** 函数btc_a2dp_sink_rx_flush_req
 **
 ** 说明请求刷新音频解码管道
 **
 ** 如果成功，则返回TRUE
 **
 *******************************************************************************/
BOOLEAN btc_a2dp_sink_rx_flush_req(void);

/*******************************************************************************
 ** 函数btc_a2dp_sink_enque_buf
 **
 ** 说明排队等待btc媒体任务处理的高级音频媒体缓冲区。
 **
 ** 返回队列的大小
 **
 *******************************************************************************/
UINT8 btc_a2dp_sink_enque_buf(BT_HDR *p_buf);


/*******************************************************************************
 ** 函数btc_a2dp_sink_on_idle
 **
 ** 说明初始化过程中处理来自BTC AV状态机的“空闲”请求
 **
 *******************************************************************************/
void btc_a2dp_sink_on_idle(void);

/*******************************************************************************
 ** 函数btc_a2dp_sink_on_stopped
 **
 ** 说明处理来自BTC AV状态机的“停止”请求，以停止A2DP流
 **
 *******************************************************************************/
void btc_a2dp_sink_on_stopped(tBTA_AV_SUSPEND *p_av);

/*******************************************************************************
 ** 函数btc_a2dp_sink_on_suspended
 **
 ** 说明处理来自BTC AV状态机的“暂停”请求，以暂停A2DP流
 **
 *******************************************************************************/
void btc_a2dp_sink_on_suspended(tBTA_AV_SUSPEND *p_av);

/*******************************************************************************
 ** 函数btc_a2dp_sink_set_rx_flush
 **
 ** 描述启用/禁用丢弃接收到的A2DP帧
 **
 *******************************************************************************/
void btc_a2dp_sink_set_rx_flush(BOOLEAN enable);

/*******************************************************************************
 ** 函数btc_a2dp_sink_reset_decoder
 **
 ** 说明根据远程设备的配置重置解码器参数
 **
 *******************************************************************************/
void btc_a2dp_sink_reset_decoder(UINT8 *p_av);

#endif /* #如果BTC_AV_SINK_INCLUDED*/

#endif /* __BTC_A2DP_SINK_H__ */

