// 版权所有2015-2016 Espressif Systems（上海）私人有限公司
//
// 根据Apache许可证2.0版（“许可证”）获得许可；
// 除非符合许可证，否则不得使用此文件。
// 您可以在以下地址获取许可证副本：

//     http://www.apache.org/licenses/LICENSE-2.0
//
// 除非适用法律要求或书面同意，软件
// 根据许可证分发的内容是按“原样”分发的，
// 无任何明示或暗示的保证或条件。
// 有关管理权限和
// 许可证下的限制。


/*****************************************************************************
 * 文件名：btc/btc_sm.h
 *
 *  描述：通用BTC状态机API
 *
 *****************************************************************************/

#ifndef __BTC_SM_H__
#define __BTC_SM_H__

/*****************************************************************************
**  常量和宏
******************************************************************************/

/* 常规进入/退出状态机事件*/
#define BTC_SM_ENTER_EVT 0xFFFF
#define BTC_SM_EXIT_EVT  0xFFFE


/*****************************************************************************
**  类型定义和返回值
******************************************************************************/
typedef UINT32 btc_sm_state_t;
typedef UINT32 btc_sm_event_t;
typedef void *btc_sm_handle_t;
typedef BOOLEAN (* btc_sm_handler_t)(btc_sm_event_t event, void *data);


/*****************************************************************************
**  功能
**
**  注意：这些API应仅涉及BTC上下文
**
******************************************************************************/

/*****************************************************************************
** 函数btc_sm_init
**
** 说明使用状态处理程序初始化状态机调用方应确保表和相应的状态匹配。在调用btc_sm_shutdown API之前，“p_handlers”指向的位置应可用。
**
** 返回指向初始化状态机句柄的指针。
**
******************************************************************************/
btc_sm_handle_t btc_sm_init(const btc_sm_handler_t *p_handlers,
                            btc_sm_state_t initial_state);

/*****************************************************************************
** 函数btc_sm_shutdown
**
** 说明拆除状态机
**
** 返回None
**
******************************************************************************/
void btc_sm_shutdown(btc_sm_handle_t handle);

/*****************************************************************************
** 函数btc_sm_get_state
**
** 描述获取状态机的当前状态
**
** 返回当前状态
**
******************************************************************************/
btc_sm_state_t btc_sm_get_state(btc_sm_handle_t handle);

/*****************************************************************************
** 函数btc_sm_dispatch
**
** 说明将“event”与“data”一起发送到当前状态处理程序
**
** 返回成功时返回BT_STATUS_OK，否则返回BT_STAT US_FAIL
**
******************************************************************************/
bt_status_t btc_sm_dispatch(btc_sm_handle_t handle, btc_sm_event_t event,
                            void *data);

/*****************************************************************************
** 函数btc_sm_change_state
**
** 说明转换到新的“状态”。退出当前状态之前，应调用“BTC_SM_EXIT_EVT”。进入新状态前，应调用“BTC_SM_ENTER_EVT”
**
** 返回成功时返回BT_STATUS_OK，否则返回BT_STAT US_FAIL
**
******************************************************************************/
bt_status_t btc_sm_change_state(btc_sm_handle_t handle, btc_sm_state_t state);

#endif /* __BTC_SM_H__ */

