/******************************************************************************
 * 版权所有（C）2003-2012 Broadcom Corporation
 *
 *  根据Apache许可证2.0版（“许可证”）获得许可；除非符合许可证，否则不得使用此文件。您可以在以下地址获取许可证副本：
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  除非适用法律要求或书面同意，否则根据许可证分发的软件是按“原样”分发的，无任何明示或暗示的担保或条件。有关许可证下权限和限制的具体语言，请参阅许可证。
 *
 ******************************************************************************/

/******************************************************************************
 * 这是音频网关调出和调入功能的接口文件。
 *
 ******************************************************************************/
#ifndef BTA_AG_CO_H
#define BTA_AG_CO_H

#include "bta/bta_ag_api.h"
#include "hci/hci_audio.h"

#if (BTA_AG_INCLUDED == TRUE)
#if (BTM_SCO_HCI_INCLUDED == TRUE)
/*******************************************************************************
** 函数bta_ag_sco_audio_state
**
** 说明此功能在音频连接启动之前、启动之后和关闭之后由AG调用。
**
** 参数句柄-AG实例状态的句柄-音频状态编解码器-如果编译了WBS支持，则提供将要使用的编解码器，并且在SCO_state_SETUP中，必须使用正确的平台参数调用BTM_I2SPCMConfig（）。在其他状态下，不应忽略编解码器类型
**
** 返回void
**
*******************************************************************************/
#if (BTM_WBS_INCLUDED == TRUE)
void bta_ag_sco_audio_state(UINT16 handle, UINT8 app_id, UINT8 state, tBTA_AG_PEER_CODEC codec);
#else
void bta_ag_sco_audio_state(UINT16 handle, UINT8 app_id, UINT8 state);
#endif

/*******************************************************************************
** 函数bta_ag_sco_co_init
**
** 说明为SCO/eSCO设置默认数据路径。当调用BTA_AgEnable（）启动时，AG将执行此callout函数。手机可以使用此功能来初始化音频路径或用于其他初始化目的。
**
** 返回无效。
**
*******************************************************************************/
tBTA_HFP_SCO_ROUTE_TYPE bta_ag_sco_co_init(UINT32 rx_bw, UINT32 tx_bw, tBTA_HFP_CODEC_INFO *p_codec_info, UINT8 app_id);

/*******************************************************************************
** 函数bta_ag_sco_open
**
** 说明当服务级别连接打开时，AG执行此功能。
**
** 返回void
**
*******************************************************************************/
void bta_ag_sco_co_open(UINT16 handle, tBTM_SCO_AIR_MODE_TYPE air_mode, UINT8 inout_pkt_size, UINT16 event);

/*******************************************************************************
** 函数bta_ag_sco_coclose
**
** 说明当服务级别连接关闭时，AG调用此函数。
**
** 返回void
**
*******************************************************************************/
void bta_ag_sco_co_close(void);

/*******************************************************************************
** 函数bta_ag_sco_out_data
**
** 描述调用此函数以通过HCI发送SCO数据。
**
** 返回从应用程序获取的字节数
**
*******************************************************************************/
uint32_t bta_ag_sco_co_out_data(UINT8 *p_buf);

/*******************************************************************************
** 函数bta_hf_client_sco_co_in_data
**
** 描述调用此函数将传入的SCO数据发送到应用程序。
**
** 返回void
**
*******************************************************************************/
void bta_ag_sco_co_in_data(BT_HDR  *p_buf, tBTM_SCO_DATA_FLAG status);

/*******************************************************************************
** 函数bta_ag_co_tx_write
**
** 说明当AG配置为AT命令传递时，AG调用此功能向手机发送数据。此功能的实现必须将数据复制到手机存储器中。
**
** 返回void
**
*******************************************************************************/
void bta_ag_co_tx_write(UINT16 handle, UINT8 *p_data, UINT16 len);

/*******************************************************************************
** 函数bta_ag_ci_rx_write
**
** 说明当AG配置为AT命令传递时，调用此函数向AG发送数据。该函数将数据复制到事件缓冲区并发送。
**
** 返回void
**
*******************************************************************************/
extern void bta_ag_ci_rx_write(UINT16 handle, char *p_data, UINT16 len);

/******************************************************************************
** 函数bta_ag_c_slc_ready
**
** 说明调用此函数以通知AG SLC在应用程序中启动。此函数仅在应用程序以传递模式运行时使用。
**
** 返回void
**
******************************************************************************/
extern void bta_ag_ci_slc_ready(UINT16 handle);

#endif /* #如果（BTM_SCO_HCI_INCLUDED==真）*/

#endif /* #如果（BTA_AG_INCLUDE==真）*/

#endif /* BTA_AG_CO_H */

