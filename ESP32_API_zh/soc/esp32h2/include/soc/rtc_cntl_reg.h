// 版权所有2020 Espressif Systems（上海）私人有限公司
//
// 根据Apache许可证2.0版（“许可证”）获得许可；
// 除非符合许可证，否则不得使用此文件。
// 您可以在以下地址获取许可证副本：
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// 除非适用法律要求或书面同意，软件
// 根据许可证分发的内容是按“原样”分发的，
// 无任何明示或暗示的保证或条件。
// 有关管理权限和
// 许可证下的限制。
#ifndef _SOC_RTC_CNTL_REG_H_
#define _SOC_RTC_CNTL_REG_H_

/* 需要写入RTC_CNTL_WDT_WKEY以启用WDT寄存器的值*/
#define RTC_CNTL_WDT_WKEY_VALUE 0x50D83AA1
/* 需要写入RTC_CNTL_SWD_WPROTECT_REG以启用wdt寄存器的值*/
#define RTC_CNTL_SWD_WKEY_VALUE 0x8F1D312A

/* RTC_CNTL_WDT_CPU_REST_LENGTH和RTC_CNTL-WDT_SYS_RESET_LENGTH的可能值*/
#define RTC_WDT_RESET_LENGTH_100_NS    0
#define RTC_WDT_RESET_LENGTH_200_NS    1
#define RTC_WDT_RESET_LENGTH_300_NS    2
#define RTC_WDT_RESET_LENGTH_400_NS    3
#define RTC_WDT_RESET_LENGTH_500_NS    4
#define RTC_WDT_RESET_LENGTH_800_NS    5
#define RTC_WDT_RESET_LENGTH_1600_NS   6
#define RTC_WDT_RESET_LENGTH_3200_NS   7


#ifdef __cplusplus
extern "C" {
#endif
#include "soc.h"
#define RTC_CNTL_TIME0_REG		RTC_CNTL_TIME_LOW0_REG
#define RTC_CNTL_TIME1_REG		RTC_CNTL_TIME_HIGH0_REG

#define RTC_CNTL_OPTIONS0_REG          (DR_REG_RTCCNTL_BASE + 0x0000)
/* RTC_CNTL_SW_SYS_RST:WO；位位置：[31]；默认值：1'd0；*/
/*description:SW系统复位*/
#define RTC_CNTL_SW_SYS_RST  (BIT(31))
#define RTC_CNTL_SW_SYS_RST_M  (BIT(31))
#define RTC_CNTL_SW_SYS_RST_V  0x1
#define RTC_CNTL_SW_SYS_RST_S  31
/* RTC_CNTL_DG_WRAP_FORCE_NORST:R/W；位位置：[30]；默认值：1'd0；*/
/*描述：数字核心力在深度睡眠中不复位*/
#define RTC_CNTL_DG_WRAP_FORCE_NORST  (BIT(30))
#define RTC_CNTL_DG_WRAP_FORCE_NORST_M  (BIT(30))
#define RTC_CNTL_DG_WRAP_FORCE_NORST_V  0x1
#define RTC_CNTL_DG_WRAP_FORCE_NORST_S  30
/* RTC_CNTL_DG_WRAP_FORCE_RST:R/W；位位置：[29]；默认值：1'd0；*/
/*描述：深度睡眠中的数字包裹力重置*/
#define RTC_CNTL_DG_WRAP_FORCE_RST  (BIT(29))
#define RTC_CNTL_DG_WRAP_FORCE_RST_M  (BIT(29))
#define RTC_CNTL_DG_WRAP_FORCE_RST_V  0x1
#define RTC_CNTL_DG_WRAP_FORCE_RST_S  29
/* RTC_CNTL_analogy_FORCE_NOISO:R/W；位位置：[28]；默认值：1'd1；*/
/*说明：*/
#define RTC_CNTL_ANALOG_FORCE_NOISO  (BIT(28))
#define RTC_CNTL_ANALOG_FORCE_NOISO_M  (BIT(28))
#define RTC_CNTL_ANALOG_FORCE_NOISO_V  0x1
#define RTC_CNTL_ANALOG_FORCE_NOISO_S  28
/* RTC_CNTL_PLL_FORCE_NOISO:R/W；位位置：[27]；默认值：1'd1；*/
/*说明：*/
#define RTC_CNTL_PLL_FORCE_NOISO  (BIT(27))
#define RTC_CNTL_PLL_FORCE_NOISO_M  (BIT(27))
#define RTC_CNTL_PLL_FORCE_NOISO_V  0x1
#define RTC_CNTL_PLL_FORCE_NOISO_S  27
/* RTC_CNTL-XTL-FORCE_NOISO:R/W；位位置：[26]；默认值：1'd1；*/
/*说明：*/
#define RTC_CNTL_XTL_FORCE_NOISO  (BIT(26))
#define RTC_CNTL_XTL_FORCE_NOISO_M  (BIT(26))
#define RTC_CNTL_XTL_FORCE_NOISO_V  0x1
#define RTC_CNTL_XTL_FORCE_NOISO_S  26
/* RTC_CNTL_analogy_FORCE_ISO:R/W；位位置：[25]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_ANALOG_FORCE_ISO  (BIT(25))
#define RTC_CNTL_ANALOG_FORCE_ISO_M  (BIT(25))
#define RTC_CNTL_ANALOG_FORCE_ISO_V  0x1
#define RTC_CNTL_ANALOG_FORCE_ISO_S  25
/* RTC_CNTL_PLL_FORCE_ISO:R/W；位位置：[24]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_PLL_FORCE_ISO  (BIT(24))
#define RTC_CNTL_PLL_FORCE_ISO_M  (BIT(24))
#define RTC_CNTL_PLL_FORCE_ISO_V  0x1
#define RTC_CNTL_PLL_FORCE_ISO_S  24
/* RTC_CNTL-XTL-FORCE_ISO:R/W；位位置：[23]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_XTL_FORCE_ISO  (BIT(23))
#define RTC_CNTL_XTL_FORCE_ISO_M  (BIT(23))
#define RTC_CNTL_XTL_FORCE_ISO_V  0x1
#define RTC_CNTL_XTL_FORCE_ISO_S  23
/* RTC_CNTL-XTL_EXT_CTR_SEL:R/W；比特位置：[22:20]；默认值：3'd0；*/
/*说明：*/
#define RTC_CNTL_XTL_EXT_CTR_SEL  0x00000007
#define RTC_CNTL_XTL_EXT_CTR_SEL_M  ((RTC_CNTL_XTL_EXT_CTR_SEL_V)<<(RTC_CNTL_XTL_EXT_CTR_SEL_S))
#define RTC_CNTL_XTL_EXT_CTR_SEL_V  0x7
#define RTC_CNTL_XTL_EXT_CTR_SEL_S  20
/* RTC_CNTL-XPD-RFPLL_FORCE:R/W；位位置：[19]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_XPD_RFPLL_FORCE  (BIT(19))
#define RTC_CNTL_XPD_RFPLL_FORCE_M  (BIT(19))
#define RTC_CNTL_XPD_RFPLL_FORCE_V  0x1
#define RTC_CNTL_XPD_RFPLL_FORCE_S  19
/* RTC_CNTL-XPD-RFPLL:R/W；位位置：[18]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_XPD_RFPLL  (BIT(18))
#define RTC_CNTL_XPD_RFPLL_M  (BIT(18))
#define RTC_CNTL_XPD_RFPLL_V  0x1
#define RTC_CNTL_XPD_RFPLL_S  18
/* RTC_CNTL-XTL_EN_WAIT:R/W；比特位置：[17:14]；默认值：4'd2；*/
/*描述：等待bias_sleep和当前源唤醒*/
#define RTC_CNTL_XTL_EN_WAIT  0x0000000F
#define RTC_CNTL_XTL_EN_WAIT_M  ((RTC_CNTL_XTL_EN_WAIT_V)<<(RTC_CNTL_XTL_EN_WAIT_S))
#define RTC_CNTL_XTL_EN_WAIT_V  0xF
#define RTC_CNTL_XTL_EN_WAIT_S  14
/* RTC_CNTL-XTL_FORCE_PU:R/W；位位置：[13]；默认值：1'd1；*/
/*description:crystallforce通电*/
#define RTC_CNTL_XTL_FORCE_PU  (BIT(13))
#define RTC_CNTL_XTL_FORCE_PU_M  (BIT(13))
#define RTC_CNTL_XTL_FORCE_PU_V  0x1
#define RTC_CNTL_XTL_FORCE_PU_S  13
/* RTC_CNTL-XTL_FORCE_PD:R/W；位位置：[12]；默认值：1’b0；*/
/*description:水晶力断电*/
#define RTC_CNTL_XTL_FORCE_PD  (BIT(12))
#define RTC_CNTL_XTL_FORCE_PD_M  (BIT(12))
#define RTC_CNTL_XTL_FORCE_PD_V  0x1
#define RTC_CNTL_XTL_FORCE_PD_S  12
/* RTC_CNTL_bpll_FORCE_PU:R/W；位位置：[11]；默认值：1'd0；*/
/*description:BB_PLL强制加电*/
#define RTC_CNTL_BBPLL_FORCE_PU  (BIT(11))
#define RTC_CNTL_BBPLL_FORCE_PU_M  (BIT(11))
#define RTC_CNTL_BBPLL_FORCE_PU_V  0x1
#define RTC_CNTL_BBPLL_FORCE_PU_S  11
/* RTC_CNTL_bpll_FORCE_PD:R/W；位位置：[10]；默认值：1’b0；*/
/*description:BB_PLL强制断电*/
#define RTC_CNTL_BBPLL_FORCE_PD  (BIT(10))
#define RTC_CNTL_BBPLL_FORCE_PD_M  (BIT(10))
#define RTC_CNTL_BBPLL_FORCE_PD_V  0x1
#define RTC_CNTL_BBPLL_FORCE_PD_S  10
/* RTC_CNTL_bpll_I2C_FORCE_PU:R/W；位位置：[9]；默认值：1'd0；*/
/*description:BB_PLL_I2C强制加电*/
#define RTC_CNTL_BBPLL_I2C_FORCE_PU  (BIT(9))
#define RTC_CNTL_BBPLL_I2C_FORCE_PU_M  (BIT(9))
#define RTC_CNTL_BBPLL_I2C_FORCE_PU_V  0x1
#define RTC_CNTL_BBPLL_I2C_FORCE_PU_S  9
/* RTC_CNTL_bpll_I2C_FORCE_PD:R/W；位位置：[8]；默认值：1’b0；*/
/*description:BB_PLL_I2C强制断电*/
#define RTC_CNTL_BBPLL_I2C_FORCE_PD  (BIT(8))
#define RTC_CNTL_BBPLL_I2C_FORCE_PD_M  (BIT(8))
#define RTC_CNTL_BBPLL_I2C_FORCE_PD_V  0x1
#define RTC_CNTL_BBPLL_I2C_FORCE_PD_S  8
/* RTC_CNTL_BB_I2C_FORCE_PU:R/W；位位置：[7]；默认值：1'd0；*/
/*description:BB_I2C强制加电*/
#define RTC_CNTL_BB_I2C_FORCE_PU  (BIT(7))
#define RTC_CNTL_BB_I2C_FORCE_PU_M  (BIT(7))
#define RTC_CNTL_BB_I2C_FORCE_PU_V  0x1
#define RTC_CNTL_BB_I2C_FORCE_PU_S  7
/* RTC_CNTL_BB_I2C_FORCE_PD:R/W；位位置：[6]；默认值：1’b0；*/
/*description:BB_I2C强制断电*/
#define RTC_CNTL_BB_I2C_FORCE_PD  (BIT(6))
#define RTC_CNTL_BB_I2C_FORCE_PD_M  (BIT(6))
#define RTC_CNTL_BB_I2C_FORCE_PD_V  0x1
#define RTC_CNTL_BB_I2C_FORCE_PD_S  6
/* RTC_CNTL_SW_PROCPU_RST:WO；位位置：[5]；默认值：1’b0；*/
/*description:PRO CPU SW复位*/
#define RTC_CNTL_SW_PROCPU_RST  (BIT(5))
#define RTC_CNTL_SW_PROCPU_RST_M  (BIT(5))
#define RTC_CNTL_SW_PROCPU_RST_V  0x1
#define RTC_CNTL_SW_PROCPU_RST_S  5
/* RTC_CNTL_SW_APPCPU_RST:WO；位位置：[4]；默认值：1’b0；*/
/*description:APP CPU SW复位*/
#define RTC_CNTL_SW_APPCPU_RST  (BIT(4))
#define RTC_CNTL_SW_APPCPU_RST_M  (BIT(4))
#define RTC_CNTL_SW_APPCPU_RST_V  0x1
#define RTC_CNTL_SW_APPCPU_RST_S  4
/* RTC_CNTL_SW_STALL_PROCPU_C0:R/W；位位置：[3:2]；默认值：2’b0；*/
/*描述：｛reg_sw_stall_procpu_c1[5:0]reg_sw_stall_procpu_c0[1:0]｝==0x86将停止PRO CPU*/
#define RTC_CNTL_SW_STALL_PROCPU_C0  0x00000003
#define RTC_CNTL_SW_STALL_PROCPU_C0_M  ((RTC_CNTL_SW_STALL_PROCPU_C0_V)<<(RTC_CNTL_SW_STALL_PROCPU_C0_S))
#define RTC_CNTL_SW_STALL_PROCPU_C0_V  0x3
#define RTC_CNTL_SW_STALL_PROCPU_C0_S  2
/* RTC_CNTL_SW_STALL_APPCPU_C0:R/W；位位置：[1:0]；默认值：2’b0；*/
/*描述：｛reg_sw_stall_appcpu_c1[5:0]reg_sw_stall_appcp u_c0[1:0]｝==0x86将停止APP CPU*/
#define RTC_CNTL_SW_STALL_APPCPU_C0  0x00000003
#define RTC_CNTL_SW_STALL_APPCPU_C0_M  ((RTC_CNTL_SW_STALL_APPCPU_C0_V)<<(RTC_CNTL_SW_STALL_APPCPU_C0_S))
#define RTC_CNTL_SW_STALL_APPCPU_C0_V  0x3
#define RTC_CNTL_SW_STALL_APPCPU_C0_S  0

#define RTC_CNTL_SLP_TIMER0_REG          (DR_REG_RTCCNTL_BASE + 0x0004)
/* RTC_CNTL_SLP_VAL_LO:R/W；位位置：[31:0]；默认值：32'h0；*/
/*说明：*/
#define RTC_CNTL_SLP_VAL_LO  0xFFFFFFFF
#define RTC_CNTL_SLP_VAL_LO_M  ((RTC_CNTL_SLP_VAL_LO_V)<<(RTC_CNTL_SLP_VAL_LO_S))
#define RTC_CNTL_SLP_VAL_LO_V  0xFFFFFFFF
#define RTC_CNTL_SLP_VAL_LO_S  0

#define RTC_CNTL_SLP_TIMER1_REG          (DR_REG_RTCCNTL_BASE + 0x0008)
/* RTC_CNTL_MAIN_TIMER_ALARM_EN:WO；位位置：[16]；默认值：1'0；*/
/*描述：定时器报警启用位*/
#define RTC_CNTL_MAIN_TIMER_ALARM_EN  (BIT(16))
#define RTC_CNTL_MAIN_TIMER_ALARM_EN_M  (BIT(16))
#define RTC_CNTL_MAIN_TIMER_ALARM_EN_V  0x1
#define RTC_CNTL_MAIN_TIMER_ALARM_EN_S  16
/* RTC_CNTL_SLP_VAL_HI:R/W；比特位置：[15:0]；默认值：16'0；*/
/*描述：RTC休眠定时器高16位*/
#define RTC_CNTL_SLP_VAL_HI  0x0000FFFF
#define RTC_CNTL_SLP_VAL_HI_M  ((RTC_CNTL_SLP_VAL_HI_V)<<(RTC_CNTL_SLP_VAL_HI_S))
#define RTC_CNTL_SLP_VAL_HI_V  0xFFFF
#define RTC_CNTL_SLP_VAL_HI_S  0

#define RTC_CNTL_TIME_UPDATE_REG          (DR_REG_RTCCNTL_BASE + 0x000C)
/* RTC_CNTL_TIME_UPDATE:WO；位位置：[31]；默认值：1'0；*/
/*description:设置1：用RTC计时器更新寄存器*/
#define RTC_CNTL_TIME_UPDATE  (BIT(31))
#define RTC_CNTL_TIME_UPDATE_M  (BIT(31))
#define RTC_CNTL_TIME_UPDATE_V  0x1
#define RTC_CNTL_TIME_UPDATE_S  31
/* RTC_CNTL_TIMER_SYS_RST:R/W；位位置：[29]；默认值：1’b0；*/
/*description:启用记录系统重置时间*/
#define RTC_CNTL_TIMER_SYS_RST  (BIT(29))
#define RTC_CNTL_TIMER_SYS_RST_M  (BIT(29))
#define RTC_CNTL_TIMER_SYS_RST_V  0x1
#define RTC_CNTL_TIMER_SYS_RST_S  29
/* RTC_CNTL_TIMER_XTL_OFF：R/W；位位置：[28]；默认值：1’b0；*/
/*description:启用记录40M XTAL OFF时间*/
#define RTC_CNTL_TIMER_XTL_OFF  (BIT(28))
#define RTC_CNTL_TIMER_XTL_OFF_M  (BIT(28))
#define RTC_CNTL_TIMER_XTL_OFF_V  0x1
#define RTC_CNTL_TIMER_XTL_OFF_S  28
/* RTC_CNTL_TIMER_SYS_STALL:R/W；位位置：[27]；默认值：1’b0；*/
/*description:启用以记录系统暂停时间*/
#define RTC_CNTL_TIMER_SYS_STALL  (BIT(27))
#define RTC_CNTL_TIMER_SYS_STALL_M  (BIT(27))
#define RTC_CNTL_TIMER_SYS_STALL_V  0x1
#define RTC_CNTL_TIMER_SYS_STALL_S  27

#define RTC_CNTL_TIME_LOW0_REG          (DR_REG_RTCCNTL_BASE + 0x0010)
/* RTC_CNTL_TIMER_VALUE0_LOW：RO；位位置：[31:0]；默认值：32'h0；*/
/*描述：RTC定时器低32位*/
#define RTC_CNTL_TIMER_VALUE0_LOW  0xFFFFFFFF
#define RTC_CNTL_TIMER_VALUE0_LOW_M  ((RTC_CNTL_TIMER_VALUE0_LOW_V)<<(RTC_CNTL_TIMER_VALUE0_LOW_S))
#define RTC_CNTL_TIMER_VALUE0_LOW_V  0xFFFFFFFF
#define RTC_CNTL_TIMER_VALUE0_LOW_S  0

#define RTC_CNTL_TIME_HIGH0_REG          (DR_REG_RTCCNTL_BASE + 0x0014)
/* RTC_CNTL_TIMER_VALUE0_高：RO；比特位置：[15:0]；默认值：16'0；*/
/*描述：RTC定时器高16位*/
#define RTC_CNTL_TIMER_VALUE0_HIGH  0x0000FFFF
#define RTC_CNTL_TIMER_VALUE0_HIGH_M  ((RTC_CNTL_TIMER_VALUE0_HIGH_V)<<(RTC_CNTL_TIMER_VALUE0_HIGH_S))
#define RTC_CNTL_TIMER_VALUE0_HIGH_V  0xFFFF
#define RTC_CNTL_TIMER_VALUE0_HIGH_S  0

#define RTC_CNTL_STATE0_REG          (DR_REG_RTCCNTL_BASE + 0x0018)
/* RTC_CNTL_SLEEP_EN:R/W；位位置：[31]；默认值：1'd0；*/
/*description:休眠启用位*/
#define RTC_CNTL_SLEEP_EN  (BIT(31))
#define RTC_CNTL_SLEEP_EN_M  (BIT(31))
#define RTC_CNTL_SLEEP_EN_V  0x1
#define RTC_CNTL_SLEEP_EN_S  31
/* RTC_CNTL_SLP拒绝：R/W；位位置：[30]；默认值：1'd0；*/
/*description:leep拒绝位*/
#define RTC_CNTL_SLP_REJECT  (BIT(30))
#define RTC_CNTL_SLP_REJECT_M  (BIT(30))
#define RTC_CNTL_SLP_REJECT_V  0x1
#define RTC_CNTL_SLP_REJECT_S  30
/* RTC_CNTL_SLP_唤醒：R/W；位位置：[29]；默认值：1'd0；*/
/*description:leep唤醒位*/
#define RTC_CNTL_SLP_WAKEUP  (BIT(29))
#define RTC_CNTL_SLP_WAKEUP_M  (BIT(29))
#define RTC_CNTL_SLP_WAKEUP_V  0x1
#define RTC_CNTL_SLP_WAKEUP_S  29
/* RTC_CNTL_SDIO_ACTIVE_IND:RO；位位置：[28]；默认值：1'd0；*/
/*描述：SDIO激活指示*/
#define RTC_CNTL_SDIO_ACTIVE_IND  (BIT(28))
#define RTC_CNTL_SDIO_ACTIVE_IND_M  (BIT(28))
#define RTC_CNTL_SDIO_ACTIVE_IND_V  0x1
#define RTC_CNTL_SDIO_ACTIVE_IND_S  28
/* RTC_CNTL_APB2RTC_BRIDGE_SEL:R/W；位位置：[22]；默认值：1'd0；*/
/*description:1:APB到RTC使用网桥*/
#define RTC_CNTL_APB2RTC_BRIDGE_SEL  (BIT(22))
#define RTC_CNTL_APB2RTC_BRIDGE_SEL_M  (BIT(22))
#define RTC_CNTL_APB2RTC_BRIDGE_SEL_V  0x1
#define RTC_CNTL_APB2RTC_BRIDGE_SEL_S  22
/* RTC_CNTL_SLP_拒绝原因CLR:WO；位位置：[1]；默认值：1’b0；*/
/*描述：清除rtc睡眠拒绝原因*/
#define RTC_CNTL_SLP_REJECT_CAUSE_CLR  (BIT(1))
#define RTC_CNTL_SLP_REJECT_CAUSE_CLR_M  (BIT(1))
#define RTC_CNTL_SLP_REJECT_CAUSE_CLR_V  0x1
#define RTC_CNTL_SLP_REJECT_CAUSE_CLR_S  1
/* RTC_CNTL_SW_CPU_INT:WO；位位置：[0]；默认值：1’b0；*/
/*描述：rtc软件中断到主cpu*/
#define RTC_CNTL_SW_CPU_INT  (BIT(0))
#define RTC_CNTL_SW_CPU_INT_M  (BIT(0))
#define RTC_CNTL_SW_CPU_INT_V  0x1
#define RTC_CNTL_SW_CPU_INT_S  0

#define RTC_CNTL_TIMER1_REG          (DR_REG_RTCCNTL_BASE + 0x001C)
/* RTC_CNTL_PLL_BUF_WAIT:R/W；位位置：[31:24]；默认值：8'd40；*/
/*描述：PLL等待周期为slow_clk_rtc*/
#define RTC_CNTL_PLL_BUF_WAIT  0x000000FF
#define RTC_CNTL_PLL_BUF_WAIT_M  ((RTC_CNTL_PLL_BUF_WAIT_V)<<(RTC_CNTL_PLL_BUF_WAIT_S))
#define RTC_CNTL_PLL_BUF_WAIT_V  0xFF
#define RTC_CNTL_PLL_BUF_WAIT_S  24
#define RTC_CNTL_PLL_BUF_WAIT_DEFAULT  20
/* RTC_CNTL-XTL_BUF_WAIT:R/W；比特位置：[23:14]；默认值：10'd80；*/
/*description:slow_clk_rtc中的XTAL等待周期*/
#define RTC_CNTL_XTL_BUF_WAIT  0x000003FF
#define RTC_CNTL_XTL_BUF_WAIT_M  ((RTC_CNTL_XTL_BUF_WAIT_V)<<(RTC_CNTL_XTL_BUF_WAIT_S))
#define RTC_CNTL_XTL_BUF_WAIT_V  0x3FF
#define RTC_CNTL_XTL_BUF_WAIT_S  14
#define RTC_CNTL_XTL_BUF_WAIT_DEFAULT  100
/* RTC_CNTL_CK8M_WAIT:R/W；比特位置：[13:6]；默认值：8'h10；*/
/*描述：慢_clk_rtc中的CK8M等待周期*/
#define RTC_CNTL_CK8M_WAIT  0x000000FF
#define RTC_CNTL_CK8M_WAIT_M  ((RTC_CNTL_CK8M_WAIT_V)<<(RTC_CNTL_CK8M_WAIT_S))
#define RTC_CNTL_CK8M_WAIT_V  0xFF
#define RTC_CNTL_CK8M_WAIT_S  6
#define RTC_CNTL_CK8M_WAIT_DEFAULT  20
/* RTC_CNTL_CPU_STALL_WAIT:R/W；比特位置：[5:1]；默认值：5'd1；*/
/*描述：fast_clk_rtc中的CPU暂停等待周期*/
#define RTC_CNTL_CPU_STALL_WAIT  0x0000001F
#define RTC_CNTL_CPU_STALL_WAIT_M  ((RTC_CNTL_CPU_STALL_WAIT_V)<<(RTC_CNTL_CPU_STALL_WAIT_S))
#define RTC_CNTL_CPU_STALL_WAIT_V  0x1F
#define RTC_CNTL_CPU_STALL_WAIT_S  1
/* RTC_CNTL_CPU_STALL_EN:R/W；位位置：[0]；默认值：1'd1；*/
/*description:CPU暂停启用位*/
#define RTC_CNTL_CPU_STALL_EN  (BIT(0))
#define RTC_CNTL_CPU_STALL_EN_M  (BIT(0))
#define RTC_CNTL_CPU_STALL_EN_V  0x1
#define RTC_CNTL_CPU_STALL_EN_S  0

#define RTC_CNTL_TIMER2_REG          (DR_REG_RTCCNTL_BASE + 0x0020)
/* RTC_CNTL_MIN_TIME_CK8M_OFF:R/W；位位置：[31:24]；默认值：8'h1；*/
/*描述：处于断电状态的CK8M在slow_clk_rtc中的最小周期*/
#define RTC_CNTL_MIN_TIME_CK8M_OFF  0x000000FF
#define RTC_CNTL_MIN_TIME_CK8M_OFF_M  ((RTC_CNTL_MIN_TIME_CK8M_OFF_V)<<(RTC_CNTL_MIN_TIME_CK8M_OFF_S))
#define RTC_CNTL_MIN_TIME_CK8M_OFF_V  0xFF
#define RTC_CNTL_MIN_TIME_CK8M_OFF_S  24

#define RTC_CNTL_TIMER3_REG          (DR_REG_RTCCNTL_BASE + 0x0024)
/* RTC_CNTL_BT_POWERUP_TIMER:R/W；位位置：[31:25]；默认值：7'h5；*/
/*说明：*/
#define RTC_CNTL_BT_POWERUP_TIMER  0x0000007F
#define RTC_CNTL_BT_POWERUP_TIMER_M  ((RTC_CNTL_BT_POWERUP_TIMER_V)<<(RTC_CNTL_BT_POWERUP_TIMER_S))
#define RTC_CNTL_BT_POWERUP_TIMER_V  0x7F
#define RTC_CNTL_BT_POWERUP_TIMER_S  25
/* RTC_CNTL_BT_WAIT_TIMER:R/W；比特位置：[24:16]；默认值：9'h8；*/
/*说明：*/
#define RTC_CNTL_BT_WAIT_TIMER  0x000001FF
#define RTC_CNTL_BT_WAIT_TIMER_M  ((RTC_CNTL_BT_WAIT_TIMER_V)<<(RTC_CNTL_BT_WAIT_TIMER_S))
#define RTC_CNTL_BT_WAIT_TIMER_V  0x1FF
#define RTC_CNTL_BT_WAIT_TIMER_S  16
/* RTC_CNTL-WIFI_POWERUP_TIMER:R/W；比特位置：[15:9]；默认值：7'h5；*/
/*说明：*/
#define RTC_CNTL_WIFI_POWERUP_TIMER  0x0000007F
#define RTC_CNTL_WIFI_POWERUP_TIMER_M  ((RTC_CNTL_WIFI_POWERUP_TIMER_V)<<(RTC_CNTL_WIFI_POWERUP_TIMER_S))
#define RTC_CNTL_WIFI_POWERUP_TIMER_V  0x7F
#define RTC_CNTL_WIFI_POWERUP_TIMER_S  9
/* RTC_CNTL-WIFI_WAIT_TIMER:R/W；位位置：[8:0]；默认值：9'h8；*/
/*说明：*/
#define RTC_CNTL_WIFI_WAIT_TIMER  0x000001FF
#define RTC_CNTL_WIFI_WAIT_TIMER_M  ((RTC_CNTL_WIFI_WAIT_TIMER_V)<<(RTC_CNTL_WIFI_WAIT_TIMER_S))
#define RTC_CNTL_WIFI_WAIT_TIMER_V  0x1FF
#define RTC_CNTL_WIFI_WAIT_TIMER_S  0

#define RTC_CNTL_TIMER4_REG          (DR_REG_RTCCNTL_BASE + 0x0028)
/* RTC_CNTL_DG_WRAP_power_TIMER:R/W；位位置：[31:25]；默认值：7'h8；*/
/*说明：*/
#define RTC_CNTL_DG_WRAP_POWERUP_TIMER  0x0000007F
#define RTC_CNTL_DG_WRAP_POWERUP_TIMER_M  ((RTC_CNTL_DG_WRAP_POWERUP_TIMER_V)<<(RTC_CNTL_DG_WRAP_POWERUP_TIMER_S))
#define RTC_CNTL_DG_WRAP_POWERUP_TIMER_V  0x7F
#define RTC_CNTL_DG_WRAP_POWERUP_TIMER_S  25
/* RTC_CNTL_DG_WRAP_WAIT_TIMER:R/W；比特位置：[24:16]；默认值：9'h20；*/
/*说明：*/
#define RTC_CNTL_DG_WRAP_WAIT_TIMER  0x000001FF
#define RTC_CNTL_DG_WRAP_WAIT_TIMER_M  ((RTC_CNTL_DG_WRAP_WAIT_TIMER_V)<<(RTC_CNTL_DG_WRAP_WAIT_TIMER_S))
#define RTC_CNTL_DG_WRAP_WAIT_TIMER_V  0x1FF
#define RTC_CNTL_DG_WRAP_WAIT_TIMER_S  16
/* RTC_CNTL_CPU_to_POWERUP_TIMER:R/W；比特位置：[15:9]；默认值：7'h5；*/
/*说明：*/
#define RTC_CNTL_CPU_TOP_POWERUP_TIMER  0x0000007F
#define RTC_CNTL_CPU_TOP_POWERUP_TIMER_M  ((RTC_CNTL_CPU_TOP_POWERUP_TIMER_V)<<(RTC_CNTL_CPU_TOP_POWERUP_TIMER_S))
#define RTC_CNTL_CPU_TOP_POWERUP_TIMER_V  0x7F
#define RTC_CNTL_CPU_TOP_POWERUP_TIMER_S  9
/* RTC_CNTL_CPU_TOP_WAIT_TIMER:R/W；位位置：[8:0]；默认值：9'h8；*/
/*说明：*/
#define RTC_CNTL_CPU_TOP_WAIT_TIMER  0x000001FF
#define RTC_CNTL_CPU_TOP_WAIT_TIMER_M  ((RTC_CNTL_CPU_TOP_WAIT_TIMER_V)<<(RTC_CNTL_CPU_TOP_WAIT_TIMER_S))
#define RTC_CNTL_CPU_TOP_WAIT_TIMER_V  0x1FF
#define RTC_CNTL_CPU_TOP_WAIT_TIMER_S  0

#define RTC_CNTL_TIMER5_REG          (DR_REG_RTCCNTL_BASE + 0x002C)
/* RTC_CNTL_MIN_SLP_VAL:R/W；比特位置：[15:8]；默认值：8'h80；*/
/*描述：slowclkrtc中的最小睡眠周期*/
#define RTC_CNTL_MIN_SLP_VAL  0x000000FF
#define RTC_CNTL_MIN_SLP_VAL_M  ((RTC_CNTL_MIN_SLP_VAL_V)<<(RTC_CNTL_MIN_SLP_VAL_S))
#define RTC_CNTL_MIN_SLP_VAL_V  0xFF
#define RTC_CNTL_MIN_SLP_VAL_S  8
#define RTC_CNTL_MIN_SLP_VAL_MIN 2

#define RTC_CNTL_TIMER6_REG          (DR_REG_RTCCNTL_BASE + 0x0030)
/* RTC_CNTL_DG_PERI_POWERUP_TIMER:R/W；位位置：[31:25]；默认值：7'h5；*/
/*说明：*/
#define RTC_CNTL_DG_PERI_POWERUP_TIMER  0x0000007F
#define RTC_CNTL_DG_PERI_POWERUP_TIMER_M  ((RTC_CNTL_DG_PERI_POWERUP_TIMER_V)<<(RTC_CNTL_DG_PERI_POWERUP_TIMER_S))
#define RTC_CNTL_DG_PERI_POWERUP_TIMER_V  0x7F
#define RTC_CNTL_DG_PERI_POWERUP_TIMER_S  25
/* RTC_CNTL_DG_PERI_WAIT_TIMER:R/W；比特位置：[24:16]；默认值：9'h8；*/
/*说明：*/
#define RTC_CNTL_DG_PERI_WAIT_TIMER  0x000001FF
#define RTC_CNTL_DG_PERI_WAIT_TIMER_M  ((RTC_CNTL_DG_PERI_WAIT_TIMER_V)<<(RTC_CNTL_DG_PERI_WAIT_TIMER_S))
#define RTC_CNTL_DG_PERI_WAIT_TIMER_V  0x1FF
#define RTC_CNTL_DG_PERI_WAIT_TIMER_S  16

#define RTC_CNTL_ANA_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x0034)
/* RTC_CNTL_pl_I2C_PU:R/W；位位置：[31]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_PLL_I2C_PU  (BIT(31))
#define RTC_CNTL_PLL_I2C_PU_M  (BIT(31))
#define RTC_CNTL_PLL_I2C_PU_V  0x1
#define RTC_CNTL_PLL_I2C_PU_S  31
/* RTC_CNTL_cckgen_I2C_PU:R/W；位位置：[30]；默认值：1'd0；*/
/*description:1:CKGEN_I2C通电*/
#define RTC_CNTL_CKGEN_I2C_PU  (BIT(30))
#define RTC_CNTL_CKGEN_I2C_PU_M  (BIT(30))
#define RTC_CNTL_CKGEN_I2C_PU_V  0x1
#define RTC_CNTL_CKGEN_I2C_PU_S  30
/* RTC_CNTL-RFRX_PBUS_PU:R/W；位位置：[28]；默认值：1'd0；*/
/*description:1:RFRX_PBUS加电*/
#define RTC_CNTL_RFRX_PBUS_PU  (BIT(28))
#define RTC_CNTL_RFRX_PBUS_PU_M  (BIT(28))
#define RTC_CNTL_RFRX_PBUS_PU_V  0x1
#define RTC_CNTL_RFRX_PBUS_PU_S  28
/* RTC_CNTL_TXRF_I2C_PU:R/W；位位置：[27]；默认值：1'd0；*/
/*description:1:TXRF_I2C通电*/
#define RTC_CNTL_TXRF_I2C_PU  (BIT(27))
#define RTC_CNTL_TXRF_I2C_PU_M  (BIT(27))
#define RTC_CNTL_TXRF_I2C_PU_V  0x1
#define RTC_CNTL_TXRF_I2C_PU_S  27
/* RTC_CNTL-pvtom_PU:R/W；位位置：[26]；默认值：1’b0；*/
/*description:1:PVTMON通电*/
#define RTC_CNTL_PVTMON_PU  (BIT(26))
#define RTC_CNTL_PVTMON_PU_M  (BIT(26))
#define RTC_CNTL_PVTMON_PU_V  0x1
#define RTC_CNTL_PVTMON_PU_S  26
/* RTC_CNTL_bpll_CAL_SLP_START:R/W；位位置：[25]；默认值：1’b0；*/
/*描述：在休眠期间启动BBPLL校准*/
#define RTC_CNTL_BBPLL_CAL_SLP_START  (BIT(25))
#define RTC_CNTL_BBPLL_CAL_SLP_START_M  (BIT(25))
#define RTC_CNTL_BBPLL_CAL_SLP_START_V  0x1
#define RTC_CNTL_BBPLL_CAL_SLP_START_S  25
/* RTC_CNTL_pla_FORCE_PU:R/W；位位置：[24]；默认值：1’b0；*/
/*描述：PLLA强制加电*/
#define RTC_CNTL_PLLA_FORCE_PU  (BIT(24))
#define RTC_CNTL_PLLA_FORCE_PU_M  (BIT(24))
#define RTC_CNTL_PLLA_FORCE_PU_V  0x1
#define RTC_CNTL_PLLA_FORCE_PU_S  24
/* RTC_CNTL_pla_FORCE_PD:R/W；位位置：[23]；默认值：1’b1；*/
/*描述：PLLA强制断电*/
#define RTC_CNTL_PLLA_FORCE_PD  (BIT(23))
#define RTC_CNTL_PLLA_FORCE_PD_M  (BIT(23))
#define RTC_CNTL_PLLA_FORCE_PD_V  0x1
#define RTC_CNTL_PLLA_FORCE_PD_S  23
/* RTC_CNTL_SAR_I2C_PU:R/W；位位置：[22]；默认值：1’b1；*/
/*描述：PLLA强制加电*/
#define RTC_CNTL_SAR_I2C_PU  (BIT(22))
#define RTC_CNTL_SAR_I2C_PU_M  (BIT(22))
#define RTC_CNTL_SAR_I2C_PU_V  0x1
#define RTC_CNTL_SAR_I2C_PU_S  22
/* RTC_CNTL-gill_RST_EN:R/W；位位置：[20]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GLITCH_RST_EN  (BIT(20))
#define RTC_CNTL_GLITCH_RST_EN_M  (BIT(20))
#define RTC_CNTL_GLITCH_RST_EN_V  0x1
#define RTC_CNTL_GLITCH_RST_EN_S  20
/* RTC_CNTL_I2C_RESET_POR_FORCE_PU:R/W；位位置：[19]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_I2C_RESET_POR_FORCE_PU  (BIT(19))
#define RTC_CNTL_I2C_RESET_POR_FORCE_PU_M  (BIT(19))
#define RTC_CNTL_I2C_RESET_POR_FORCE_PU_V  0x1
#define RTC_CNTL_I2C_RESET_POR_FORCE_PU_S  19
/* RTC_CNTL_I2C_RESET_POR_FORCE_PD:R/W；位位置：[18]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_I2C_RESET_POR_FORCE_PD  (BIT(18))
#define RTC_CNTL_I2C_RESET_POR_FORCE_PD_M  (BIT(18))
#define RTC_CNTL_I2C_RESET_POR_FORCE_PD_V  0x1
#define RTC_CNTL_I2C_RESET_POR_FORCE_PD_S  18
/* RTC_CNTL-XPD_TRX-FORCE_PU:R/W；位位置：[17]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_XPD_TRX_FORCE_PU  (BIT(17))
#define RTC_CNTL_XPD_TRX_FORCE_PU_M  (BIT(17))
#define RTC_CNTL_XPD_TRX_FORCE_PU_V  0x1
#define RTC_CNTL_XPD_TRX_FORCE_PU_S  17
/* RTC_CNTL-XPD_TRX-FORCE_PD:R/W；位位置：[16]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_XPD_TRX_FORCE_PD  (BIT(16))
#define RTC_CNTL_XPD_TRX_FORCE_PD_M  (BIT(16))
#define RTC_CNTL_XPD_TRX_FORCE_PD_V  0x1
#define RTC_CNTL_XPD_TRX_FORCE_PD_S  16

#define RTC_CNTL_RESET_STATE_REG          (DR_REG_RTCCNTL_BASE + 0x0038)
/* RTC_CNTL_dereset_MASK_PROCPU:R/W；位位置：[25]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DRESET_MASK_PROCPU  (BIT(25))
#define RTC_CNTL_DRESET_MASK_PROCPU_M  (BIT(25))
#define RTC_CNTL_DRESET_MASK_PROCPU_V  0x1
#define RTC_CNTL_DRESET_MASK_PROCPU_S  25
/* RTC_CNTL_dereset_MASK_APPCPU:R/W；位位置：[24]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DRESET_MASK_APPCPU  (BIT(24))
#define RTC_CNTL_DRESET_MASK_APPCPU_M  (BIT(24))
#define RTC_CNTL_DRESET_MASK_APPCPU_V  0x1
#define RTC_CNTL_DRESET_MASK_APPCPU_S  24
/* RTC_CNTL-JTAG_RESET_FLAG_CLR_APPCPU:WO；位位置：[23]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_JTAG_RESET_FLAG_CLR_APPCPU  (BIT(23))
#define RTC_CNTL_JTAG_RESET_FLAG_CLR_APPCPU_M  (BIT(23))
#define RTC_CNTL_JTAG_RESET_FLAG_CLR_APPCPU_V  0x1
#define RTC_CNTL_JTAG_RESET_FLAG_CLR_APPCPU_S  23
/* RTC_CNTL-JTAG_RESET_FLAG_CLR_PROCPU:WO；位位置：[22]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_JTAG_RESET_FLAG_CLR_PROCPU  (BIT(22))
#define RTC_CNTL_JTAG_RESET_FLAG_CLR_PROCPU_M  (BIT(22))
#define RTC_CNTL_JTAG_RESET_FLAG_CLR_PROCPU_V  0x1
#define RTC_CNTL_JTAG_RESET_FLAG_CLR_PROCPU_S  22
/* RTC_CNTL-JTAG_RESET_FLAG_APPCPU:RO；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_JTAG_RESET_FLAG_APPCPU  (BIT(21))
#define RTC_CNTL_JTAG_RESET_FLAG_APPCPU_M  (BIT(21))
#define RTC_CNTL_JTAG_RESET_FLAG_APPCPU_V  0x1
#define RTC_CNTL_JTAG_RESET_FLAG_APPCPU_S  21
/* RTC_CNTL-JTAG_RESET_FLAG_procp:RO；位位置：[20]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_JTAG_RESET_FLAG_PROCPU  (BIT(20))
#define RTC_CNTL_JTAG_RESET_FLAG_PROCPU_M  (BIT(20))
#define RTC_CNTL_JTAG_RESET_FLAG_PROCPU_V  0x1
#define RTC_CNTL_JTAG_RESET_FLAG_PROCPU_S  20
/* RTC_CNTL_OCD暂停重置过程：R/W；位位置：[19]；默认值：1’b0；*/
/*description:PROCPU OcdHaltReset*/
#define RTC_CNTL_OCD_HALT_ON_RESET_PROCPU  (BIT(19))
#define RTC_CNTL_OCD_HALT_ON_RESET_PROCPU_M  (BIT(19))
#define RTC_CNTL_OCD_HALT_ON_RESET_PROCPU_V  0x1
#define RTC_CNTL_OCD_HALT_ON_RESET_PROCPU_S  19
/* RTC_CNTL_OCD暂停_重置_应用cpu：R/W；位位置：[18]；默认值：1’b0；*/
/*description:APPCPU OcdHaltReset*/
#define RTC_CNTL_OCD_HALT_ON_RESET_APPCPU  (BIT(18))
#define RTC_CNTL_OCD_HALT_ON_RESET_APPCPU_M  (BIT(18))
#define RTC_CNTL_OCD_HALT_ON_RESET_APPCPU_V  0x1
#define RTC_CNTL_OCD_HALT_ON_RESET_APPCPU_S  18
/* RTC_CNTL_ALL_RESET_FLAG_CLR_APPCPU:WO；位位置：[17]；默认值：1’b0；*/
/*description:清除APP CPU复位标志*/
#define RTC_CNTL_ALL_RESET_FLAG_CLR_APPCPU  (BIT(17))
#define RTC_CNTL_ALL_RESET_FLAG_CLR_APPCPU_M  (BIT(17))
#define RTC_CNTL_ALL_RESET_FLAG_CLR_APPCPU_V  0x1
#define RTC_CNTL_ALL_RESET_FLAG_CLR_APPCPU_S  17
/* RTC_CNTL_ALL_RESET_FLAG_CLR_PROCPU:WO；位位置：[16]；默认值：1’b0；*/
/*description:清除PRO CPU reset_flag*/
#define RTC_CNTL_ALL_RESET_FLAG_CLR_PROCPU  (BIT(16))
#define RTC_CNTL_ALL_RESET_FLAG_CLR_PROCPU_M  (BIT(16))
#define RTC_CNTL_ALL_RESET_FLAG_CLR_PROCPU_V  0x1
#define RTC_CNTL_ALL_RESET_FLAG_CLR_PROCPU_S  16
/* RTC_CNTL_ALL_RESET_FLAG_APPCPU:RO；位位置：[15]；默认值：1’b0；*/
/*description:APP CPU复位标志*/
#define RTC_CNTL_ALL_RESET_FLAG_APPCPU  (BIT(15))
#define RTC_CNTL_ALL_RESET_FLAG_APPCPU_M  (BIT(15))
#define RTC_CNTL_ALL_RESET_FLAG_APPCPU_V  0x1
#define RTC_CNTL_ALL_RESET_FLAG_APPCPU_S  15
/* RTC_CNTL_ALL_RESET_FLAG_procp:RO；位位置：[14]；默认值：1’b0；*/
/*description:PRO CPU reset_flag*/
#define RTC_CNTL_ALL_RESET_FLAG_PROCPU  (BIT(14))
#define RTC_CNTL_ALL_RESET_FLAG_PROCPU_M  (BIT(14))
#define RTC_CNTL_ALL_RESET_FLAG_PROCPU_V  0x1
#define RTC_CNTL_ALL_RESET_FLAG_PROCPU_S  14
/* RTC_CNTL_STAT_VECTOR_SEL_PROCPU:R/W；位位置：[13]；默认值：1’b1；*/
/*description:PRO CPU状态向量sel*/
#define RTC_CNTL_STAT_VECTOR_SEL_PROCPU  (BIT(13))
#define RTC_CNTL_STAT_VECTOR_SEL_PROCPU_M  (BIT(13))
#define RTC_CNTL_STAT_VECTOR_SEL_PROCPU_V  0x1
#define RTC_CNTL_STAT_VECTOR_SEL_PROCPU_S  13
/* RTC_CNTL_STAT_VECTOR_SEL_APPCPU:R/W；位位置：[12]；默认值：1’b1；*/
/*description:APP CPU状态向量sel*/
#define RTC_CNTL_STAT_VECTOR_SEL_APPCPU  (BIT(12))
#define RTC_CNTL_STAT_VECTOR_SEL_APPCPU_M  (BIT(12))
#define RTC_CNTL_STAT_VECTOR_SEL_APPCPU_V  0x1
#define RTC_CNTL_STAT_VECTOR_SEL_APPCPU_S  12
/* RTC_cntlreset_CAUSE_APPCPU:RO；位位置：[11:6]；默认值：0；*/
/*description:APP CPU复位原因*/
#define RTC_CNTL_RESET_CAUSE_APPCPU  0x0000003F
#define RTC_CNTL_RESET_CAUSE_APPCPU_M  ((RTC_CNTL_RESET_CAUSE_APPCPU_V)<<(RTC_CNTL_RESET_CAUSE_APPCPU_S))
#define RTC_CNTL_RESET_CAUSE_APPCPU_V  0x3F
#define RTC_CNTL_RESET_CAUSE_APPCPU_S  6
/* RTC_cntlreset_CAUSE_procp:RO；比特位置：[5:0]；默认值：0；*/
/*description:PRO CPU复位原因*/
#define RTC_CNTL_RESET_CAUSE_PROCPU  0x0000003F
#define RTC_CNTL_RESET_CAUSE_PROCPU_M  ((RTC_CNTL_RESET_CAUSE_PROCPU_V)<<(RTC_CNTL_RESET_CAUSE_PROCPU_S))
#define RTC_CNTL_RESET_CAUSE_PROCPU_V  0x3F
#define RTC_CNTL_RESET_CAUSE_PROCPU_S  0

#define RTC_CNTL_WAKEUP_STATE_REG          (DR_REG_RTCCNTL_BASE + 0x003C)
/* RTC_CNTL-WAKEUP_ENA:R/W；比特位置：[31:13]；默认值：18'b1100；*/
/*描述：唤醒启用位图*/
#define RTC_CNTL_WAKEUP_ENA  0x0007FFFF
#define RTC_CNTL_WAKEUP_ENA_M  ((RTC_CNTL_WAKEUP_ENA_V)<<(RTC_CNTL_WAKEUP_ENA_S))
#define RTC_CNTL_WAKEUP_ENA_V  0x7FFFF
#define RTC_CNTL_WAKEUP_ENA_S  13

#define RTC_CNTL_INT_ENA_REG          (DR_REG_RTCCNTL_BASE + 0x0040)
/* RTC_CNTL-VSET_DCDC_DONE_INT_ENA:R/W；位位置：[22]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_M  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_V  0x1
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_S  22
/* RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA：；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_M  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_V  0x1
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_S  21
/* RTC_CNTL_bpll_CAL_INT_ENA:R/W；位位置：[20]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BBPLL_CAL_INT_ENA  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_ENA_M  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_ENA_V  0x1
#define RTC_CNTL_BBPLL_CAL_INT_ENA_S  20
/* RTC_CNTL-gill_DET_INT_ENA:R/W；位位置：[19]；默认值：1’b0；*/
/*description:enbale gitch det中断*/
#define RTC_CNTL_GLITCH_DET_INT_ENA  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_ENA_M  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_ENA_V  0x1
#define RTC_CNTL_GLITCH_DET_INT_ENA_S  19
/* RTC_CNTL-XTAL32K_DEAD_INT_ENA:R/W；位位置：[16]；默认值：1’b0；*/
/*描述：启用xtal32k_adead中断*/
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_M  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_V  0x1
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_S  16
/* RTC_CNTL_SWD_INT_ENA:R/W；位位置：[15]；默认值：1’b0；*/
/*描述：启用超级看门狗中断*/
#define RTC_CNTL_SWD_INT_ENA  (BIT(15))
#define RTC_CNTL_SWD_INT_ENA_M  (BIT(15))
#define RTC_CNTL_SWD_INT_ENA_V  0x1
#define RTC_CNTL_SWD_INT_ENA_S  15
/* RTC_CNTL_MAIN_TIMER_INT_ENA:R/W；位位置：[10]；默认值：1’b0；*/
/*description:启用RTC主计时器中断*/
#define RTC_CNTL_MAIN_TIMER_INT_ENA  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_ENA_M  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_ENA_V  0x1
#define RTC_CNTL_MAIN_TIMER_INT_ENA_S  10
/* RTC_CNTL_BROWN_OUT_INT_ENA:R/W；位位置：[9]；默认值：1’b0；*/
/*描述：启用棕色中断*/
#define RTC_CNTL_BROWN_OUT_INT_ENA  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_ENA_M  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_ENA_V  0x1
#define RTC_CNTL_BROWN_OUT_INT_ENA_S  9
/* RTC_CNTL_WDT_INT_ENA:R/W；位位置：[3]；默认值：1’b0；*/
/*description:启用RTC WDT中断*/
#define RTC_CNTL_WDT_INT_ENA  (BIT(3))
#define RTC_CNTL_WDT_INT_ENA_M  (BIT(3))
#define RTC_CNTL_WDT_INT_ENA_V  0x1
#define RTC_CNTL_WDT_INT_ENA_S  3
/* RTC_CNTL_SLP_REJECT_INT_ENA:R/W；位位置：[1]；默认值：1’b0；*/
/*description:启用睡眠拒绝中断*/
#define RTC_CNTL_SLP_REJECT_INT_ENA  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_ENA_M  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_ENA_V  0x1
#define RTC_CNTL_SLP_REJECT_INT_ENA_S  1
/* RTC_CNTL_SLP-WAKEUP_INT_ENA：R/W；位位置：[0]；默认值：1’b0；*/
/*描述：启用睡眠唤醒中断*/
#define RTC_CNTL_SLP_WAKEUP_INT_ENA  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_M  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_V  0x1
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_S  0

#define RTC_CNTL_INT_RAW_REG          (DR_REG_RTCCNTL_BASE + 0x0044)
/* RTC_CNTL-VSET_DCDC_DONE_INT_RAW:RO；位位置：[22]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_DONE_INT_RAW  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_RAW_M  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_RAW_V  0x1
#define RTC_CNTL_VSET_DCDC_DONE_INT_RAW_S  22
/* RTC_CNTL_BLE_COMPARE_WAKE_INT_RAW:RO；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_RAW  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_RAW_M  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_RAW_V  0x1
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_RAW_S  21
/* RTC_CNTL_bpll_CAL_INT_RAW:RO；位位置：[20]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BBPLL_CAL_INT_RAW  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_RAW_M  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_RAW_V  0x1
#define RTC_CNTL_BBPLL_CAL_INT_RAW_S  20
/* RTC_CNTL-gill_DET_INT_RAW:RO；位位置：[19]；默认值：1’b0；*/
/*描述：故障_det_interrupt_raw*/
#define RTC_CNTL_GLITCH_DET_INT_RAW  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_RAW_M  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_RAW_V  0x1
#define RTC_CNTL_GLITCH_DET_INT_RAW_S  19
/* RTC_CNTL-XTAL32K_DEAD_INT_RAW:RO；位位置：[16]；默认值：1’b0；*/
/*description:xtal32k死检测中断raw*/
#define RTC_CNTL_XTAL32K_DEAD_INT_RAW  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_RAW_M  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_RAW_V  0x1
#define RTC_CNTL_XTAL32K_DEAD_INT_RAW_S  16
/* RTC_CNTL_SWD_INT_RAW:RO；位位置：[15]；默认值：1’b0；*/
/*描述：超级看门狗中断raw*/
#define RTC_CNTL_SWD_INT_RAW  (BIT(15))
#define RTC_CNTL_SWD_INT_RAW_M  (BIT(15))
#define RTC_CNTL_SWD_INT_RAW_V  0x1
#define RTC_CNTL_SWD_INT_RAW_S  15
/* RTC_CNTL_MAIN_TIMER_INT_RAW:RO；位位置：[10]；默认值：1’b0；*/
/*description:RTC主计时器中断raw*/
#define RTC_CNTL_MAIN_TIMER_INT_RAW  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_RAW_M  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_RAW_V  0x1
#define RTC_CNTL_MAIN_TIMER_INT_RAW_S  10
/* RTC_CNTL_BROWN_OUT_INT_RAW:RO；位位置：[9]；默认值：1’b0；*/
/*描述：棕色中断原始*/
#define RTC_CNTL_BROWN_OUT_INT_RAW  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_RAW_M  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_RAW_V  0x1
#define RTC_CNTL_BROWN_OUT_INT_RAW_S  9
/* RTC_CNTL_WDT_INT_RAW:RO；位位置：[3]；默认值：1’b0；*/
/*description:RTC WDT中断原始*/
#define RTC_CNTL_WDT_INT_RAW  (BIT(3))
#define RTC_CNTL_WDT_INT_RAW_M  (BIT(3))
#define RTC_CNTL_WDT_INT_RAW_V  0x1
#define RTC_CNTL_WDT_INT_RAW_S  3
/* RTC_CNTL_SLP_REJECT_INT_RAW:RO；位位置：[1]；默认值：1’b0；*/
/*描述：睡眠拒绝中断原始*/
#define RTC_CNTL_SLP_REJECT_INT_RAW  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_RAW_M  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_RAW_V  0x1
#define RTC_CNTL_SLP_REJECT_INT_RAW_S  1
/* RTC_CNTL_SLP-WAKEUP_INT_RAW:RO；位位置：[0]；默认值：1’b0；*/
/*描述：睡眠唤醒中断raw*/
#define RTC_CNTL_SLP_WAKEUP_INT_RAW  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_RAW_M  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_RAW_V  0x1
#define RTC_CNTL_SLP_WAKEUP_INT_RAW_S  0

#define RTC_CNTL_INT_ST_REG          (DR_REG_RTCCNTL_BASE + 0x0048)
/* RTC_CNTL-VSET_DCDC_DONE_INT_RO；位位置：[22]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_DONE_INT_ST  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_ST_M  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_ST_V  0x1
#define RTC_CNTL_VSET_DCDC_DONE_INT_ST_S  22
/* RTC_CNTL_BLE_COMPARE_WAKE_INT_ST:RO；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ST  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ST_M  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ST_V  0x1
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ST_S  21
/* RTC_CNTL_bpll_CAL_INT_ST:RO；位位置：[20]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BBPLL_CAL_INT_ST  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_ST_M  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_ST_V  0x1
#define RTC_CNTL_BBPLL_CAL_INT_ST_S  20
/* RTC_CNTL-gill_DET_INT_ST:RO；位位置：[19]；默认值：1’b0；*/
/*描述：glitch_det_interrupt状态*/
#define RTC_CNTL_GLITCH_DET_INT_ST  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_ST_M  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_ST_V  0x1
#define RTC_CNTL_GLITCH_DET_INT_ST_S  19
/* RTC_CNTL-XTAL32K_DEAD_INT_ST:RO；位位置：[16]；默认值：1’b0；*/
/*description:xtal32k死检测中断状态*/
#define RTC_CNTL_XTAL32K_DEAD_INT_ST  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_ST_M  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_ST_V  0x1
#define RTC_CNTL_XTAL32K_DEAD_INT_ST_S  16
/* RTC_CNTL_SWD_INT_ST:RO；位位置：[15]；默认值：1’b0；*/
/*描述：超级看门狗中断状态*/
#define RTC_CNTL_SWD_INT_ST  (BIT(15))
#define RTC_CNTL_SWD_INT_ST_M  (BIT(15))
#define RTC_CNTL_SWD_INT_ST_V  0x1
#define RTC_CNTL_SWD_INT_ST_S  15
/* RTC_CNTL_MAIN_TIMER_INT_ST:RO；位位置：[10]；默认值：1’b0；*/
/*description:RTC主定时器中断状态*/
#define RTC_CNTL_MAIN_TIMER_INT_ST  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_ST_M  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_ST_V  0x1
#define RTC_CNTL_MAIN_TIMER_INT_ST_S  10
/* RTC_CNTL_BROWN_OUT_INT_ST:RO；位位置：[9]；默认值：1’b0；*/
/*描述：断电中断状态*/
#define RTC_CNTL_BROWN_OUT_INT_ST  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_ST_M  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_ST_V  0x1
#define RTC_CNTL_BROWN_OUT_INT_ST_S  9
/* RTC_CNTL_WDT_INT_ST:RO；位位置：[3]；默认值：1’b0；*/
/*description:RTC WDT中断状态*/
#define RTC_CNTL_WDT_INT_ST  (BIT(3))
#define RTC_CNTL_WDT_INT_ST_M  (BIT(3))
#define RTC_CNTL_WDT_INT_ST_V  0x1
#define RTC_CNTL_WDT_INT_ST_S  3
/* RTC_CNTL_SLP_REJECT_INT_ST:RO；位位置：[1]；默认值：1’b0；*/
/*描述：睡眠拒绝中断状态*/
#define RTC_CNTL_SLP_REJECT_INT_ST  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_ST_M  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_ST_V  0x1
#define RTC_CNTL_SLP_REJECT_INT_ST_S  1
/* RTC_CNTL_SLP-WAKEUP_INT_ST:RO；位位置：[0]；默认值：1’b0；*/
/*描述：睡眠唤醒中断状态*/
#define RTC_CNTL_SLP_WAKEUP_INT_ST  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_ST_M  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_ST_V  0x1
#define RTC_CNTL_SLP_WAKEUP_INT_ST_S  0

#define RTC_CNTL_INT_CLR_REG          (DR_REG_RTCCNTL_BASE + 0x004C)
/* RTC_CNTL-VSET_DCDC_DONE_INT_CLR:WO；位位置：[22]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_DONE_INT_CLR  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_CLR_M  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_CLR_V  0x1
#define RTC_CNTL_VSET_DCDC_DONE_INT_CLR_S  22
/* RTC_CNTL_BLE_COMPARE_WAKE_INT_CLR:WO；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_CLR  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_CLR_M  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_CLR_V  0x1
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_CLR_S  21
/* RTC_CNTL_bpll_CAL_INT_CLR:WO；位位置：[20]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BBPLL_CAL_INT_CLR  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_CLR_M  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_CLR_V  0x1
#define RTC_CNTL_BBPLL_CAL_INT_CLR_S  20
/* RTC_CNTL-gill_DET_INT_CLR:WO；位位置：[19]；默认值：1’b0；*/
/*description:清除故障检测中断状态*/
#define RTC_CNTL_GLITCH_DET_INT_CLR  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_CLR_M  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_CLR_V  0x1
#define RTC_CNTL_GLITCH_DET_INT_CLR_S  19
/* RTC_CNTL-XTAL32K_DEAD_INT_CLR:WO；位位置：[16]；默认值：1’b0；*/
/*description:清除RTC WDT中断状态*/
#define RTC_CNTL_XTAL32K_DEAD_INT_CLR  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_CLR_M  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_CLR_V  0x1
#define RTC_CNTL_XTAL32K_DEAD_INT_CLR_S  16
/* RTC_CNTL_SWD_INT_CLR:WO；位位置：[15]；默认值：1’b0；*/
/*description:清除超级看门狗中断状态*/
#define RTC_CNTL_SWD_INT_CLR  (BIT(15))
#define RTC_CNTL_SWD_INT_CLR_M  (BIT(15))
#define RTC_CNTL_SWD_INT_CLR_V  0x1
#define RTC_CNTL_SWD_INT_CLR_S  15
/* RTC_CNTL_MAIN_TIMER_INT_CLR:WO；位位置：[10]；默认值：1’b0；*/
/*description:清除RTC主计时器中断状态*/
#define RTC_CNTL_MAIN_TIMER_INT_CLR  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_CLR_M  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_CLR_V  0x1
#define RTC_CNTL_MAIN_TIMER_INT_CLR_S  10
/* RTC_CNTL_BROWN_OUT_INT_CLR:WO；位位置：[9]；默认值：1’b0；*/
/*description:清除棕色中断状态*/
#define RTC_CNTL_BROWN_OUT_INT_CLR  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_CLR_M  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_CLR_V  0x1
#define RTC_CNTL_BROWN_OUT_INT_CLR_S  9
/* RTC_CNTL_WDT_INT_CLR:WO；位位置：[3]；默认值：1’b0；*/
/*description:清除RTC WDT中断状态*/
#define RTC_CNTL_WDT_INT_CLR  (BIT(3))
#define RTC_CNTL_WDT_INT_CLR_M  (BIT(3))
#define RTC_CNTL_WDT_INT_CLR_V  0x1
#define RTC_CNTL_WDT_INT_CLR_S  3
/* RTC_CNTL_SLP_REJECT_INT_CLR:WO；位位置：[1]；默认值：1’b0；*/
/*description:清除睡眠拒绝中断状态*/
#define RTC_CNTL_SLP_REJECT_INT_CLR  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_CLR_M  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_CLR_V  0x1
#define RTC_CNTL_SLP_REJECT_INT_CLR_S  1
/* RTC_CNTL_SLP_WAKEUP_INT_CLR:WO；位位置：[0]；默认值：1’b0；*/
/*description:清除睡眠唤醒中断状态*/
#define RTC_CNTL_SLP_WAKEUP_INT_CLR  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_CLR_M  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_CLR_V  0x1
#define RTC_CNTL_SLP_WAKEUP_INT_CLR_S  0

#define RTC_CNTL_STORE0_REG          (DR_REG_RTCCNTL_BASE + 0x0050)
/* RTC_CNTL_SCRATCH0:R/W；位位置：[31:0]；默认值：0；*/
/*说明：*/
#define RTC_CNTL_SCRATCH0  0xFFFFFFFF
#define RTC_CNTL_SCRATCH0_M  ((RTC_CNTL_SCRATCH0_V)<<(RTC_CNTL_SCRATCH0_S))
#define RTC_CNTL_SCRATCH0_V  0xFFFFFFFF
#define RTC_CNTL_SCRATCH0_S  0

#define RTC_CNTL_STORE1_REG          (DR_REG_RTCCNTL_BASE + 0x0054)
/* RTC_CNTL_SCRATCH1:R/W；位位置：[31:0]；默认值：0；*/
/*说明：*/
#define RTC_CNTL_SCRATCH1  0xFFFFFFFF
#define RTC_CNTL_SCRATCH1_M  ((RTC_CNTL_SCRATCH1_V)<<(RTC_CNTL_SCRATCH1_S))
#define RTC_CNTL_SCRATCH1_V  0xFFFFFFFF
#define RTC_CNTL_SCRATCH1_S  0

#define RTC_CNTL_STORE2_REG          (DR_REG_RTCCNTL_BASE + 0x0058)
/* RTC_CNTL_SCRATCH2:R/W；位位置：[31:0]；默认值：0；*/
/*说明：*/
#define RTC_CNTL_SCRATCH2  0xFFFFFFFF
#define RTC_CNTL_SCRATCH2_M  ((RTC_CNTL_SCRATCH2_V)<<(RTC_CNTL_SCRATCH2_S))
#define RTC_CNTL_SCRATCH2_V  0xFFFFFFFF
#define RTC_CNTL_SCRATCH2_S  0

#define RTC_CNTL_STORE3_REG          (DR_REG_RTCCNTL_BASE + 0x005C)
/* RTC_CNTL_SCRATCH3:R/W；位位置：[31:0]；默认值：0；*/
/*说明：*/
#define RTC_CNTL_SCRATCH3  0xFFFFFFFF
#define RTC_CNTL_SCRATCH3_M  ((RTC_CNTL_SCRATCH3_V)<<(RTC_CNTL_SCRATCH3_S))
#define RTC_CNTL_SCRATCH3_V  0xFFFFFFFF
#define RTC_CNTL_SCRATCH3_S  0

#define RTC_CNTL_EXT_XTL_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x0060)
/* RTC_CNTL-XTL_EXT_CTR_EN:R/W；位位置：[31]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_XTL_EXT_CTR_EN  (BIT(31))
#define RTC_CNTL_XTL_EXT_CTR_EN_M  (BIT(31))
#define RTC_CNTL_XTL_EXT_CTR_EN_V  0x1
#define RTC_CNTL_XTL_EXT_CTR_EN_S  31
/* RTC_CNTL-XTL_EXT_CTR_LV:R/W；位位置：[30]；默认值：1’b0；*/
/*description:0:关闭XTAL的高电平*/
#define RTC_CNTL_XTL_EXT_CTR_LV  (BIT(30))
#define RTC_CNTL_XTL_EXT_CTR_LV_M  (BIT(30))
#define RTC_CNTL_XTL_EXT_CTR_LV_V  0x1
#define RTC_CNTL_XTL_EXT_CTR_LV_S  30
/* RTC_CNTL-XTAL32K_GPIO_SEL：R/W；位位置：[23]；默认值：1’b0；*/
/*description:XTAL_32K选择。0：外部XTAL_32K*/
#define RTC_CNTL_XTAL32K_GPIO_SEL  (BIT(23))
#define RTC_CNTL_XTAL32K_GPIO_SEL_M  (BIT(23))
#define RTC_CNTL_XTAL32K_GPIO_SEL_V  0x1
#define RTC_CNTL_XTAL32K_GPIO_SEL_S  23
/* RTC_CNTL_WDT_STATE:RO；比特位置：[22:20]；默认值：3'h0；*/
/*description:32k_wdt的状态*/
#define RTC_CNTL_WDT_STATE  0x00000007
#define RTC_CNTL_WDT_STATE_M  ((RTC_CNTL_WDT_STATE_V)<<(RTC_CNTL_WDT_STATE_S))
#define RTC_CNTL_WDT_STATE_V  0x7
#define RTC_CNTL_WDT_STATE_S  20
/* RTC_CNTL-DAC_XTAL_32K:R/W；比特位置：[19:17]；默认值：3'd3；*/
/*描述：DAC_XTAL_32K*/
#define RTC_CNTL_DAC_XTAL_32K  0x00000007
#define RTC_CNTL_DAC_XTAL_32K_M  ((RTC_CNTL_DAC_XTAL_32K_V)<<(RTC_CNTL_DAC_XTAL_32K_S))
#define RTC_CNTL_DAC_XTAL_32K_V  0x7
#define RTC_CNTL_DAC_XTAL_32K_S  17
/* RTC_CNTL_XPD_XTAL_32K:R/W；位位置：[16]；默认值：1'd0；*/
/*description:XPD_XTAL_32K*/
#define RTC_CNTL_XPD_XTAL_32K  (BIT(16))
#define RTC_CNTL_XPD_XTAL_32K_M  (BIT(16))
#define RTC_CNTL_XPD_XTAL_32K_V  0x1
#define RTC_CNTL_XPD_XTAL_32K_S  16
/* RTC_CNTL_res_XTAL_32K:R/W；比特位置：[15:13]；默认值：3'd3；*/
/*描述：DRES_XTAL_32K*/
#define RTC_CNTL_DRES_XTAL_32K  0x00000007
#define RTC_CNTL_DRES_XTAL_32K_M  ((RTC_CNTL_DRES_XTAL_32K_V)<<(RTC_CNTL_DRES_XTAL_32K_S))
#define RTC_CNTL_DRES_XTAL_32K_V  0x7
#define RTC_CNTL_DRES_XTAL_32K_S  13
/* RTC_CNTL_DGM-XTAL_32K:R/W；比特位置：[12:10]；默认值：3'd3；*/
/*description:xtal_32k gm控件*/
#define RTC_CNTL_DGM_XTAL_32K  0x00000007
#define RTC_CNTL_DGM_XTAL_32K_M  ((RTC_CNTL_DGM_XTAL_32K_V)<<(RTC_CNTL_DGM_XTAL_32K_S))
#define RTC_CNTL_DGM_XTAL_32K_V  0x7
#define RTC_CNTL_DGM_XTAL_32K_S  10
/* RTC_CNTL_DBUF_XTAL_32K:R/W；位位置：[9]；默认值：1’b0；*/
/*description:0：单端缓冲区1：差分缓冲区*/
#define RTC_CNTL_DBUF_XTAL_32K  (BIT(9))
#define RTC_CNTL_DBUF_XTAL_32K_M  (BIT(9))
#define RTC_CNTL_DBUF_XTAL_32K_V  0x1
#define RTC_CNTL_DBUF_XTAL_32K_S  9
/* RTC_CNTL_ENCKINIT_txtal_32K:R/W；位位置：[8]；默认值：1’b0；*/
/*描述：应用内部时钟帮助xtal 32k启动*/
#define RTC_CNTL_ENCKINIT_XTAL_32K  (BIT(8))
#define RTC_CNTL_ENCKINIT_XTAL_32K_M  (BIT(8))
#define RTC_CNTL_ENCKINIT_XTAL_32K_V  0x1
#define RTC_CNTL_ENCKINIT_XTAL_32K_S  8
/* RTC_CNTL-XTAL32K_XPD-FORCE:R/W；位位置：[7]；默认值：1’b1；*/
/*说明：通过sw或fsm控制Xtal 32k xpd*/
#define RTC_CNTL_XTAL32K_XPD_FORCE  (BIT(7))
#define RTC_CNTL_XTAL32K_XPD_FORCE_M  (BIT(7))
#define RTC_CNTL_XTAL32K_XPD_FORCE_V  0x1
#define RTC_CNTL_XTAL32K_XPD_FORCE_S  7
/* RTC_CNTL-XTAL32K_AUTO_RETURN:R/W；位位置：[6]；默认值：1’b0；*/
/*描述：当xtal重新启动时，xtal 32k切换回xtal*/
#define RTC_CNTL_XTAL32K_AUTO_RETURN  (BIT(6))
#define RTC_CNTL_XTAL32K_AUTO_RETURN_M  (BIT(6))
#define RTC_CNTL_XTAL32K_AUTO_RETURN_V  0x1
#define RTC_CNTL_XTAL32K_AUTO_RETURN_S  6
/* RTC_CNTL-XTAL32K_AUTO_RESTART：R/W；位位置：[5]；默认值：1’b0；*/
/*描述：xtal死后，xtal 32k重新启动xtal*/
#define RTC_CNTL_XTAL32K_AUTO_RESTART  (BIT(5))
#define RTC_CNTL_XTAL32K_AUTO_RESTART_M  (BIT(5))
#define RTC_CNTL_XTAL32K_AUTO_RESTART_V  0x1
#define RTC_CNTL_XTAL32K_AUTO_RESTART_S  5
/* RTC_CNTL-XTAL32K_AUTO_BACKUP:R/W；位位置：[4]；默认值：1’b0；*/
/*描述：xtal死时，xtal 32k切换到备份时钟*/
#define RTC_CNTL_XTAL32K_AUTO_BACKUP  (BIT(4))
#define RTC_CNTL_XTAL32K_AUTO_BACKUP_M  (BIT(4))
#define RTC_CNTL_XTAL32K_AUTO_BACKUP_V  0x1
#define RTC_CNTL_XTAL32K_AUTO_BACKUP_S  4
/* RTC_CNTL-XTAL32K_EXT_CLK_FO:R/W；位位置：[3]；默认值：1’b0；*/
/*描述：xtal 32k外部xtal时钟强制开启*/
#define RTC_CNTL_XTAL32K_EXT_CLK_FO  (BIT(3))
#define RTC_CNTL_XTAL32K_EXT_CLK_FO_M  (BIT(3))
#define RTC_CNTL_XTAL32K_EXT_CLK_FO_V  0x1
#define RTC_CNTL_XTAL32K_EXT_CLK_FO_S  3
/* RTC_CNTL-XTAL32K_WDT_RESET:R/W；位位置：[2]；默认值：1’b0；*/
/*描述：xtal 32k看门狗开关复位*/
#define RTC_CNTL_XTAL32K_WDT_RESET  (BIT(2))
#define RTC_CNTL_XTAL32K_WDT_RESET_M  (BIT(2))
#define RTC_CNTL_XTAL32K_WDT_RESET_V  0x1
#define RTC_CNTL_XTAL32K_WDT_RESET_S  2
/* RTC_CNTL-XTAL32K_WDT_CLK_FO:R/W；位位置：[1]；默认值：1’b0；*/
/*描述：xtal 32k看门狗时钟强制开启*/
#define RTC_CNTL_XTAL32K_WDT_CLK_FO  (BIT(1))
#define RTC_CNTL_XTAL32K_WDT_CLK_FO_M  (BIT(1))
#define RTC_CNTL_XTAL32K_WDT_CLK_FO_V  0x1
#define RTC_CNTL_XTAL32K_WDT_CLK_FO_S  1
/* RTC_CNTL-XTAL32K_WDT_EN:R/W；位位置：[0]；默认值：1’b0；*/
/*描述：xtal 32k看门狗启用*/
#define RTC_CNTL_XTAL32K_WDT_EN  (BIT(0))
#define RTC_CNTL_XTAL32K_WDT_EN_M  (BIT(0))
#define RTC_CNTL_XTAL32K_WDT_EN_V  0x1
#define RTC_CNTL_XTAL32K_WDT_EN_S  0

#define RTC_CNTL_EXT_WAKEUP_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x0064)
/* RTC_CNTL_GPIO_唤醒过滤器：R/W；位位置：[31]；默认值：1’b0；*/
/*description:为gpio唤醒事件启用筛选器*/
#define RTC_CNTL_GPIO_WAKEUP_FILTER  (BIT(31))
#define RTC_CNTL_GPIO_WAKEUP_FILTER_M  (BIT(31))
#define RTC_CNTL_GPIO_WAKEUP_FILTER_V  0x1
#define RTC_CNTL_GPIO_WAKEUP_FILTER_S  31

#define RTC_CNTL_SLP_REJECT_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x0068)
/* RTC_CNTL_dep_SLP_REJECT_EN:R/W；位位置：[31]；默认值：1’b0；*/
/*description:启用深度睡眠拒绝*/
#define RTC_CNTL_DEEP_SLP_REJECT_EN  (BIT(31))
#define RTC_CNTL_DEEP_SLP_REJECT_EN_M  (BIT(31))
#define RTC_CNTL_DEEP_SLP_REJECT_EN_V  0x1
#define RTC_CNTL_DEEP_SLP_REJECT_EN_S  31
/* RTC_CNTL_LIGHT_SLP_REJECT_EN:R/W；位位置：[30]；默认值：1’b0；*/
/*description:启用轻睡眠拒绝*/
#define RTC_CNTL_LIGHT_SLP_REJECT_EN  (BIT(30))
#define RTC_CNTL_LIGHT_SLP_REJECT_EN_M  (BIT(30))
#define RTC_CNTL_LIGHT_SLP_REJECT_EN_V  0x1
#define RTC_CNTL_LIGHT_SLP_REJECT_EN_S  30
/* RTC_CNTL_SLEEP_project_ENA:R/W；比特位置：[29:11]；默认值：18'd0；*/
/*描述：睡眠拒绝启用*/
#define RTC_CNTL_SLEEP_REJECT_ENA  0x0007FFFF
#define RTC_CNTL_SLEEP_REJECT_ENA_M  ((RTC_CNTL_SLEEP_REJECT_ENA_V)<<(RTC_CNTL_SLEEP_REJECT_ENA_S))
#define RTC_CNTL_SLEEP_REJECT_ENA_V  0x7FFFF
#define RTC_CNTL_SLEEP_REJECT_ENA_S  11

#define RTC_CNTL_CPU_PERIOD_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x006C)
/* RTC_CNTL_cuperiod_SEL:R/W；比特位置：[31:30]；默认值：2’00；*/
/*说明：*/
#define RTC_CNTL_CPUPERIOD_SEL  0x00000003
#define RTC_CNTL_CPUPERIOD_SEL_M  ((RTC_CNTL_CPUPERIOD_SEL_V)<<(RTC_CNTL_CPUPERIOD_SEL_S))
#define RTC_CNTL_CPUPERIOD_SEL_V  0x3
#define RTC_CNTL_CPUPERIOD_SEL_S  30
/* RTC_CNTL_cusel_CONF:R/W；位位置：[29]；默认值：1’b0；*/
/*description:CPU sel选项*/
#define RTC_CNTL_CPUSEL_CONF  (BIT(29))
#define RTC_CNTL_CPUSEL_CONF_M  (BIT(29))
#define RTC_CNTL_CPUSEL_CONF_V  0x1
#define RTC_CNTL_CPUSEL_CONF_S  29

#define RTC_CNTL_CLK_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x0070)
/* RTC_CNTL_ANA_CLK_RTC_SEL:R/W；比特位置：[31:30]；默认值：2'd0；*/
/*说明：*/
#define RTC_CNTL_ANA_CLK_RTC_SEL  0x00000003
#define RTC_CNTL_ANA_CLK_RTC_SEL_M  ((RTC_CNTL_ANA_CLK_RTC_SEL_V)<<(RTC_CNTL_ANA_CLK_RTC_SEL_S))
#define RTC_CNTL_ANA_CLK_RTC_SEL_V  0x3
#define RTC_CNTL_ANA_CLK_RTC_SEL_S  30
/* RTC_CNTL_FAST_CLK_RTC_SEL:R/W；位位置：[29]；默认值：1’b0；*/
/*description:fast_clk_rtc sel。0:XTAL分区4*/
#define RTC_CNTL_FAST_CLK_RTC_SEL  (BIT(29))
#define RTC_CNTL_FAST_CLK_RTC_SEL_M  (BIT(29))
#define RTC_CNTL_FAST_CLK_RTC_SEL_V  0x1
#define RTC_CNTL_FAST_CLK_RTC_SEL_S  29
/* RTC_CNTL-XTAL_GLOBAL_FORCE_noting:R/W；位位置：[28]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_XTAL_GLOBAL_FORCE_NOGATING  (BIT(28))
#define RTC_CNTL_XTAL_GLOBAL_FORCE_NOGATING_M  (BIT(28))
#define RTC_CNTL_XTAL_GLOBAL_FORCE_NOGATING_V  0x1
#define RTC_CNTL_XTAL_GLOBAL_FORCE_NOGATING_S  28
/* RTC_CNTL-XTAL_GLOBAL_FORCE_GATING:R/W；位位置：[27]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_XTAL_GLOBAL_FORCE_GATING  (BIT(27))
#define RTC_CNTL_XTAL_GLOBAL_FORCE_GATING_M  (BIT(27))
#define RTC_CNTL_XTAL_GLOBAL_FORCE_GATING_V  0x1
#define RTC_CNTL_XTAL_GLOBAL_FORCE_GATING_S  27
/* RTC_CNTL_CK8M_FORCE_PU:R/W；位位置：[26]；默认值：1'd0；*/
/*说明：CK8M强制加电*/
#define RTC_CNTL_CK8M_FORCE_PU  (BIT(26))
#define RTC_CNTL_CK8M_FORCE_PU_M  (BIT(26))
#define RTC_CNTL_CK8M_FORCE_PU_V  0x1
#define RTC_CNTL_CK8M_FORCE_PU_S  26
/* RTC_CNTL_CK8M_FORCE_PD:R/W；位位置：[25]；默认值：1'd0；*/
/*描述：CK8M强制断电*/
#define RTC_CNTL_CK8M_FORCE_PD  (BIT(25))
#define RTC_CNTL_CK8M_FORCE_PD_M  (BIT(25))
#define RTC_CNTL_CK8M_FORCE_PD_V  0x1
#define RTC_CNTL_CK8M_FORCE_PD_S  25
/* RTC_CNTL_CK8M_DFREQ:R/W；比特位置：[24:15]；默认值：10'd600；*/
/*说明：CK8M_DFREQ*/
#define RTC_CNTL_CK8M_DFREQ  0x000003FF
#define RTC_CNTL_CK8M_DFREQ_M  ((RTC_CNTL_CK8M_DFREQ_V)<<(RTC_CNTL_CK8M_DFREQ_S))
#define RTC_CNTL_CK8M_DFREQ_V  0x3FF
#define RTC_CNTL_CK8M_DFREQ_S  15
/* RTC_CNTL_CK8M_FORCE_noting:R/W；位位置：[14]；默认值：1'd0；*/
/*描述：CK8M在睡眠期间强制无门控*/
#define RTC_CNTL_CK8M_FORCE_NOGATING  (BIT(14))
#define RTC_CNTL_CK8M_FORCE_NOGATING_M  (BIT(14))
#define RTC_CNTL_CK8M_FORCE_NOGATING_V  0x1
#define RTC_CNTL_CK8M_FORCE_NOGATING_S  14
/* RTC_CNTL-XTAL-FORCE_noting:R/W；位位置：[13]；默认值：1'd0；*/
/*description:XTAL在睡眠期间强制无门控*/
#define RTC_CNTL_XTAL_FORCE_NOGATING  (BIT(13))
#define RTC_CNTL_XTAL_FORCE_NOGATING_M  (BIT(13))
#define RTC_CNTL_XTAL_FORCE_NOGATING_V  0x1
#define RTC_CNTL_XTAL_FORCE_NOGATING_S  13
/* RTC_CNTL_ckm_DIV_SEL:R/W；比特位置：[12:10]；默认值：3'd3；*/
/*描述：除法器=reg_ck8m_div_sel+1*/
#define RTC_CNTL_CK8M_DIV_SEL  0x00000007
#define RTC_CNTL_CK8M_DIV_SEL_M  ((RTC_CNTL_CK8M_DIV_SEL_V)<<(RTC_CNTL_CK8M_DIV_SEL_S))
#define RTC_CNTL_CK8M_DIV_SEL_V  0x7
#define RTC_CNTL_CK8M_DIV_SEL_S  10
/* RTC_CNTL_DIG_CLK8M_EN:R/W；位位置：[6]；默认值：1'd0；*/
/*description:为数字核心启用CK8M（与RTC核心没有关系）*/
#define RTC_CNTL_DIG_CLK8M_EN  (BIT(6))
#define RTC_CNTL_DIG_CLK8M_EN_M  (BIT(6))
#define RTC_CNTL_DIG_CLK8M_EN_V  0x1
#define RTC_CNTL_DIG_CLK8M_EN_S  6
/* RTC_CNTL_DIG_RC32K_EN:R/W；位位置：[5]；默认值：1'd1；*/
/*description:为数字核心启用RC32K（与RTC核心没有关系）*/
#define RTC_CNTL_DIG_RC32K_EN  (BIT(5))
#define RTC_CNTL_DIG_RC32K_EN_M  (BIT(5))
#define RTC_CNTL_DIG_RC32K_EN_V  0x1
#define RTC_CNTL_DIG_RC32K_EN_S  5
/* RTC_CNTL_DIG_XTAL32K_EN:R/W；位位置：[4]；默认值：1'd0；*/
/*description:为数字核心启用CK_XTAL_32K（与RTC核心没有关系）*/
#define RTC_CNTL_DIG_XTAL32K_EN  (BIT(4))
#define RTC_CNTL_DIG_XTAL32K_EN_M  (BIT(4))
#define RTC_CNTL_DIG_XTAL32K_EN_V  0x1
#define RTC_CNTL_DIG_XTAL32K_EN_S  4
/* RTC_CNTL_ckm_DIV_SEL_VLD:R/W；位位置：[3]；默认值：1’b1；*/
/*描述：用于同步reg_ck8m_div_sel总线。设置reg_ck8m_div_sel之前清除vld*/
#define RTC_CNTL_CK8M_DIV_SEL_VLD  (BIT(3))
#define RTC_CNTL_CK8M_DIV_SEL_VLD_M  (BIT(3))
#define RTC_CNTL_CK8M_DIV_SEL_VLD_V  0x1
#define RTC_CNTL_CK8M_DIV_SEL_VLD_S  3
/* RTC_CNTL_EFUSE_CLK_FORCE_noting:R/W；位位置：[2]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_EFUSE_CLK_FORCE_NOGATING  (BIT(2))
#define RTC_CNTL_EFUSE_CLK_FORCE_NOGATING_M  (BIT(2))
#define RTC_CNTL_EFUSE_CLK_FORCE_NOGATING_V  0x1
#define RTC_CNTL_EFUSE_CLK_FORCE_NOGATING_S  2
/* RTC_CNTL_EFUSE_CLK_FORCE_GATING:R/W；位位置：[1]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_EFUSE_CLK_FORCE_GATING  (BIT(1))
#define RTC_CNTL_EFUSE_CLK_FORCE_GATING_M  (BIT(1))
#define RTC_CNTL_EFUSE_CLK_FORCE_GATING_V  0x1
#define RTC_CNTL_EFUSE_CLK_FORCE_GATING_S  1
/* RTC_CNTL_BLE_TMR_RST:R/W；位位置：[0]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BLE_TMR_RST  (BIT(0))
#define RTC_CNTL_BLE_TMR_RST_M  (BIT(0))
#define RTC_CNTL_BLE_TMR_RST_V  0x1
#define RTC_CNTL_BLE_TMR_RST_S  0

#define RTC_CNTL_SLOW_CLK_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x0074)
/* RTC_CNTL_SLOW_CLK_NEXT_EDGE:R/W；位位置：[31]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_SLOW_CLK_NEXT_EDGE  (BIT(31))
#define RTC_CNTL_SLOW_CLK_NEXT_EDGE_M  (BIT(31))
#define RTC_CNTL_SLOW_CLK_NEXT_EDGE_V  0x1
#define RTC_CNTL_SLOW_CLK_NEXT_EDGE_S  31
/* RTC_CNTL_ANA_CLK_DIV:R/W；位位置：[30:23]；默认值：8'd0；*/
/*说明：*/
#define RTC_CNTL_ANA_CLK_DIV  0x000000FF
#define RTC_CNTL_ANA_CLK_DIV_M  ((RTC_CNTL_ANA_CLK_DIV_V)<<(RTC_CNTL_ANA_CLK_DIV_S))
#define RTC_CNTL_ANA_CLK_DIV_V  0xFF
#define RTC_CNTL_ANA_CLK_DIV_S  23
/* RTC_CNTL_ANA_CLK_DIV_VLD:R/W；位位置：[22]；默认值：1’b1；*/
/*description:用于同步div总线。在设置reg_rtc_ana_clk_div之前清除vld*/
#define RTC_CNTL_ANA_CLK_DIV_VLD  (BIT(22))
#define RTC_CNTL_ANA_CLK_DIV_VLD_M  (BIT(22))
#define RTC_CNTL_ANA_CLK_DIV_VLD_V  0x1
#define RTC_CNTL_ANA_CLK_DIV_VLD_S  22
/* RTC_CNTL_ANA_CLK_PD_IDLE:R/W；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_ANA_CLK_PD_IDLE  (BIT(21))
#define RTC_CNTL_ANA_CLK_PD_IDLE_M  (BIT(21))
#define RTC_CNTL_ANA_CLK_PD_IDLE_V  0x1
#define RTC_CNTL_ANA_CLK_PD_IDLE_S  21
/* RTC_CNTL_ANA_CLK_PD_MONITOR:R/W；位位置：[20]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_ANA_CLK_PD_MONITOR  (BIT(20))
#define RTC_CNTL_ANA_CLK_PD_MONITOR_M  (BIT(20))
#define RTC_CNTL_ANA_CLK_PD_MONITOR_V  0x1
#define RTC_CNTL_ANA_CLK_PD_MONITOR_S  20
/* RTC_CNTL_ANA_CLK_PD_SLP:R/W；位位置：[19]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_ANA_CLK_PD_SLP  (BIT(19))
#define RTC_CNTL_ANA_CLK_PD_SLP_M  (BIT(19))
#define RTC_CNTL_ANA_CLK_PD_SLP_V  0x1
#define RTC_CNTL_ANA_CLK_PD_SLP_S  19

#define RTC_CNTL_SDIO_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x0078)
/* RTC_CNTL-XPD_SDIO_REG:R/W；位位置：[31]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_XPD_SDIO_REG  (BIT(31))
#define RTC_CNTL_XPD_SDIO_REG_M  (BIT(31))
#define RTC_CNTL_XPD_SDIO_REG_V  0x1
#define RTC_CNTL_XPD_SDIO_REG_S  31
/* RTC_CNTL_DREFH_SDIO:R/W；位位置：[30:29]；默认值：2’00；*/
/*description:DREFH_SDIO的SW选项。仅当reg_sdio_force=1时激活*/
#define RTC_CNTL_DREFH_SDIO  0x00000003
#define RTC_CNTL_DREFH_SDIO_M  ((RTC_CNTL_DREFH_SDIO_V)<<(RTC_CNTL_DREFH_SDIO_S))
#define RTC_CNTL_DREFH_SDIO_V  0x3
#define RTC_CNTL_DREFH_SDIO_S  29
/* RTC_CNTL_defm_广播：R/W；位位置：[28:27]；默认值：2'b01；*/
/*description:DREFM_SDIO的SW选项。仅当reg_sdio_force=1时激活*/
#define RTC_CNTL_DREFM_SDIO  0x00000003
#define RTC_CNTL_DREFM_SDIO_M  ((RTC_CNTL_DREFM_SDIO_V)<<(RTC_CNTL_DREFM_SDIO_S))
#define RTC_CNTL_DREFM_SDIO_V  0x3
#define RTC_CNTL_DREFM_SDIO_S  27
/* RTC_CNTL_DREFL_SDIO:R/W；比特位置：[26:25]；默认值：2'b01；*/
/*description:DREFL_SDIO的SW选项。仅当reg_sdio_force=1时激活*/
#define RTC_CNTL_DREFL_SDIO  0x00000003
#define RTC_CNTL_DREFL_SDIO_M  ((RTC_CNTL_DREFL_SDIO_V)<<(RTC_CNTL_DREFL_SDIO_S))
#define RTC_CNTL_DREFL_SDIO_V  0x3
#define RTC_CNTL_DREFL_SDIO_S  25
/* RTC_CNTL_REG1P8_READY:RO；位位置：[24]；默认值：1'd0；*/
/*description:REG1P8_READY的只读寄存器*/
#define RTC_CNTL_REG1P8_READY  (BIT(24))
#define RTC_CNTL_REG1P8_READY_M  (BIT(24))
#define RTC_CNTL_REG1P8_READY_V  0x1
#define RTC_CNTL_REG1P8_READY_S  24
/* RTC_CNTL_SDIO_TIEH:R/W；位位置：[23]；默认值：1'd1；*/
/*description:SDIO_TIEH的SW选项。仅当reg_sdio_force=1时激活*/
#define RTC_CNTL_SDIO_TIEH  (BIT(23))
#define RTC_CNTL_SDIO_TIEH_M  (BIT(23))
#define RTC_CNTL_SDIO_TIEH_V  0x1
#define RTC_CNTL_SDIO_TIEH_S  23
/* RTC_CNTL_SDIO_FORCE:R/W；位位置：[22]；默认值：1'd0；*/
/*description:1：使用SW选项控制SDIO_REG*/
#define RTC_CNTL_SDIO_FORCE  (BIT(22))
#define RTC_CNTL_SDIO_FORCE_M  (BIT(22))
#define RTC_CNTL_SDIO_FORCE_V  0x1
#define RTC_CNTL_SDIO_FORCE_S  22
/* RTC_CNTL_SDIO_PD_EN:R/W；位位置：[21]；默认值：1'd1；*/
/*描述：睡眠状态下关闭SDIO_REG。仅当reg_sdio_force=0时激活*/
#define RTC_CNTL_SDIO_PD_EN  (BIT(21))
#define RTC_CNTL_SDIO_PD_EN_M  (BIT(21))
#define RTC_CNTL_SDIO_PD_EN_V  0x1
#define RTC_CNTL_SDIO_PD_EN_S  21
/* RTC_CNTL_SDIO_ENCURLIM:R/W；位位置：[20]；默认值：1'd1；*/
/*description:启用电流限制*/
#define RTC_CNTL_SDIO_ENCURLIM  (BIT(20))
#define RTC_CNTL_SDIO_ENCURLIM_M  (BIT(20))
#define RTC_CNTL_SDIO_ENCURLIM_V  0x1
#define RTC_CNTL_SDIO_ENCURLIM_S  20
/* RTC_CNTL_SDIO_decurlim:R/W；位位置：[19]；默认值：1'd0；*/
/*description:选择电流限制模式*/
#define RTC_CNTL_SDIO_MODECURLIM  (BIT(19))
#define RTC_CNTL_SDIO_MODECURLIM_M  (BIT(19))
#define RTC_CNTL_SDIO_MODECURLIM_V  0x1
#define RTC_CNTL_SDIO_MODECURLIM_S  19
/* RTC_CNTL_SDIO_DCURLIM:R/W；比特位置：[18:16]；默认值：3'd0；*/
/*description:当tieh=0时调谐电流限制阈值。约800mA/（8+d）*/
#define RTC_CNTL_SDIO_DCURLIM  0x00000007
#define RTC_CNTL_SDIO_DCURLIM_M  ((RTC_CNTL_SDIO_DCURLIM_V)<<(RTC_CNTL_SDIO_DCURLIM_S))
#define RTC_CNTL_SDIO_DCURLIM_V  0x7
#define RTC_CNTL_SDIO_DCURLIM_S  16
/* RTC_CNTL_SDIO_EN_INITI:R/W；位位置：[15]；默认值：1'd1；*/
/*description:0设置init[1:0]=0*/
#define RTC_CNTL_SDIO_EN_INITI  (BIT(15))
#define RTC_CNTL_SDIO_EN_INITI_M  (BIT(15))
#define RTC_CNTL_SDIO_EN_INITI_V  0x1
#define RTC_CNTL_SDIO_EN_INITI_S  15
/* RTC_CNTL_SDIO_INITI:R/W；比特位置：[14:13]；默认值：2'd1；*/
/*描述：将电阻从ldo输出端接地。0：无分辨率*/
#define RTC_CNTL_SDIO_INITI  0x00000003
#define RTC_CNTL_SDIO_INITI_M  ((RTC_CNTL_SDIO_INITI_V)<<(RTC_CNTL_SDIO_INITI_S))
#define RTC_CNTL_SDIO_INITI_V  0x3
#define RTC_CNTL_SDIO_INITI_S  13
/* RTC_CNTL_SDIO_DCAP：R/W；比特位置：[12:11]；默认值：2'b11；*/
/*描述：防止LDO过冲的能力*/
#define RTC_CNTL_SDIO_DCAP  0x00000003
#define RTC_CNTL_SDIO_DCAP_M  ((RTC_CNTL_SDIO_DCAP_V)<<(RTC_CNTL_SDIO_DCAP_S))
#define RTC_CNTL_SDIO_DCAP_V  0x3
#define RTC_CNTL_SDIO_DCAP_S  11
/* RTC_CNTL_SDIO_DTHDRV:R/W；比特位置：[10:9]；默认值：2'b11；*/
/*description:Tieh=1模式驱动能力。初始设置为0以限制充电电流*/
#define RTC_CNTL_SDIO_DTHDRV  0x00000003
#define RTC_CNTL_SDIO_DTHDRV_M  ((RTC_CNTL_SDIO_DTHDRV_V)<<(RTC_CNTL_SDIO_DTHDRV_S))
#define RTC_CNTL_SDIO_DTHDRV_V  0x3
#define RTC_CNTL_SDIO_DTHDRV_S  9
/* RTC_CNTL_SDIO_TIMER_TARGET:R/W；位位置：[7:0]；默认值：8'd10；*/
/*描述：sdio通电后应用reg_sdio_dcap的计时器计数*/
#define RTC_CNTL_SDIO_TIMER_TARGET  0x000000FF
#define RTC_CNTL_SDIO_TIMER_TARGET_M  ((RTC_CNTL_SDIO_TIMER_TARGET_V)<<(RTC_CNTL_SDIO_TIMER_TARGET_S))
#define RTC_CNTL_SDIO_TIMER_TARGET_V  0xFF
#define RTC_CNTL_SDIO_TIMER_TARGET_S  0

#define RTC_CNTL_BIAS_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x007C)
/* RTC_CNTL_XPD_DCDC_IDLE:R/W；位位置：[28]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_XPD_DCDC_IDLE  (BIT(28))
#define RTC_CNTL_XPD_DCDC_IDLE_M  (BIT(28))
#define RTC_CNTL_XPD_DCDC_IDLE_V  0x1
#define RTC_CNTL_XPD_DCDC_IDLE_S  28
/* RTC_CNTL-XPD_DCDC_MONITOR：R/W；位位置：[27]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_XPD_DCDC_MONITOR  (BIT(27))
#define RTC_CNTL_XPD_DCDC_MONITOR_M  (BIT(27))
#define RTC_CNTL_XPD_DCDC_MONITOR_V  0x1
#define RTC_CNTL_XPD_DCDC_MONITOR_S  27
/* RTC_CNTL-XPD-DCDC_SLP:R/W；位位置：[26]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_XPD_DCDC_SLP  (BIT(26))
#define RTC_CNTL_XPD_DCDC_SLP_M  (BIT(26))
#define RTC_CNTL_XPD_DCDC_SLP_V  0x1
#define RTC_CNTL_XPD_DCDC_SLP_S  26
/* RTC_CNTL_DBG_ATTEN_MONITOR:R/W；位位置：[25:22]；默认值：4'd0；*/
/*description:rtc处于监视器状态时DBG_ATTEN*/
#define RTC_CNTL_DBG_ATTEN_MONITOR  0x0000000F
#define RTC_CNTL_DBG_ATTEN_MONITOR_M  ((RTC_CNTL_DBG_ATTEN_MONITOR_V)<<(RTC_CNTL_DBG_ATTEN_MONITOR_S))
#define RTC_CNTL_DBG_ATTEN_MONITOR_V  0xF
#define RTC_CNTL_DBG_ATTEN_MONITOR_S  22
/* RTC_CNTL_DBG_ATTEN_dep_SLP:R/W；比特位置：[21:18]；默认值：4'd0；*/
/*description:rtc处于睡眠状态时DBG_ATTEN*/
#define RTC_CNTL_DBG_ATTEN_DEEP_SLP  0x0000000F
#define RTC_CNTL_DBG_ATTEN_DEEP_SLP_M  ((RTC_CNTL_DBG_ATTEN_DEEP_SLP_V)<<(RTC_CNTL_DBG_ATTEN_DEEP_SLP_S))
#define RTC_CNTL_DBG_ATTEN_DEEP_SLP_V  0xF
#define RTC_CNTL_DBG_ATTEN_DEEP_SLP_S  18
/* RTC_CNTL_BIAS_SLEEP_MONITOR:R/W；位位置：[17]；默认值：1’b0；*/
/*描述：当rtc处于监视器状态时，bias_sleep*/
#define RTC_CNTL_BIAS_SLEEP_MONITOR  (BIT(17))
#define RTC_CNTL_BIAS_SLEEP_MONITOR_M  (BIT(17))
#define RTC_CNTL_BIAS_SLEEP_MONITOR_V  0x1
#define RTC_CNTL_BIAS_SLEEP_MONITOR_S  17
/* RTC_CNTL_BIAS_SLEEP_DEEP_SLP:R/W；位位置：[16]；默认值：1’b1；*/
/*描述：当rtc处于sleep_state时，bias_sleep*/
#define RTC_CNTL_BIAS_SLEEP_DEEP_SLP  (BIT(16))
#define RTC_CNTL_BIAS_SLEEP_DEEP_SLP_M  (BIT(16))
#define RTC_CNTL_BIAS_SLEEP_DEEP_SLP_V  0x1
#define RTC_CNTL_BIAS_SLEEP_DEEP_SLP_S  16
/* RTC_CNTL_PD_CUR_MONITOR:R/W；位位置：[15]；默认值：1’b0；*/
/*description:rtc处于监视器状态时的xpd-cur*/
#define RTC_CNTL_PD_CUR_MONITOR  (BIT(15))
#define RTC_CNTL_PD_CUR_MONITOR_M  (BIT(15))
#define RTC_CNTL_PD_CUR_MONITOR_V  0x1
#define RTC_CNTL_PD_CUR_MONITOR_S  15
/* RTC_CNTL_PD_CUR_DEEP_SLP:R/W；位位置：[14]；默认值：1’b0；*/
/*description:rtc处于sleep_state时的xpd cur*/
#define RTC_CNTL_PD_CUR_DEEP_SLP  (BIT(14))
#define RTC_CNTL_PD_CUR_DEEP_SLP_M  (BIT(14))
#define RTC_CNTL_PD_CUR_DEEP_SLP_V  0x1
#define RTC_CNTL_PD_CUR_DEEP_SLP_S  14
/* RTC_CNTL_BIAS_BUF_MONITOR:R/W；位位置：[13]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BIAS_BUF_MONITOR  (BIT(13))
#define RTC_CNTL_BIAS_BUF_MONITOR_M  (BIT(13))
#define RTC_CNTL_BIAS_BUF_MONITOR_V  0x1
#define RTC_CNTL_BIAS_BUF_MONITOR_S  13
/* RTC_CNTL_BIAS_BUF_dep_SLP:R/W；位位置：[12]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BIAS_BUF_DEEP_SLP  (BIT(12))
#define RTC_CNTL_BIAS_BUF_DEEP_SLP_M  (BIT(12))
#define RTC_CNTL_BIAS_BUF_DEEP_SLP_V  0x1
#define RTC_CNTL_BIAS_BUF_DEEP_SLP_S  12
/* RTC_CNTL_BIAS_BUF-WAKE:R/W；位位置：[11]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_BIAS_BUF_WAKE  (BIT(11))
#define RTC_CNTL_BIAS_BUF_WAKE_M  (BIT(11))
#define RTC_CNTL_BIAS_BUF_WAKE_V  0x1
#define RTC_CNTL_BIAS_BUF_WAKE_S  11
/* RTC_CNTL_BIAS_BUF_inidle:R/W；位位置：[10]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BIAS_BUF_IDLE  (BIT(10))
#define RTC_CNTL_BIAS_BUF_IDLE_M  (BIT(10))
#define RTC_CNTL_BIAS_BUF_IDLE_V  0x1
#define RTC_CNTL_BIAS_BUF_IDLE_S  10

#define RTC_CNTL_REG          (DR_REG_RTCCNTL_BASE + 0x0080)
/* RTC_CNTL_REGULATOR_FORCE_PU:R/W；位位置：[31]；默认值：1'd1；*/
/*说明：*/
#define RTC_CNTL_REGULATOR_FORCE_PU  (BIT(31))
#define RTC_CNTL_REGULATOR_FORCE_PU_M  (BIT(31))
#define RTC_CNTL_REGULATOR_FORCE_PU_V  0x1
#define RTC_CNTL_REGULATOR_FORCE_PU_S  31
/* RTC_CNTL_REGULATOR_FORCE_PD:R/W；位位置：[30]；默认值：1'd0；*/
/*描述：RTC_REG强制断电（对于RTC_REG断电，意味着将电压降至0.8v或更低）*/
#define RTC_CNTL_REGULATOR_FORCE_PD  (BIT(30))
#define RTC_CNTL_REGULATOR_FORCE_PD_M  (BIT(30))
#define RTC_CNTL_REGULATOR_FORCE_PD_V  0x1
#define RTC_CNTL_REGULATOR_FORCE_PD_S  30
/* RTC_CNTL_DBOOST_FORCE_PU:R/W；位位置：[29]；默认值：1'd1；*/
/*description:RTC_DBOOST强制加电*/
#define RTC_CNTL_DBOOST_FORCE_PU  (BIT(29))
#define RTC_CNTL_DBOOST_FORCE_PU_M  (BIT(29))
#define RTC_CNTL_DBOOST_FORCE_PU_V  0x1
#define RTC_CNTL_DBOOST_FORCE_PU_S  29
/* RTC_CNTL_DBOOST_FORCE_PD:R/W；位位置：[28]；默认值：1'd0；*/
/*description:RTC_DBOOST强制断电*/
#define RTC_CNTL_DBOOST_FORCE_PD  (BIT(28))
#define RTC_CNTL_DBOOST_FORCE_PD_M  (BIT(28))
#define RTC_CNTL_DBOOST_FORCE_PD_V  0x1
#define RTC_CNTL_DBOOST_FORCE_PD_S  28
/* RTC_CNTL_VDD_DRV_B_SLP_EN:R/W；位位置：[27]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VDD_DRV_B_SLP_EN  (BIT(27))
#define RTC_CNTL_VDD_DRV_B_SLP_EN_M  (BIT(27))
#define RTC_CNTL_VDD_DRV_B_SLP_EN_V  0x1
#define RTC_CNTL_VDD_DRV_B_SLP_EN_S  27
/* RTC_CNTL_VDD_DRV_B_SLP:R/W；比特位置：[26:21]；默认值：6'd0；*/
/*说明：*/
#define RTC_CNTL_VDD_DRV_B_SLP  0x0000003F
#define RTC_CNTL_VDD_DRV_B_SLP_M  ((RTC_CNTL_VDD_DRV_B_SLP_V)<<(RTC_CNTL_VDD_DRV_B_SLP_S))
#define RTC_CNTL_VDD_DRV_B_SLP_V  0x3F
#define RTC_CNTL_VDD_DRV_B_SLP_S  21
/* RTC_CNTL_VDD_DRV_B_ACTIVE:R/W；比特位置：[20:15]；默认值：6'd0；*/
/*描述：SCK_DCAP*/
#define RTC_CNTL_VDD_DRV_B_ACTIVE  0x0000003F
#define RTC_CNTL_VDD_DRV_B_ACTIVE_M  ((RTC_CNTL_VDD_DRV_B_ACTIVE_V)<<(RTC_CNTL_VDD_DRV_B_ACTIVE_S))
#define RTC_CNTL_VDD_DRV_B_ACTIVE_V  0x3F
#define RTC_CNTL_VDD_DRV_B_ACTIVE_S  15
/* RTC_CNTL_SCK_DCAP:R/W；位位置：[11:4]；默认值：8'd0；*/
/*说明：*/
#define RTC_CNTL_SCK_DCAP  0x000000FF
#define RTC_CNTL_SCK_DCAP_M  ((RTC_CNTL_SCK_DCAP_V)<<(RTC_CNTL_SCK_DCAP_S))
#define RTC_CNTL_SCK_DCAP_V  0xFF
#define RTC_CNTL_SCK_DCAP_S  4
/* RTC_CNTL_DIG_CAL_EN:R/W；位位置：[3]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DIG_CAL_EN  (BIT(3))
#define RTC_CNTL_DIG_CAL_EN_M  (BIT(3))
#define RTC_CNTL_DIG_CAL_EN_V  0x1
#define RTC_CNTL_DIG_CAL_EN_S  3
/* RTC_CNTL_DBIAS_SWITCH_IDLE:R/W；位位置：[2]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DBIAS_SWITCH_IDLE  (BIT(2))
#define RTC_CNTL_DBIAS_SWITCH_IDLE_M  (BIT(2))
#define RTC_CNTL_DBIAS_SWITCH_IDLE_V  0x1
#define RTC_CNTL_DBIAS_SWITCH_IDLE_S  2
/* RTC_CNTL_DBIAS_SWITCH_MONITOR:R/W；位位置：[1]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DBIAS_SWITCH_MONITOR  (BIT(1))
#define RTC_CNTL_DBIAS_SWITCH_MONITOR_M  (BIT(1))
#define RTC_CNTL_DBIAS_SWITCH_MONITOR_V  0x1
#define RTC_CNTL_DBIAS_SWITCH_MONITOR_S  1
/* RTC_CNTL_DBIAS_SWITCH_SLP:R/W；位位置：[0]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DBIAS_SWITCH_SLP  (BIT(0))
#define RTC_CNTL_DBIAS_SWITCH_SLP_M  (BIT(0))
#define RTC_CNTL_DBIAS_SWITCH_SLP_V  0x1
#define RTC_CNTL_DBIAS_SWITCH_SLP_S  0

#define RTC_CNTL_RTCULATOR0_DBIAS_REG          (DR_REG_RTCCNTL_BASE + 0x0084)
/* RTC_CNTL_调节器0_DBIAS_SEL：R/W；位位置：[31]；默认值：1’b1；*/
/*描述：1：选择sw-dbias_active 0：选择pvt值*/
#define RTC_CNTL_REGULATOR0_DBIAS_SEL  (BIT(31))
#define RTC_CNTL_REGULATOR0_DBIAS_SEL_M  (BIT(31))
#define RTC_CNTL_REGULATOR0_DBIAS_SEL_V  0x1
#define RTC_CNTL_REGULATOR0_DBIAS_SEL_S  31
/* RTC_CNTL_REGULATOR0_DBIAS_ACTIVE:R/W；位位置：[29:25]；默认值：5'b10100；*/
/*描述：当芯片处于活动状态时，rtc调节器0 dbias*/
#define RTC_CNTL_REGULATOR0_DBIAS_ACTIVE  0x0000001F
#define RTC_CNTL_REGULATOR0_DBIAS_ACTIVE_M  ((RTC_CNTL_REGULATOR0_DBIAS_ACTIVE_V)<<(RTC_CNTL_REGULATOR0_DBIAS_ACTIVE_S))
#define RTC_CNTL_REGULATOR0_DBIAS_ACTIVE_V  0x1F
#define RTC_CNTL_REGULATOR0_DBIAS_ACTIVE_S  25
/* RTC_CNTL_调节器0_DBIAS_SLP:R/W；位位置：[24:20]；默认值：5'b10100；*/
/*描述：当芯片处于睡眠状态时，rtc调节器0 dbias*/
#define RTC_CNTL_REGULATOR0_DBIAS_SLP  0x0000001F
#define RTC_CNTL_REGULATOR0_DBIAS_SLP_M  ((RTC_CNTL_REGULATOR0_DBIAS_SLP_V)<<(RTC_CNTL_REGULATOR0_DBIAS_SLP_S))
#define RTC_CNTL_REGULATOR0_DBIAS_SLP_V  0x1F
#define RTC_CNTL_REGULATOR0_DBIAS_SLP_S  20
/* RTC_CNTL-PVT.RTC_DBIAS:RO；比特位置：[19:15]；默认值：5'b10100；*/
/*description:获取pvt dbias值*/
#define RTC_CNTL_PVT_RTC_DBIAS  0x0000001F
#define RTC_CNTL_PVT_RTC_DBIAS_M  ((RTC_CNTL_PVT_RTC_DBIAS_V)<<(RTC_CNTL_PVT_RTC_DBIAS_S))
#define RTC_CNTL_PVT_RTC_DBIAS_V  0x1F
#define RTC_CNTL_PVT_RTC_DBIAS_S  15

#define RTC_CNTL_RTCULATOR1_DBIAS_REG          (DR_REG_RTCCNTL_BASE + 0x0088)
/* RTC_CNTL_REGULATOR1_DBIAS_ACTIVE:R/W；位位置：[28:25]；默认值：4'b1000；*/
/*描述：芯片处于激活状态时的rtc调节器1 dbias*/
#define RTC_CNTL_REGULATOR1_DBIAS_ACTIVE  0x0000000F
#define RTC_CNTL_REGULATOR1_DBIAS_ACTIVE_M  ((RTC_CNTL_REGULATOR1_DBIAS_ACTIVE_V)<<(RTC_CNTL_REGULATOR1_DBIAS_ACTIVE_S))
#define RTC_CNTL_REGULATOR1_DBIAS_ACTIVE_V  0xF
#define RTC_CNTL_REGULATOR1_DBIAS_ACTIVE_S  25
/* RTC_CNTL_REGULATOR1_DBIAS_SLP:R/W；比特位置：[23:20]；默认值：4'b1000；*/
/*描述：芯片处于睡眠状态时的rtc调节器1 dbias*/
#define RTC_CNTL_REGULATOR1_DBIAS_SLP  0x0000000F
#define RTC_CNTL_REGULATOR1_DBIAS_SLP_M  ((RTC_CNTL_REGULATOR1_DBIAS_SLP_V)<<(RTC_CNTL_REGULATOR1_DBIAS_SLP_S))
#define RTC_CNTL_REGULATOR1_DBIAS_SLP_V  0xF
#define RTC_CNTL_REGULATOR1_DBIAS_SLP_S  20

#define RTC_CNTL_DIGULATOR_REG          (DR_REG_RTCCNTL_BASE + 0x008C)
/* RTC_CNTL_DG_REGULATOR_FORCE_PU:R/W；位位置：[31]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_DG_REGULATOR_FORCE_PU  (BIT(31))
#define RTC_CNTL_DG_REGULATOR_FORCE_PU_M  (BIT(31))
#define RTC_CNTL_DG_REGULATOR_FORCE_PU_V  0x1
#define RTC_CNTL_DG_REGULATOR_FORCE_PU_S  31
/* RTC_CNTL_DG_REGULATOR_FORCE_PD:R/W；位位置：[30]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_REGULATOR_FORCE_PD  (BIT(30))
#define RTC_CNTL_DG_REGULATOR_FORCE_PD_M  (BIT(30))
#define RTC_CNTL_DG_REGULATOR_FORCE_PD_V  0x1
#define RTC_CNTL_DG_REGULATOR_FORCE_PD_S  30
/* RTC_CNTL_DG_REGULATOR_SLP_FORCE_PU:R/W；位位置：[29]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_DG_REGULATOR_SLP_FORCE_PU  (BIT(29))
#define RTC_CNTL_DG_REGULATOR_SLP_FORCE_PU_M  (BIT(29))
#define RTC_CNTL_DG_REGULATOR_SLP_FORCE_PU_V  0x1
#define RTC_CNTL_DG_REGULATOR_SLP_FORCE_PU_S  29
/* RTC_CNTL_DG_REGULATOR_SLP_FORCE_PD:R/W；位位置：[28]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_REGULATOR_SLP_FORCE_PD  (BIT(28))
#define RTC_CNTL_DG_REGULATOR_SLP_FORCE_PD_M  (BIT(28))
#define RTC_CNTL_DG_REGULATOR_SLP_FORCE_PD_V  0x1
#define RTC_CNTL_DG_REGULATOR_SLP_FORCE_PD_S  28
/* RTC_CNTL_DG_VDD_DRV_B_SLP_EN:R/W；位位置：[27]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_VDD_DRV_B_SLP_EN  (BIT(27))
#define RTC_CNTL_DG_VDD_DRV_B_SLP_EN_M  (BIT(27))
#define RTC_CNTL_DG_VDD_DRV_B_SLP_EN_V  0x1
#define RTC_CNTL_DG_VDD_DRV_B_SLP_EN_S  27
/* RTC_CNTL_DG_VDD_DRV_B_SLP:R/W；比特位置：[26:3]；默认值：24'd0；*/
/*说明：*/
#define RTC_CNTL_DG_VDD_DRV_B_SLP  0x00FFFFFF
#define RTC_CNTL_DG_VDD_DRV_B_SLP_M  ((RTC_CNTL_DG_VDD_DRV_B_SLP_V)<<(RTC_CNTL_DG_VDD_DRV_B_SLP_S))
#define RTC_CNTL_DG_VDD_DRV_B_SLP_V  0xFFFFFF
#define RTC_CNTL_DG_VDD_DRV_B_SLP_S  3

#define RTC_CNTL_DIGULATOR_DRVB_REG          (DR_REG_RTCCNTL_BASE + 0x0090)
/* RTC_CNTL_DG_VDD_DRV_B_ACTIVE:R/W；比特位置：[23:0]；默认值：24'd0；*/
/*说明：*/
#define RTC_CNTL_DG_VDD_DRV_B_ACTIVE  0x00FFFFFF
#define RTC_CNTL_DG_VDD_DRV_B_ACTIVE_M  ((RTC_CNTL_DG_VDD_DRV_B_ACTIVE_V)<<(RTC_CNTL_DG_VDD_DRV_B_ACTIVE_S))
#define RTC_CNTL_DG_VDD_DRV_B_ACTIVE_V  0xFFFFFF
#define RTC_CNTL_DG_VDD_DRV_B_ACTIVE_S  0

#define RTC_CNTL_DIGULATOR0_DBIAS_REG          (DR_REG_RTCCNTL_BASE + 0x0094)
/* RTC_CNTL_DIG_REGULATOR0_DBIAS_SEL：R/W；位位置：[31]；默认值：1’b1；*/
/*描述：1：选择sw-dbias_active 0：选择pvt值*/
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_SEL  (BIT(31))
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_SEL_M  (BIT(31))
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_SEL_V  0x1
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_SEL_S  31
/* RTC_CNTL_DIG_REGULATOR0_DBIAS_INIT：WO；位位置：[30]；默认值：1’b0；*/
/*描述：初始pvt dbias值*/
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_INIT  (BIT(30))
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_INIT_M  (BIT(30))
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_INIT_V  0x1
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_INIT_S  30
/* RTC_CNTL_DIG_REGULATOR0_DBIAS_ACTIVE:R/W；位位置：[29:25]；默认值：5'b10100；*/
/*描述：当芯片处于活动状态时，dig调节器0 dbias*/
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_ACTIVE  0x0000001F
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_ACTIVE_M  ((RTC_CNTL_DIG_REGULATOR0_DBIAS_ACTIVE_V)<<(RTC_CNTL_DIG_REGULATOR0_DBIAS_ACTIVE_S))
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_ACTIVE_V  0x1F
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_ACTIVE_S  25
/* RTC_CNTL_DIG_REGULATOR0_DBIAS_SLP:R/W；位位置：[24:20]；默认值：5'b10100；*/
/*描述：当芯片处于睡眠状态时，dig调节器0 dbias*/
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_SLP  0x0000001F
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_SLP_M  ((RTC_CNTL_DIG_REGULATOR0_DBIAS_SLP_V)<<(RTC_CNTL_DIG_REGULATOR0_DBIAS_SLP_S))
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_SLP_V  0x1F
#define RTC_CNTL_DIG_REGULATOR0_DBIAS_SLP_S  20
/* RTC_CNTL-PVT_DIG_DBIAS:RO；比特位置：[19:15]；默认值：5'b10100；*/
/*description:获取pvt dbias值*/
#define RTC_CNTL_PVT_DIG_DBIAS  0x0000001F
#define RTC_CNTL_PVT_DIG_DBIAS_M  ((RTC_CNTL_PVT_DIG_DBIAS_V)<<(RTC_CNTL_PVT_DIG_DBIAS_S))
#define RTC_CNTL_PVT_DIG_DBIAS_V  0x1F
#define RTC_CNTL_PVT_DIG_DBIAS_S  15

#define RTC_CNTL_DIGULATOR1_DBIAS_REG          (DR_REG_RTCCNTL_BASE + 0x0098)
/* RTC_CNTL_DIG_REGULATOR1_DBIAS_ACTIVE:R/W；位位置：[28:25]；默认值：4'b1000；*/
/*描述：当芯片处于活动状态时，dig调节器1 dbias*/
#define RTC_CNTL_DIG_REGULATOR1_DBIAS_ACTIVE  0x0000000F
#define RTC_CNTL_DIG_REGULATOR1_DBIAS_ACTIVE_M  ((RTC_CNTL_DIG_REGULATOR1_DBIAS_ACTIVE_V)<<(RTC_CNTL_DIG_REGULATOR1_DBIAS_ACTIVE_S))
#define RTC_CNTL_DIG_REGULATOR1_DBIAS_ACTIVE_V  0xF
#define RTC_CNTL_DIG_REGULATOR1_DBIAS_ACTIVE_S  25
/* RTC_CNTL_DIG_REGULATOR1_DBIAS_SLP:R/W；比特位置：[23:20]；默认值：4'b1000；*/
/*描述：当芯片处于睡眠状态时，dig调节器1 dbias*/
#define RTC_CNTL_DIG_REGULATOR1_DBIAS_SLP  0x0000000F
#define RTC_CNTL_DIG_REGULATOR1_DBIAS_SLP_M  ((RTC_CNTL_DIG_REGULATOR1_DBIAS_SLP_V)<<(RTC_CNTL_DIG_REGULATOR1_DBIAS_SLP_S))
#define RTC_CNTL_DIG_REGULATOR1_DBIAS_SLP_V  0xF
#define RTC_CNTL_DIG_REGULATOR1_DBIAS_SLP_S  20

#define RTC_CNTL_PWC_REG          (DR_REG_RTCCNTL_BASE + 0x009C)
/* RTC_CNTL_PAD_FORCE_HOLD:R/W；位位置：[21]；默认值：1'd0；*/
/*描述：rtc衬垫力保持*/
#define RTC_CNTL_PAD_FORCE_HOLD  (BIT(21))
#define RTC_CNTL_PAD_FORCE_HOLD_M  (BIT(21))
#define RTC_CNTL_PAD_FORCE_HOLD_V  0x1
#define RTC_CNTL_PAD_FORCE_HOLD_S  21

#define RTC_CNTL_DIG_PWC_REG          (DR_REG_RTCCNTL_BASE + 0x00A0)
/* RTC_CNTL_DG_WRAP_PD_EN:R/W；位位置：[31]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_WRAP_PD_EN  (BIT(31))
#define RTC_CNTL_DG_WRAP_PD_EN_M  (BIT(31))
#define RTC_CNTL_DG_WRAP_PD_EN_V  0x1
#define RTC_CNTL_DG_WRAP_PD_EN_S  31
/* RTC_CNTL-WIFI_PD_EN:R/W；位位置：[30]；默认值：1’b0；*/
/*描述：在睡眠中关闭wifi*/
#define RTC_CNTL_WIFI_PD_EN  (BIT(30))
#define RTC_CNTL_WIFI_PD_EN_M  (BIT(30))
#define RTC_CNTL_WIFI_PD_EN_V  0x1
#define RTC_CNTL_WIFI_PD_EN_S  30
/* RTC_CNTL_CPU_TOP_PD_EN:R/W；位位置：[29]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_CPU_TOP_PD_EN  (BIT(29))
#define RTC_CNTL_CPU_TOP_PD_EN_M  (BIT(29))
#define RTC_CNTL_CPU_TOP_PD_EN_V  0x1
#define RTC_CNTL_CPU_TOP_PD_EN_S  29
/* RTC_CNTL_DG_PERI_PD_EN:R/W；位位置：[28]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_PERI_PD_EN  (BIT(28))
#define RTC_CNTL_DG_PERI_PD_EN_M  (BIT(28))
#define RTC_CNTL_DG_PERI_PD_EN_V  0x1
#define RTC_CNTL_DG_PERI_PD_EN_S  28
/* RTC_CNTL_BT_PD_EN:R/W；位位置：[27]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BT_PD_EN  (BIT(27))
#define RTC_CNTL_BT_PD_EN_M  (BIT(27))
#define RTC_CNTL_BT_PD_EN_V  0x1
#define RTC_CNTL_BT_PD_EN_S  27
/* RTC_CNTL_DG_WRAP_RET_PD_EN:R/W；位位置：[26]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_WRAP_RET_PD_EN  (BIT(26))
#define RTC_CNTL_DG_WRAP_RET_PD_EN_M  (BIT(26))
#define RTC_CNTL_DG_WRAP_RET_PD_EN_V  0x1
#define RTC_CNTL_DG_WRAP_RET_PD_EN_S  26
/* RTC_CNTL_CPU_TOP_FORCE_PU:R/W；位位置：[22]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_CPU_TOP_FORCE_PU  (BIT(22))
#define RTC_CNTL_CPU_TOP_FORCE_PU_M  (BIT(22))
#define RTC_CNTL_CPU_TOP_FORCE_PU_V  0x1
#define RTC_CNTL_CPU_TOP_FORCE_PU_S  22
/* RTC_CNTL_CPU_TOP_FORCE_PD:R/W；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_CPU_TOP_FORCE_PD  (BIT(21))
#define RTC_CNTL_CPU_TOP_FORCE_PD_M  (BIT(21))
#define RTC_CNTL_CPU_TOP_FORCE_PD_V  0x1
#define RTC_CNTL_CPU_TOP_FORCE_PD_S  21
/* RTC_CNTL-WIFI_FORCE_PU:R/W；位位置：[18]；默认值：1'd1；*/
/*描述：wifi强制通电*/
#define RTC_CNTL_WIFI_FORCE_PU  (BIT(18))
#define RTC_CNTL_WIFI_FORCE_PU_M  (BIT(18))
#define RTC_CNTL_WIFI_FORCE_PU_V  0x1
#define RTC_CNTL_WIFI_FORCE_PU_S  18
/* RTC_CNTL-WIFI_FORCE_PD:R/W；位位置：[17]；默认值：1’b0；*/
/*描述：wifi强制断电*/
#define RTC_CNTL_WIFI_FORCE_PD  (BIT(17))
#define RTC_CNTL_WIFI_FORCE_PD_M  (BIT(17))
#define RTC_CNTL_WIFI_FORCE_PD_V  0x1
#define RTC_CNTL_WIFI_FORCE_PD_S  17
/* RTC_CNTL_FASTMEM_FORCE_LPU:R/W；位位置：[16]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_FASTMEM_FORCE_LPU  (BIT(16))
#define RTC_CNTL_FASTMEM_FORCE_LPU_M  (BIT(16))
#define RTC_CNTL_FASTMEM_FORCE_LPU_V  0x1
#define RTC_CNTL_FASTMEM_FORCE_LPU_S  16
/* RTC_CNTL_FASTMEM_FORCE_LPD:R/W；位位置：[15]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_FASTMEM_FORCE_LPD  (BIT(15))
#define RTC_CNTL_FASTMEM_FORCE_LPD_M  (BIT(15))
#define RTC_CNTL_FASTMEM_FORCE_LPD_V  0x1
#define RTC_CNTL_FASTMEM_FORCE_LPD_S  15
/* RTC_CNTL_DG_PERI_FORCE_PU:R/W；位位置：[14]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_DG_PERI_FORCE_PU  (BIT(14))
#define RTC_CNTL_DG_PERI_FORCE_PU_M  (BIT(14))
#define RTC_CNTL_DG_PERI_FORCE_PU_V  0x1
#define RTC_CNTL_DG_PERI_FORCE_PU_S  14
/* RTC_CNTL_DG_PERI_FORCE_PD:R/W；位位置：[13]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_PERI_FORCE_PD  (BIT(13))
#define RTC_CNTL_DG_PERI_FORCE_PD_M  (BIT(13))
#define RTC_CNTL_DG_PERI_FORCE_PD_V  0x1
#define RTC_CNTL_DG_PERI_FORCE_PD_S  13
/* RTC_CNTL_BT_FORCE_PU:R/W；位位置：[12]；默认值：1'd1；*/
/*说明：*/
#define RTC_CNTL_BT_FORCE_PU  (BIT(12))
#define RTC_CNTL_BT_FORCE_PU_M  (BIT(12))
#define RTC_CNTL_BT_FORCE_PU_V  0x1
#define RTC_CNTL_BT_FORCE_PU_S  12
/* RTC_CNTL_BT_FORCE_PD:R/W；位位置：[11]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BT_FORCE_PD  (BIT(11))
#define RTC_CNTL_BT_FORCE_PD_M  (BIT(11))
#define RTC_CNTL_BT_FORCE_PD_V  0x1
#define RTC_CNTL_BT_FORCE_PD_S  11
/* RTC_CNTL_DG_WRAP_FORCE_PU:R/W；位位置：[10]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_DG_WRAP_FORCE_PU  (BIT(10))
#define RTC_CNTL_DG_WRAP_FORCE_PU_M  (BIT(10))
#define RTC_CNTL_DG_WRAP_FORCE_PU_V  0x1
#define RTC_CNTL_DG_WRAP_FORCE_PU_S  10
/* RTC_CNTL_DG_WRAP_FORCE_PD:R/W；位位置：[9]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_WRAP_FORCE_PD  (BIT(9))
#define RTC_CNTL_DG_WRAP_FORCE_PD_M  (BIT(9))
#define RTC_CNTL_DG_WRAP_FORCE_PD_V  0x1
#define RTC_CNTL_DG_WRAP_FORCE_PD_S  9
/* RTC_CNTL_DG_MEM_FORCE_PU:R/W；位位置：[8]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_DG_MEM_FORCE_PU  (BIT(8))
#define RTC_CNTL_DG_MEM_FORCE_PU_M  (BIT(8))
#define RTC_CNTL_DG_MEM_FORCE_PU_V  0x1
#define RTC_CNTL_DG_MEM_FORCE_PU_S  8
/* RTC_CNTL_DG_MEM_FORCE_PD:R/W；位位置：[7]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_MEM_FORCE_PD  (BIT(7))
#define RTC_CNTL_DG_MEM_FORCE_PD_M  (BIT(7))
#define RTC_CNTL_DG_MEM_FORCE_PD_V  0x1
#define RTC_CNTL_DG_MEM_FORCE_PD_S  7
/* RTC_CNTL_LSLP_MEM_FORCE_PU:R/W；位位置：[4]；默认值：1’b1；*/
/*描述：数字核心中的记忆迫使睡眠中没有PD*/
#define RTC_CNTL_LSLP_MEM_FORCE_PU  (BIT(4))
#define RTC_CNTL_LSLP_MEM_FORCE_PU_M  (BIT(4))
#define RTC_CNTL_LSLP_MEM_FORCE_PU_V  0x1
#define RTC_CNTL_LSLP_MEM_FORCE_PU_S  4
/* RTC_CNTL_LSLP_MEM_FORCE_PD:R/W；位位置：[3]；默认值：1’b0；*/
/*描述：睡眠中数字核心力量PD中的记忆*/
#define RTC_CNTL_LSLP_MEM_FORCE_PD  (BIT(3))
#define RTC_CNTL_LSLP_MEM_FORCE_PD_M  (BIT(3))
#define RTC_CNTL_LSLP_MEM_FORCE_PD_V  0x1
#define RTC_CNTL_LSLP_MEM_FORCE_PD_S  3
/* RTC_CNTL_VDD_SPI_PWR_FORCE:R/W；位位置：[2]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VDD_SPI_PWR_FORCE  (BIT(2))
#define RTC_CNTL_VDD_SPI_PWR_FORCE_M  (BIT(2))
#define RTC_CNTL_VDD_SPI_PWR_FORCE_V  0x1
#define RTC_CNTL_VDD_SPI_PWR_FORCE_S  2
/* RTC_CNTL_VDD_SPI_PWR_DRV:R/W；位位置：[1:0]；默认值：2’b0；*/
/*说明：*/
#define RTC_CNTL_VDD_SPI_PWR_DRV  0x00000003
#define RTC_CNTL_VDD_SPI_PWR_DRV_M  ((RTC_CNTL_VDD_SPI_PWR_DRV_V)<<(RTC_CNTL_VDD_SPI_PWR_DRV_S))
#define RTC_CNTL_VDD_SPI_PWR_DRV_V  0x3
#define RTC_CNTL_VDD_SPI_PWR_DRV_S  0

#define RTC_CNTL_DIG_POWER_SWITCH0_REG          (DR_REG_RTCCNTL_BASE + 0x00A4)
/* RTC_CNTL-XPD_MEM_SWITCH_MASK:R/W；比特位置：[31:12]；默认值：~20'h0；*/
/*说明：*/
#define RTC_CNTL_XPD_MEM_SWITCH_MASK  0x000FFFFF
#define RTC_CNTL_XPD_MEM_SWITCH_MASK_M  ((RTC_CNTL_XPD_MEM_SWITCH_MASK_V)<<(RTC_CNTL_XPD_MEM_SWITCH_MASK_S))
#define RTC_CNTL_XPD_MEM_SWITCH_MASK_V  0xFFFFF
#define RTC_CNTL_XPD_MEM_SWITCH_MASK_S  12
/* RTC_CNTL-XPD_DG_WRAP_SWITCH_MASK：R/W；比特位置：[11:7]；默认值：~5'h0；*/
/*说明：*/
#define RTC_CNTL_XPD_DG_WRAP_SWITCH_MASK  0x0000001F
#define RTC_CNTL_XPD_DG_WRAP_SWITCH_MASK_M  ((RTC_CNTL_XPD_DG_WRAP_SWITCH_MASK_V)<<(RTC_CNTL_XPD_DG_WRAP_SWITCH_MASK_S))
#define RTC_CNTL_XPD_DG_WRAP_SWITCH_MASK_V  0x1F
#define RTC_CNTL_XPD_DG_WRAP_SWITCH_MASK_S  7
/* RTC_CNTL-xpdg_PERI_SWITCH_MASK：R/W；位位置：[6:2]；默认值：~5'h0；*/
/*说明：*/
#define RTC_CNTL_XPD_DG_PERI_SWITCH_MASK  0x0000001F
#define RTC_CNTL_XPD_DG_PERI_SWITCH_MASK_M  ((RTC_CNTL_XPD_DG_PERI_SWITCH_MASK_V)<<(RTC_CNTL_XPD_DG_PERI_SWITCH_MASK_S))
#define RTC_CNTL_XPD_DG_PERI_SWITCH_MASK_V  0x1F
#define RTC_CNTL_XPD_DG_PERI_SWITCH_MASK_S  2

#define RTC_CNTL_DIG_POWER_SWITCH1_REG          (DR_REG_RTCCNTL_BASE + 0x00A8)
/* RTC_CNTL-XPD_CPU_SWITCH_MASK:R/W；位位置：[31:27]；默认值：~5'h0；*/
/*说明：*/
#define RTC_CNTL_XPD_CPU_SWITCH_MASK  0x0000001F
#define RTC_CNTL_XPD_CPU_SWITCH_MASK_M  ((RTC_CNTL_XPD_CPU_SWITCH_MASK_V)<<(RTC_CNTL_XPD_CPU_SWITCH_MASK_S))
#define RTC_CNTL_XPD_CPU_SWITCH_MASK_V  0x1F
#define RTC_CNTL_XPD_CPU_SWITCH_MASK_S  27
/* RTC_CNTL-XPD-wwii_SWITCH_MASK:R/W；比特位置：[26:22]；默认值：~5'h0；*/
/*说明：*/
#define RTC_CNTL_XPD_WIFI_SWITCH_MASK  0x0000001F
#define RTC_CNTL_XPD_WIFI_SWITCH_MASK_M  ((RTC_CNTL_XPD_WIFI_SWITCH_MASK_V)<<(RTC_CNTL_XPD_WIFI_SWITCH_MASK_S))
#define RTC_CNTL_XPD_WIFI_SWITCH_MASK_V  0x1F
#define RTC_CNTL_XPD_WIFI_SWITCH_MASK_S  22

#define RTC_CNTL_DIG_ISO_REG          (DR_REG_RTCCNTL_BASE + 0x00AC)
/* RTC_CNTL_DG_WRAP_FORCE_NOISO:R/W；位位置：[31]；默认值：1'd1；*/
/*说明：*/
#define RTC_CNTL_DG_WRAP_FORCE_NOISO  (BIT(31))
#define RTC_CNTL_DG_WRAP_FORCE_NOISO_M  (BIT(31))
#define RTC_CNTL_DG_WRAP_FORCE_NOISO_V  0x1
#define RTC_CNTL_DG_WRAP_FORCE_NOISO_S  31
/* RTC_CNTL_DG_WRAP_FORCE_ISO:R/W；位位置：[30]；默认值：1'd0；*/
/*描述：数字核心力ISO*/
#define RTC_CNTL_DG_WRAP_FORCE_ISO  (BIT(30))
#define RTC_CNTL_DG_WRAP_FORCE_ISO_M  (BIT(30))
#define RTC_CNTL_DG_WRAP_FORCE_ISO_V  0x1
#define RTC_CNTL_DG_WRAP_FORCE_ISO_S  30
/* RTC_CNTL-WIFI_FORCE_NOISO:R/W；位位置：[29]；默认值：1'd1；*/
/*描述：wifi强制无ISO*/
#define RTC_CNTL_WIFI_FORCE_NOISO  (BIT(29))
#define RTC_CNTL_WIFI_FORCE_NOISO_M  (BIT(29))
#define RTC_CNTL_WIFI_FORCE_NOISO_V  0x1
#define RTC_CNTL_WIFI_FORCE_NOISO_S  29
/* RTC_CNTL-WIFI_FORCE_ISO:R/W；位位置：[28]；默认值：1'd0；*/
/*description:wifi强制ISO*/
#define RTC_CNTL_WIFI_FORCE_ISO  (BIT(28))
#define RTC_CNTL_WIFI_FORCE_ISO_M  (BIT(28))
#define RTC_CNTL_WIFI_FORCE_ISO_V  0x1
#define RTC_CNTL_WIFI_FORCE_ISO_S  28
/* RTC_CNTL_CPU_TOP_FORCE_NOISO:R/W；位位置：[27]；默认值：1'd1；*/
/*description:cpu强制无ISO*/
#define RTC_CNTL_CPU_TOP_FORCE_NOISO  (BIT(27))
#define RTC_CNTL_CPU_TOP_FORCE_NOISO_M  (BIT(27))
#define RTC_CNTL_CPU_TOP_FORCE_NOISO_V  0x1
#define RTC_CNTL_CPU_TOP_FORCE_NOISO_S  27
/* RTC_CNTL_CPU_TOP_FORCE_ISO:R/W；位位置：[26]；默认值：1'd0；*/
/*description:cpu强制ISO*/
#define RTC_CNTL_CPU_TOP_FORCE_ISO  (BIT(26))
#define RTC_CNTL_CPU_TOP_FORCE_ISO_M  (BIT(26))
#define RTC_CNTL_CPU_TOP_FORCE_ISO_V  0x1
#define RTC_CNTL_CPU_TOP_FORCE_ISO_S  26
/* RTC_CNTL_DG_PERI_FORCE_NOISO:R/W；位位置：[25]；默认值：1'd1；*/
/*说明：*/
#define RTC_CNTL_DG_PERI_FORCE_NOISO  (BIT(25))
#define RTC_CNTL_DG_PERI_FORCE_NOISO_M  (BIT(25))
#define RTC_CNTL_DG_PERI_FORCE_NOISO_V  0x1
#define RTC_CNTL_DG_PERI_FORCE_NOISO_S  25
/* RTC_CNTL_DG_PERI_FORCE_ISO：R/W；位位置：[24]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_DG_PERI_FORCE_ISO  (BIT(24))
#define RTC_CNTL_DG_PERI_FORCE_ISO_M  (BIT(24))
#define RTC_CNTL_DG_PERI_FORCE_ISO_V  0x1
#define RTC_CNTL_DG_PERI_FORCE_ISO_S  24
/* RTC_CNTL_BT_FORCE_NOISO:R/W；位位置：[23]；默认值：1'd1；*/
/*说明：*/
#define RTC_CNTL_BT_FORCE_NOISO  (BIT(23))
#define RTC_CNTL_BT_FORCE_NOISO_M  (BIT(23))
#define RTC_CNTL_BT_FORCE_NOISO_V  0x1
#define RTC_CNTL_BT_FORCE_NOISO_S  23
/* RTC_CNTL_BT_FORCE_ISO：R/W；位位置：[22]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_BT_FORCE_ISO  (BIT(22))
#define RTC_CNTL_BT_FORCE_ISO_M  (BIT(22))
#define RTC_CNTL_BT_FORCE_ISO_V  0x1
#define RTC_CNTL_BT_FORCE_ISO_S  22
/* RTC_CNTL_DG_PAD_FORCE_HOLD:R/W；位位置：[15]；默认值：1'd0；*/
/*描述：数字垫力保持*/
#define RTC_CNTL_DG_PAD_FORCE_HOLD  (BIT(15))
#define RTC_CNTL_DG_PAD_FORCE_HOLD_M  (BIT(15))
#define RTC_CNTL_DG_PAD_FORCE_HOLD_V  0x1
#define RTC_CNTL_DG_PAD_FORCE_HOLD_S  15
/* RTC_CNTL_DG_PAD_FORCE_UNHOLD:R/W；位位置：[14]；默认值：1'd1；*/
/*描述：数字垫力取消保持*/
#define RTC_CNTL_DG_PAD_FORCE_UNHOLD  (BIT(14))
#define RTC_CNTL_DG_PAD_FORCE_UNHOLD_M  (BIT(14))
#define RTC_CNTL_DG_PAD_FORCE_UNHOLD_V  0x1
#define RTC_CNTL_DG_PAD_FORCE_UNHOLD_S  14
/* RTC_CNTL_DG_PAD_FORCE_ISO:R/W；位位置：[13]；默认值：1'd0；*/
/*description:数字垫力ISO*/
#define RTC_CNTL_DG_PAD_FORCE_ISO  (BIT(13))
#define RTC_CNTL_DG_PAD_FORCE_ISO_M  (BIT(13))
#define RTC_CNTL_DG_PAD_FORCE_ISO_V  0x1
#define RTC_CNTL_DG_PAD_FORCE_ISO_S  13
/* RTC_CNTL_DG_PAD_FORCE_NOISO:R/W；位位置：[12]；默认值：1'd1；*/
/*描述：数字垫力无ISO*/
#define RTC_CNTL_DG_PAD_FORCE_NOISO  (BIT(12))
#define RTC_CNTL_DG_PAD_FORCE_NOISO_M  (BIT(12))
#define RTC_CNTL_DG_PAD_FORCE_NOISO_V  0x1
#define RTC_CNTL_DG_PAD_FORCE_NOISO_S  12
/* RTC_CNTL_DG_PAD_AUTOHOLD_EN:R/W；位位置：[11]；默认值：1'd0；*/
/*描述：数字键盘启用自动保持*/
#define RTC_CNTL_DG_PAD_AUTOHOLD_EN  (BIT(11))
#define RTC_CNTL_DG_PAD_AUTOHOLD_EN_M  (BIT(11))
#define RTC_CNTL_DG_PAD_AUTOHOLD_EN_V  0x1
#define RTC_CNTL_DG_PAD_AUTOHOLD_EN_S  11
/* RTC_CNTL_CLR_DG_pd自动保持：WO；位位置：[10]；默认值：1'd0；*/
/*说明：wtite仅用于清除数字焊盘自动保持的寄存器*/
#define RTC_CNTL_CLR_DG_PAD_AUTOHOLD  (BIT(10))
#define RTC_CNTL_CLR_DG_PAD_AUTOHOLD_M  (BIT(10))
#define RTC_CNTL_CLR_DG_PAD_AUTOHOLD_V  0x1
#define RTC_CNTL_CLR_DG_PAD_AUTOHOLD_S  10
/* RTC_CNTL_DG_PAD_AUTOHOLD:RO；位位置：[9]；默认值：1'd0；*/
/*描述：只读寄存器，用于指示数字焊盘自动保持状态*/
#define RTC_CNTL_DG_PAD_AUTOHOLD  (BIT(9))
#define RTC_CNTL_DG_PAD_AUTOHOLD_M  (BIT(9))
#define RTC_CNTL_DG_PAD_AUTOHOLD_V  0x1
#define RTC_CNTL_DG_PAD_AUTOHOLD_S  9
/* RTC_CNTL_DIG_ISO-FORCE_ON:R/W；位位置：[8]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_DIG_ISO_FORCE_ON  (BIT(8))
#define RTC_CNTL_DIG_ISO_FORCE_ON_M  (BIT(8))
#define RTC_CNTL_DIG_ISO_FORCE_ON_V  0x1
#define RTC_CNTL_DIG_ISO_FORCE_ON_S  8
/* RTC_CNTL_DIG_ISO-FORCE_OFF:R/W；位位置：[7]；默认值：1'd1；*/
/*说明：*/
#define RTC_CNTL_DIG_ISO_FORCE_OFF  (BIT(7))
#define RTC_CNTL_DIG_ISO_FORCE_OFF_M  (BIT(7))
#define RTC_CNTL_DIG_ISO_FORCE_OFF_V  0x1
#define RTC_CNTL_DIG_ISO_FORCE_OFF_S  7
/* RTC_CNTL_DG_MEM_FORCE_ISO:R/W；位位置：[6]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DG_MEM_FORCE_ISO  (BIT(6))
#define RTC_CNTL_DG_MEM_FORCE_ISO_M  (BIT(6))
#define RTC_CNTL_DG_MEM_FORCE_ISO_V  0x1
#define RTC_CNTL_DG_MEM_FORCE_ISO_S  6
/* RTC_CNTL_DG_MEM_FORCE_NOISO:R/W；位位置：[5]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_DG_MEM_FORCE_NOISO  (BIT(5))
#define RTC_CNTL_DG_MEM_FORCE_NOISO_M  (BIT(5))
#define RTC_CNTL_DG_MEM_FORCE_NOISO_V  0x1
#define RTC_CNTL_DG_MEM_FORCE_NOISO_S  5

#define RTC_CNTL_WDTCONFIG0_REG          (DR_REG_RTCCNTL_BASE + 0x00B0)
/* RTC_CNTL_WDT_EN:R/W；位位置：[31]；默认值：1'0；*/
/*说明：*/
#define RTC_CNTL_WDT_EN  (BIT(31))
#define RTC_CNTL_WDT_EN_M  (BIT(31))
#define RTC_CNTL_WDT_EN_V  0x1
#define RTC_CNTL_WDT_EN_S  31
/* RTC_CNTL_WDT_STG0:R/W；位位置：[30:28]；默认值：3'h0；*/
/*描述：1：中断阶段en*/
#define RTC_CNTL_WDT_STG0  0x00000007
#define RTC_CNTL_WDT_STG0_M  ((RTC_CNTL_WDT_STG0_V)<<(RTC_CNTL_WDT_STG0_S))
#define RTC_CNTL_WDT_STG0_V  0x7
#define RTC_CNTL_WDT_STG0_S  28
/* RTC_CNTL_WDT_STG1:R/W；位位置：[27:25]；默认值：3'h0；*/
/*描述：1：中断阶段en*/
#define RTC_CNTL_WDT_STG1  0x00000007
#define RTC_CNTL_WDT_STG1_M  ((RTC_CNTL_WDT_STG1_V)<<(RTC_CNTL_WDT_STG1_S))
#define RTC_CNTL_WDT_STG1_V  0x7
#define RTC_CNTL_WDT_STG1_S  25
/* RTC_CNTL_WDT_STG2:R/W；位位置：[24:22]；默认值：3'h0；*/
/*描述：1：中断阶段en*/
#define RTC_CNTL_WDT_STG2  0x00000007
#define RTC_CNTL_WDT_STG2_M  ((RTC_CNTL_WDT_STG2_V)<<(RTC_CNTL_WDT_STG2_S))
#define RTC_CNTL_WDT_STG2_V  0x7
#define RTC_CNTL_WDT_STG2_S  22
/* RTC_CNTL_WDT_STG3:R/W；比特位置：[21:19]；默认值：3'h0；*/
/*描述：1：中断阶段en*/
#define RTC_CNTL_WDT_STG3  0x00000007
#define RTC_CNTL_WDT_STG3_M  ((RTC_CNTL_WDT_STG3_V)<<(RTC_CNTL_WDT_STG3_S))
#define RTC_CNTL_WDT_STG3_V  0x7
#define RTC_CNTL_WDT_STG3_S  19
/* RTC_CNTL_WDT_STGX : */
/*描述：阶段动作选择值*/
#define RTC_WDT_STG_SEL_OFF             0
#define RTC_WDT_STG_SEL_INT             1
#define RTC_WDT_STG_SEL_RESET_CPU       2
#define RTC_WDT_STG_SEL_RESET_SYSTEM    3
#define RTC_WDT_STG_SEL_RESET_RTC       4

/* RTC_CNTL_WDT_CPU_RESET_LENGTH:R/W；比特位置：[18:16]；默认值：3'h1；*/
/*description:CPU重置计数器长度*/
#define RTC_CNTL_WDT_CPU_RESET_LENGTH  0x00000007
#define RTC_CNTL_WDT_CPU_RESET_LENGTH_M  ((RTC_CNTL_WDT_CPU_RESET_LENGTH_V)<<(RTC_CNTL_WDT_CPU_RESET_LENGTH_S))
#define RTC_CNTL_WDT_CPU_RESET_LENGTH_V  0x7
#define RTC_CNTL_WDT_CPU_RESET_LENGTH_S  16
/* RTC_CNTL_WDT_SYS_RESET_LENGTH:R/W；比特位置：[15:13]；默认值：3'h1；*/
/*描述：系统重置计数器长度*/
#define RTC_CNTL_WDT_SYS_RESET_LENGTH  0x00000007
#define RTC_CNTL_WDT_SYS_RESET_LENGTH_M  ((RTC_CNTL_WDT_SYS_RESET_LENGTH_V)<<(RTC_CNTL_WDT_SYS_RESET_LENGTH_S))
#define RTC_CNTL_WDT_SYS_RESET_LENGTH_V  0x7
#define RTC_CNTL_WDT_SYS_RESET_LENGTH_S  13
/* RTC_CNTL_WDT_FLASHBOOT_MOD_EN:R/W；位位置：[12]；默认值：1'h1；*/
/*description:在闪存引导中启用WDT*/
#define RTC_CNTL_WDT_FLASHBOOT_MOD_EN  (BIT(12))
#define RTC_CNTL_WDT_FLASHBOOT_MOD_EN_M  (BIT(12))
#define RTC_CNTL_WDT_FLASHBOOT_MOD_EN_V  0x1
#define RTC_CNTL_WDT_FLASHBOOT_MOD_EN_S  12
/* RTC_CNTL_WDT_PROCPU_RESET_EN:R/W；位位置：[11]；默认值：1'd0；*/
/*description:启用WDT重置PRO CPU*/
#define RTC_CNTL_WDT_PROCPU_RESET_EN  (BIT(11))
#define RTC_CNTL_WDT_PROCPU_RESET_EN_M  (BIT(11))
#define RTC_CNTL_WDT_PROCPU_RESET_EN_V  0x1
#define RTC_CNTL_WDT_PROCPU_RESET_EN_S  11
/* RTC_CNTL_WDT_APPCPU_RESET_EN:R/W；位位置：[10]；默认值：1'd0；*/
/*description:启用WDT重置APP CPU*/
#define RTC_CNTL_WDT_APPCPU_RESET_EN  (BIT(10))
#define RTC_CNTL_WDT_APPCPU_RESET_EN_M  (BIT(10))
#define RTC_CNTL_WDT_APPCPU_RESET_EN_V  0x1
#define RTC_CNTL_WDT_APPCPU_RESET_EN_S  10
/* RTC_CNTL_WDT_PAUSE_IN_SLP:R/W；位位置：[9]；默认值：1'd1；*/
/*description:休眠时暂停WDT*/
#define RTC_CNTL_WDT_PAUSE_IN_SLP  (BIT(9))
#define RTC_CNTL_WDT_PAUSE_IN_SLP_M  (BIT(9))
#define RTC_CNTL_WDT_PAUSE_IN_SLP_V  0x1
#define RTC_CNTL_WDT_PAUSE_IN_SLP_S  9
/* RTC_CNTL_WDT_CHIP_RESET_EN:R/W；位位置：[8]；默认值：1’b0；*/
/*描述：wdt重置全芯片启用*/
#define RTC_CNTL_WDT_CHIP_RESET_EN  (BIT(8))
#define RTC_CNTL_WDT_CHIP_RESET_EN_M  (BIT(8))
#define RTC_CNTL_WDT_CHIP_RESET_EN_V  0x1
#define RTC_CNTL_WDT_CHIP_RESET_EN_S  8
/* RTC_CNTL_WDT_CHIP_RESET_WIDTH:R/W；位位置：[7:0]；默认值：8'd20；*/
/*描述：芯片复位信号脉冲宽度*/
#define RTC_CNTL_WDT_CHIP_RESET_WIDTH  0x000000FF
#define RTC_CNTL_WDT_CHIP_RESET_WIDTH_M  ((RTC_CNTL_WDT_CHIP_RESET_WIDTH_V)<<(RTC_CNTL_WDT_CHIP_RESET_WIDTH_S))
#define RTC_CNTL_WDT_CHIP_RESET_WIDTH_V  0xFF
#define RTC_CNTL_WDT_CHIP_RESET_WIDTH_S  0

#define RTC_CNTL_WDTCONFIG1_REG          (DR_REG_RTCCNTL_BASE + 0x00B4)
/* RTC_CNTL_WDT_STG0_HOLD:R/W；位位置：[31:0]；默认值：32'd200000；*/
/*说明：*/
#define RTC_CNTL_WDT_STG0_HOLD  0xFFFFFFFF
#define RTC_CNTL_WDT_STG0_HOLD_M  ((RTC_CNTL_WDT_STG0_HOLD_V)<<(RTC_CNTL_WDT_STG0_HOLD_S))
#define RTC_CNTL_WDT_STG0_HOLD_V  0xFFFFFFFF
#define RTC_CNTL_WDT_STG0_HOLD_S  0

#define RTC_CNTL_WDTCONFIG2_REG          (DR_REG_RTCCNTL_BASE + 0x00B8)
/* RTC_CNTL_WDT_STG1_HOLD:R/W；位位置：[31:0]；默认值：32'd80000；*/
/*说明：*/
#define RTC_CNTL_WDT_STG1_HOLD  0xFFFFFFFF
#define RTC_CNTL_WDT_STG1_HOLD_M  ((RTC_CNTL_WDT_STG1_HOLD_V)<<(RTC_CNTL_WDT_STG1_HOLD_S))
#define RTC_CNTL_WDT_STG1_HOLD_V  0xFFFFFFFF
#define RTC_CNTL_WDT_STG1_HOLD_S  0

#define RTC_CNTL_WDTCONFIG3_REG          (DR_REG_RTCCNTL_BASE + 0x00BC)
/* RTC_CNTL_WDT_STG2_HOLD:R/W；位位置：[31:0]；默认值：32'fff；*/
/*说明：*/
#define RTC_CNTL_WDT_STG2_HOLD  0xFFFFFFFF
#define RTC_CNTL_WDT_STG2_HOLD_M  ((RTC_CNTL_WDT_STG2_HOLD_V)<<(RTC_CNTL_WDT_STG2_HOLD_S))
#define RTC_CNTL_WDT_STG2_HOLD_V  0xFFFFFFFF
#define RTC_CNTL_WDT_STG2_HOLD_S  0

#define RTC_CNTL_WDTCONFIG4_REG          (DR_REG_RTCCNTL_BASE + 0x00C0)
/* RTC_CNTL_WDT_STG3_HOLD:R/W；位位置：[31:0]；默认值：32'fff；*/
/*说明：*/
#define RTC_CNTL_WDT_STG3_HOLD  0xFFFFFFFF
#define RTC_CNTL_WDT_STG3_HOLD_M  ((RTC_CNTL_WDT_STG3_HOLD_V)<<(RTC_CNTL_WDT_STG3_HOLD_S))
#define RTC_CNTL_WDT_STG3_HOLD_V  0xFFFFFFFF
#define RTC_CNTL_WDT_STG3_HOLD_S  0

#define RTC_CNTL_WDTFEED_REG          (DR_REG_RTCCNTL_BASE + 0x00C4)
/* RTC_CNTL_WDT_FEED:WO；位位置：[31]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_WDT_FEED  (BIT(31))
#define RTC_CNTL_WDT_FEED_M  (BIT(31))
#define RTC_CNTL_WDT_FEED_V  0x1
#define RTC_CNTL_WDT_FEED_S  31

#define RTC_CNTL_WDTWPROTECT_REG          (DR_REG_RTCCNTL_BASE + 0x00C8)
/* RTC_CNTL_WDT_WKEY：R/W；位位置：[31:0]；默认值：32'h0；*/
/*说明：*/
#define RTC_CNTL_WDT_WKEY  0xFFFFFFFF
#define RTC_CNTL_WDT_WKEY_M  ((RTC_CNTL_WDT_WKEY_V)<<(RTC_CNTL_WDT_WKEY_S))
#define RTC_CNTL_WDT_WKEY_V  0xFFFFFFFF
#define RTC_CNTL_WDT_WKEY_S  0

#define RTC_CNTL_WDTRESET_CHIP_REG          (DR_REG_RTCCNTL_BASE + 0x00CC)
/* RTC_CNTL_RESET-CHIP密钥：R/W；位位置：[31:24]；默认值：8'd0；*/
/*说明：*/
#define RTC_CNTL_RESET_CHIP_KEY  0x000000FF
#define RTC_CNTL_RESET_CHIP_KEY_M  ((RTC_CNTL_RESET_CHIP_KEY_V)<<(RTC_CNTL_RESET_CHIP_KEY_S))
#define RTC_CNTL_RESET_CHIP_KEY_V  0xFF
#define RTC_CNTL_RESET_CHIP_KEY_S  24
/* RTC_CNTL_RESET_CHIP_TARGET:R/W；比特位置：[23:16]；默认值：8'ha5；*/
/*说明：*/
#define RTC_CNTL_RESET_CHIP_TARGET  0x000000FF
#define RTC_CNTL_RESET_CHIP_TARGET_M  ((RTC_CNTL_RESET_CHIP_TARGET_V)<<(RTC_CNTL_RESET_CHIP_TARGET_S))
#define RTC_CNTL_RESET_CHIP_TARGET_V  0xFF
#define RTC_CNTL_RESET_CHIP_TARGET_S  16

#define RTC_CNTL_SWD_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x00D0)
/* RTC_CNTL_SWD_AUTO_FEED_EN:R/W；位位置：[31]；默认值：1’b0；*/
/*描述：当int出现时自动馈送swd*/
#define RTC_CNTL_SWD_AUTO_FEED_EN  (BIT(31))
#define RTC_CNTL_SWD_AUTO_FEED_EN_M  (BIT(31))
#define RTC_CNTL_SWD_AUTO_FEED_EN_V  0x1
#define RTC_CNTL_SWD_AUTO_FEED_EN_S  31
/* RTC_CNTL_SWD禁用：R/W；位位置：[30]；默认值：1’b0；*/
/*说明：禁用SWD*/
#define RTC_CNTL_SWD_DISABLE  (BIT(30))
#define RTC_CNTL_SWD_DISABLE_M  (BIT(30))
#define RTC_CNTL_SWD_DISABLE_V  0x1
#define RTC_CNTL_SWD_DISABLE_S  30
/* RTC_CNTL_SWD_FEED:WO；位位置：[29]；默认值：1’b0；*/
/*description:开关馈电开关*/
#define RTC_CNTL_SWD_FEED  (BIT(29))
#define RTC_CNTL_SWD_FEED_M  (BIT(29))
#define RTC_CNTL_SWD_FEED_V  0x1
#define RTC_CNTL_SWD_FEED_S  29
/* RTC_CNTL_SWD_RST_FLAG_CLR:WO；位位置：[28]；默认值：1’b0；*/
/*描述：重置swd重置标志*/
#define RTC_CNTL_SWD_RST_FLAG_CLR  (BIT(28))
#define RTC_CNTL_SWD_RST_FLAG_CLR_M  (BIT(28))
#define RTC_CNTL_SWD_RST_FLAG_CLR_V  0x1
#define RTC_CNTL_SWD_RST_FLAG_CLR_S  28
/* RTC_CNTL_SWD信号宽度：R/W；比特位置：[27:18]；默认值：10'd300；*/
/*描述：调整发送到swd的信号宽度*/
#define RTC_CNTL_SWD_SIGNAL_WIDTH  0x000003FF
#define RTC_CNTL_SWD_SIGNAL_WIDTH_M  ((RTC_CNTL_SWD_SIGNAL_WIDTH_V)<<(RTC_CNTL_SWD_SIGNAL_WIDTH_S))
#define RTC_CNTL_SWD_SIGNAL_WIDTH_V  0x3FF
#define RTC_CNTL_SWD_SIGNAL_WIDTH_S  18
/* RTC_CNTL_SWD_bass_RST:R/W；位位置：[17]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_SWD_BYPASS_RST  (BIT(17))
#define RTC_CNTL_SWD_BYPASS_RST_M  (BIT(17))
#define RTC_CNTL_SWD_BYPASS_RST_V  0x1
#define RTC_CNTL_SWD_BYPASS_RST_S  17
/* RTC_CNTL_SWD_FEED_INT:RO；位位置：[1]；默认值：1’b0；*/
/*description:swd中断供纸*/
#define RTC_CNTL_SWD_FEED_INT  (BIT(1))
#define RTC_CNTL_SWD_FEED_INT_M  (BIT(1))
#define RTC_CNTL_SWD_FEED_INT_V  0x1
#define RTC_CNTL_SWD_FEED_INT_S  1
/* RTC_CNTL_SWD_RESET_FLAG:RO；位位置：[0]；默认值：1’b0；*/
/*description:swd重置标志*/
#define RTC_CNTL_SWD_RESET_FLAG  (BIT(0))
#define RTC_CNTL_SWD_RESET_FLAG_M  (BIT(0))
#define RTC_CNTL_SWD_RESET_FLAG_V  0x1
#define RTC_CNTL_SWD_RESET_FLAG_S  0

#define RTC_CNTL_SWD_WPROTECT_REG          (DR_REG_RTCCNTL_BASE + 0x00D4)
/* RTC_CNTL_SWD-WKEY:R/W；位位置：[31:0]；默认值：32'h0；*/
/*说明：*/
#define RTC_CNTL_SWD_WKEY  0xFFFFFFFF
#define RTC_CNTL_SWD_WKEY_M  ((RTC_CNTL_SWD_WKEY_V)<<(RTC_CNTL_SWD_WKEY_S))
#define RTC_CNTL_SWD_WKEY_V  0xFFFFFFFF
#define RTC_CNTL_SWD_WKEY_S  0

#define RTC_CNTL_SW_CPU_STALL_REG          (DR_REG_RTCCNTL_BASE + 0x00D8)
/* RTC_CNTL_SW_STALL_PROCPU_C1:R/W；位位置：[31:26]；默认值：6'b0；*/
/*说明：*/
#define RTC_CNTL_SW_STALL_PROCPU_C1  0x0000003F
#define RTC_CNTL_SW_STALL_PROCPU_C1_M  ((RTC_CNTL_SW_STALL_PROCPU_C1_V)<<(RTC_CNTL_SW_STALL_PROCPU_C1_S))
#define RTC_CNTL_SW_STALL_PROCPU_C1_V  0x3F
#define RTC_CNTL_SW_STALL_PROCPU_C1_S  26
/* RTC_CNTL_SW_STALL_APPCPU_C1:R/W；位位置：[25:20]；默认值：6'b0；*/
/*描述：{reg_sw_stall_appcpu_c1[5:0]*/
#define RTC_CNTL_SW_STALL_APPCPU_C1  0x0000003F
#define RTC_CNTL_SW_STALL_APPCPU_C1_M  ((RTC_CNTL_SW_STALL_APPCPU_C1_V)<<(RTC_CNTL_SW_STALL_APPCPU_C1_S))
#define RTC_CNTL_SW_STALL_APPCPU_C1_V  0x3F
#define RTC_CNTL_SW_STALL_APPCPU_C1_S  20

#define RTC_CNTL_STORE4_REG          (DR_REG_RTCCNTL_BASE + 0x00DC)
/* RTC_CNTL_SCRATCH4:R/W；位位置：[31:0]；默认值：0；*/
/*说明：*/
#define RTC_CNTL_SCRATCH4  0xFFFFFFFF
#define RTC_CNTL_SCRATCH4_M  ((RTC_CNTL_SCRATCH4_V)<<(RTC_CNTL_SCRATCH4_S))
#define RTC_CNTL_SCRATCH4_V  0xFFFFFFFF
#define RTC_CNTL_SCRATCH4_S  0

#define RTC_CNTL_STORE5_REG          (DR_REG_RTCCNTL_BASE + 0x00E0)
/* RTC_CNTL_SCRATCH5:R/W；位位置：[31:0]；默认值：0；*/
/*说明：*/
#define RTC_CNTL_SCRATCH5  0xFFFFFFFF
#define RTC_CNTL_SCRATCH5_M  ((RTC_CNTL_SCRATCH5_V)<<(RTC_CNTL_SCRATCH5_S))
#define RTC_CNTL_SCRATCH5_V  0xFFFFFFFF
#define RTC_CNTL_SCRATCH5_S  0

#define RTC_CNTL_STORE6_REG          (DR_REG_RTCCNTL_BASE + 0x00E4)
/* RTC_CNTL_SCRATCH6:R/W；位位置：[31:0]；默认值：0；*/
/*说明：*/
#define RTC_CNTL_SCRATCH6  0xFFFFFFFF
#define RTC_CNTL_SCRATCH6_M  ((RTC_CNTL_SCRATCH6_V)<<(RTC_CNTL_SCRATCH6_S))
#define RTC_CNTL_SCRATCH6_V  0xFFFFFFFF
#define RTC_CNTL_SCRATCH6_S  0

#define RTC_CNTL_STORE7_REG          (DR_REG_RTCCNTL_BASE + 0x00E8)
/* RTC_CNTL_SCRATCH7:R/W；位位置：[31:0]；默认值：0；*/
/*说明：*/
#define RTC_CNTL_SCRATCH7  0xFFFFFFFF
#define RTC_CNTL_SCRATCH7_M  ((RTC_CNTL_SCRATCH7_V)<<(RTC_CNTL_SCRATCH7_S))
#define RTC_CNTL_SCRATCH7_V  0xFFFFFFFF
#define RTC_CNTL_SCRATCH7_S  0

#define RTC_CNTL_LOW_POWER_ST_REG          (DR_REG_RTCCNTL_BASE + 0x00EC)
/* RTC_CNTL_MAIN_STATE:RO；位位置：[31:28]；默认值：4'd0；*/
/*描述：rtc主状态机状态*/
#define RTC_CNTL_MAIN_STATE  0x0000000F
#define RTC_CNTL_MAIN_STATE_M  ((RTC_CNTL_MAIN_STATE_V)<<(RTC_CNTL_MAIN_STATE_S))
#define RTC_CNTL_MAIN_STATE_V  0xF
#define RTC_CNTL_MAIN_STATE_S  28
/* RTC_CNTL_MAIN_STATE_IN_IDLE:RO；位位置：[27]；默认值：1’b0；*/
/*描述：rtc主状态机处于空闲状态*/
#define RTC_CNTL_MAIN_STATE_IN_IDLE  (BIT(27))
#define RTC_CNTL_MAIN_STATE_IN_IDLE_M  (BIT(27))
#define RTC_CNTL_MAIN_STATE_IN_IDLE_V  0x1
#define RTC_CNTL_MAIN_STATE_IN_IDLE_S  27
/* RTC_CNTL_MAIN_STATE_IN_SLP:RO；位位置：[26]；默认值：1’b0；*/
/*描述：rtc主状态机处于睡眠状态*/
#define RTC_CNTL_MAIN_STATE_IN_SLP  (BIT(26))
#define RTC_CNTL_MAIN_STATE_IN_SLP_M  (BIT(26))
#define RTC_CNTL_MAIN_STATE_IN_SLP_V  0x1
#define RTC_CNTL_MAIN_STATE_IN_SLP_S  26
/* RTC_CNTL_MAIN_STATE_IN_WAIT_XTL:RO；位位置：[25]；默认值：1’b0；*/
/*描述：rtc主状态机处于等待xtal状态*/
#define RTC_CNTL_MAIN_STATE_IN_WAIT_XTL  (BIT(25))
#define RTC_CNTL_MAIN_STATE_IN_WAIT_XTL_M  (BIT(25))
#define RTC_CNTL_MAIN_STATE_IN_WAIT_XTL_V  0x1
#define RTC_CNTL_MAIN_STATE_IN_WAIT_XTL_S  25
/* RTC_CNTL_MAIN_STATE_IN_WAIT_PLL:RO；位位置：[24]；默认值：1’b0；*/
/*描述：rtc主状态机处于等待锁相环状态*/
#define RTC_CNTL_MAIN_STATE_IN_WAIT_PLL  (BIT(24))
#define RTC_CNTL_MAIN_STATE_IN_WAIT_PLL_M  (BIT(24))
#define RTC_CNTL_MAIN_STATE_IN_WAIT_PLL_V  0x1
#define RTC_CNTL_MAIN_STATE_IN_WAIT_PLL_S  24
/* RTC_CNTL_MAIN_STATE_IN_WAIT_8M:RO；位位置：[23]；默认值：1’b0；*/
/*描述：rtc主状态机处于等待8m状态*/
#define RTC_CNTL_MAIN_STATE_IN_WAIT_8M  (BIT(23))
#define RTC_CNTL_MAIN_STATE_IN_WAIT_8M_M  (BIT(23))
#define RTC_CNTL_MAIN_STATE_IN_WAIT_8M_V  0x1
#define RTC_CNTL_MAIN_STATE_IN_WAIT_8M_S  23
/* RTC_CNTL_IN_LOW_POWER_STATE:RO；位位置：[22]；默认值：1’b0；*/
/*描述：rtc主状态机处于低功耗状态*/
#define RTC_CNTL_IN_LOW_POWER_STATE  (BIT(22))
#define RTC_CNTL_IN_LOW_POWER_STATE_M  (BIT(22))
#define RTC_CNTL_IN_LOW_POWER_STATE_V  0x1
#define RTC_CNTL_IN_LOW_POWER_STATE_S  22
/* RTC_CNTL_IN_WAKEUP_STATE:RO；位位置：[21]；默认值：1’b0；*/
/*描述：rtc主状态机处于唤醒进程状态*/
#define RTC_CNTL_IN_WAKEUP_STATE  (BIT(21))
#define RTC_CNTL_IN_WAKEUP_STATE_M  (BIT(21))
#define RTC_CNTL_IN_WAKEUP_STATE_V  0x1
#define RTC_CNTL_IN_WAKEUP_STATE_S  21
/* RTC_CNTL_MAIN_STATE_WAIT_END:RO；位位置：[20]；默认值：1’b0；*/
/*描述：rtc主状态机已等待一些周期*/
#define RTC_CNTL_MAIN_STATE_WAIT_END  (BIT(20))
#define RTC_CNTL_MAIN_STATE_WAIT_END_M  (BIT(20))
#define RTC_CNTL_MAIN_STATE_WAIT_END_V  0x1
#define RTC_CNTL_MAIN_STATE_WAIT_END_S  20
/* RTC_CNTL_RDY-FOR_WAKEUP:RO；位位置：[19]；默认值：1’b0；*/
/*描述：rtc已准备好从唤醒源接收唤醒触发*/
#define RTC_CNTL_RDY_FOR_WAKEUP  (BIT(19))
#define RTC_CNTL_RDY_FOR_WAKEUP_M  (BIT(19))
#define RTC_CNTL_RDY_FOR_WAKEUP_V  0x1
#define RTC_CNTL_RDY_FOR_WAKEUP_S  19
/* RTC_CNTL_MAIN_STATE_PLL_ON:RO；位位置：[18]；默认值：1’b0；*/
/*描述：rtc主状态机处于pll应该运行的状态*/
#define RTC_CNTL_MAIN_STATE_PLL_ON  (BIT(18))
#define RTC_CNTL_MAIN_STATE_PLL_ON_M  (BIT(18))
#define RTC_CNTL_MAIN_STATE_PLL_ON_V  0x1
#define RTC_CNTL_MAIN_STATE_PLL_ON_S  18
/* RTC_CNTL_MAIN_STATE_XTAL_ISO:RO；位位置：[17]；默认值：1’b0；*/
/*description:不再有用*/
#define RTC_CNTL_MAIN_STATE_XTAL_ISO  (BIT(17))
#define RTC_CNTL_MAIN_STATE_XTAL_ISO_M  (BIT(17))
#define RTC_CNTL_MAIN_STATE_XTAL_ISO_V  0x1
#define RTC_CNTL_MAIN_STATE_XTAL_ISO_S  17
/* RTC_CNTL-COCPU_STATE_DONE:RO；位位置：[16]；默认值：1’b0；*/
/*描述：ulp/cocpu已完成*/
#define RTC_CNTL_COCPU_STATE_DONE  (BIT(16))
#define RTC_CNTL_COCPU_STATE_DONE_M  (BIT(16))
#define RTC_CNTL_COCPU_STATE_DONE_V  0x1
#define RTC_CNTL_COCPU_STATE_DONE_S  16
/* RTC_CNTL-COCPU_STATE_SLP:RO；位位置：[15]；默认值：1’b0；*/
/*描述：ulp/cocpu处于睡眠状态*/
#define RTC_CNTL_COCPU_STATE_SLP  (BIT(15))
#define RTC_CNTL_COCPU_STATE_SLP_M  (BIT(15))
#define RTC_CNTL_COCPU_STATE_SLP_V  0x1
#define RTC_CNTL_COCPU_STATE_SLP_S  15
/* RTC_CNTL-COCPU_STATE_SWITCH:RO；位位置：[14]；默认值：1’b0；*/
/*描述：ulp/cocpu即将工作。开关rtc主状态*/
#define RTC_CNTL_COCPU_STATE_SWITCH  (BIT(14))
#define RTC_CNTL_COCPU_STATE_SWITCH_M  (BIT(14))
#define RTC_CNTL_COCPU_STATE_SWITCH_V  0x1
#define RTC_CNTL_COCPU_STATE_SWITCH_S  14
/* RTC_CNTL-COCPU_STATE_START:RO；位位置：[13]；默认值：1’b0；*/
/*描述：ulp/cocpu应该开始工作*/
#define RTC_CNTL_COCPU_STATE_START  (BIT(13))
#define RTC_CNTL_COCPU_STATE_START_M  (BIT(13))
#define RTC_CNTL_COCPU_STATE_START_V  0x1
#define RTC_CNTL_COCPU_STATE_START_S  13
/* RTC_CNTL-TOUCH_STATE_DONE:RO；位位置：[12]；默认值：1’b0；*/
/*description:触摸完成*/
#define RTC_CNTL_TOUCH_STATE_DONE  (BIT(12))
#define RTC_CNTL_TOUCH_STATE_DONE_M  (BIT(12))
#define RTC_CNTL_TOUCH_STATE_DONE_V  0x1
#define RTC_CNTL_TOUCH_STATE_DONE_S  12
/* RTC_CNTL_TOUCH_STATE_SLP:RO；位位置：[11]；默认值：1’b0；*/
/*描述：touch处于睡眠状态*/
#define RTC_CNTL_TOUCH_STATE_SLP  (BIT(11))
#define RTC_CNTL_TOUCH_STATE_SLP_M  (BIT(11))
#define RTC_CNTL_TOUCH_STATE_SLP_V  0x1
#define RTC_CNTL_TOUCH_STATE_SLP_S  11
/* RTC_CNTL_TOUCH_STATE_SWITCH:RO；位位置：[10]；默认值：1’b0；*/
/*描述：touch即将开始工作。开关rtc主状态*/
#define RTC_CNTL_TOUCH_STATE_SWITCH  (BIT(10))
#define RTC_CNTL_TOUCH_STATE_SWITCH_M  (BIT(10))
#define RTC_CNTL_TOUCH_STATE_SWITCH_V  0x1
#define RTC_CNTL_TOUCH_STATE_SWITCH_S  10
/* RTC_CNTL_TOUCH_STATE_START:RO；位位置：[9]；默认值：1’b0；*/
/*描述：触摸应该开始工作*/
#define RTC_CNTL_TOUCH_STATE_START  (BIT(9))
#define RTC_CNTL_TOUCH_STATE_START_M  (BIT(9))
#define RTC_CNTL_TOUCH_STATE_START_V  0x1
#define RTC_CNTL_TOUCH_STATE_START_S  9
/* RTC_CNTL-xpdig:RO；位位置：[8]；默认值：1’b0；*/
/*描述：数字包装断电*/
#define RTC_CNTL_XPD_DIG  (BIT(8))
#define RTC_CNTL_XPD_DIG_M  (BIT(8))
#define RTC_CNTL_XPD_DIG_V  0x1
#define RTC_CNTL_XPD_DIG_S  8
/* RTC_CNTL_DIG_ISO:RO；位位置：[7]；默认值：1’b0；*/
/*描述：数字包裹iso*/
#define RTC_CNTL_DIG_ISO  (BIT(7))
#define RTC_CNTL_DIG_ISO_M  (BIT(7))
#define RTC_CNTL_DIG_ISO_V  0x1
#define RTC_CNTL_DIG_ISO_S  7
/* RTC_CNTL-XPD-WIFI:RO；位位置：[6]；默认值：1’b0；*/
/*描述：wifi包装断电*/
#define RTC_CNTL_XPD_WIFI  (BIT(6))
#define RTC_CNTL_XPD_WIFI_M  (BIT(6))
#define RTC_CNTL_XPD_WIFI_V  0x1
#define RTC_CNTL_XPD_WIFI_S  6
/* RTC_cntlwifi-ISO:RO；位位置：[5]；默认值：1’b0；*/
/*描述：wifi iso*/
#define RTC_CNTL_WIFI_ISO  (BIT(5))
#define RTC_CNTL_WIFI_ISO_M  (BIT(5))
#define RTC_CNTL_WIFI_ISO_V  0x1
#define RTC_CNTL_WIFI_ISO_S  5
/* RTC_CNTL-XPD-rtcperi:RO；位位置：[4]；默认值：1’b0；*/
/*描述：rtc外围设备断电*/
#define RTC_CNTL_XPD_RTC_PERI  (BIT(4))
#define RTC_CNTL_XPD_RTC_PERI_M  (BIT(4))
#define RTC_CNTL_XPD_RTC_PERI_V  0x1
#define RTC_CNTL_XPD_RTC_PERI_S  4
/* RTC_CNTL_PERI_ISO:RO；位位置：[3]；默认值：1’b0；*/
/*描述：rtc外围iso*/
#define RTC_CNTL_PERI_ISO  (BIT(3))
#define RTC_CNTL_PERI_ISO_M  (BIT(3))
#define RTC_CNTL_PERI_ISO_V  0x1
#define RTC_CNTL_PERI_ISO_S  3
/* RTC_CNTL-XPD_DIG_DCDC:RO；位位置：[2]；默认值：1’b0；*/
/*description:外部DCDC断电*/
#define RTC_CNTL_XPD_DIG_DCDC  (BIT(2))
#define RTC_CNTL_XPD_DIG_DCDC_M  (BIT(2))
#define RTC_CNTL_XPD_DIG_DCDC_V  0x1
#define RTC_CNTL_XPD_DIG_DCDC_S  2
/* RTC_CNTL-XPD-ROM0:RO；位位置：[0]；默认值：1’b0；*/
/*description:rom0掉电*/
#define RTC_CNTL_XPD_ROM0  (BIT(0))
#define RTC_CNTL_XPD_ROM0_M  (BIT(0))
#define RTC_CNTL_XPD_ROM0_V  0x1
#define RTC_CNTL_XPD_ROM0_S  0

#define RTC_CNTL_DIAG0_REG          (DR_REG_RTCCNTL_BASE + 0x00F0)
/* RTC_CNTL_LOW_POWER_DIAG1:RO；位位置：[31:0]；默认值：0；*/
/*说明：*/
#define RTC_CNTL_LOW_POWER_DIAG1  0xFFFFFFFF
#define RTC_CNTL_LOW_POWER_DIAG1_M  ((RTC_CNTL_LOW_POWER_DIAG1_V)<<(RTC_CNTL_LOW_POWER_DIAG1_S))
#define RTC_CNTL_LOW_POWER_DIAG1_V  0xFFFFFFFF
#define RTC_CNTL_LOW_POWER_DIAG1_S  0

#define RTC_CNTL_PAD_HOLD_REG          (DR_REG_RTCCNTL_BASE + 0x00F4)
/* RTC_CNTL_GPIO_PIN5_HOLD:R/W；位位置：[5]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN5_HOLD  (BIT(5))
#define RTC_CNTL_GPIO_PIN5_HOLD_M  (BIT(5))
#define RTC_CNTL_GPIO_PIN5_HOLD_V  0x1
#define RTC_CNTL_GPIO_PIN5_HOLD_S  5
/* RTC_CNTL_GPIO_PIN4_HOLD:R/W；位位置：[4]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN4_HOLD  (BIT(4))
#define RTC_CNTL_GPIO_PIN4_HOLD_M  (BIT(4))
#define RTC_CNTL_GPIO_PIN4_HOLD_V  0x1
#define RTC_CNTL_GPIO_PIN4_HOLD_S  4
/* RTC_CNTL_GPIO_PIN3_旧版：R/W；位位置：[3]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN3_HOLD  (BIT(3))
#define RTC_CNTL_GPIO_PIN3_HOLD_M  (BIT(3))
#define RTC_CNTL_GPIO_PIN3_HOLD_V  0x1
#define RTC_CNTL_GPIO_PIN3_HOLD_S  3
/* RTC_CNTL_GPIO_PIN2_旧版：R/W；位位置：[2]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN2_HOLD  (BIT(2))
#define RTC_CNTL_GPIO_PIN2_HOLD_M  (BIT(2))
#define RTC_CNTL_GPIO_PIN2_HOLD_V  0x1
#define RTC_CNTL_GPIO_PIN2_HOLD_S  2
/* RTC_CNTL_GPIO_PIN1_旧：R/W；位位置：[1]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN1_HOLD  (BIT(1))
#define RTC_CNTL_GPIO_PIN1_HOLD_M  (BIT(1))
#define RTC_CNTL_GPIO_PIN1_HOLD_V  0x1
#define RTC_CNTL_GPIO_PIN1_HOLD_S  1
/* RTC_CNTL_GPIO_PIN0_HOLD:R/W；位位置：[0]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN0_HOLD  (BIT(0))
#define RTC_CNTL_GPIO_PIN0_HOLD_M  (BIT(0))
#define RTC_CNTL_GPIO_PIN0_HOLD_V  0x1
#define RTC_CNTL_GPIO_PIN0_HOLD_S  0

#define RTC_CNTL_DIG_PAD_HOLD_REG          (DR_REG_RTCCNTL_BASE + 0x00F8)
/* RTC_CNTL_DIG_PAD_HOLD:R/W；位位置：[31:0]；默认值：32'b0；*/
/*说明：*/
#define RTC_CNTL_DIG_PAD_HOLD  0xFFFFFFFF
#define RTC_CNTL_DIG_PAD_HOLD_M  ((RTC_CNTL_DIG_PAD_HOLD_V)<<(RTC_CNTL_DIG_PAD_HOLD_S))
#define RTC_CNTL_DIG_PAD_HOLD_V  0xFFFFFFFF
#define RTC_CNTL_DIG_PAD_HOLD_S  0

#define RTC_CNTL_DIG_PAD_HOLD1_REG          (DR_REG_RTCCNTL_BASE + 0x00FC)
/* RTC_CNTL_DIG_PAD_HOLD1:R/W；位位置：[8:0]；默认值：9'b0；*/
/*说明：*/
#define RTC_CNTL_DIG_PAD_HOLD1  0x000001FF
#define RTC_CNTL_DIG_PAD_HOLD1_M  ((RTC_CNTL_DIG_PAD_HOLD1_V)<<(RTC_CNTL_DIG_PAD_HOLD1_S))
#define RTC_CNTL_DIG_PAD_HOLD1_V  0x1FF
#define RTC_CNTL_DIG_PAD_HOLD1_S  0

#define RTC_CNTL_BROWN_OUT_REG          (DR_REG_RTCCNTL_BASE + 0x0100)
/* RTC_CNTL_BROWN_OUT_DET:RO；位位置：[31]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BROWN_OUT_DET  (BIT(31))
#define RTC_CNTL_BROWN_OUT_DET_M  (BIT(31))
#define RTC_CNTL_BROWN_OUT_DET_V  0x1
#define RTC_CNTL_BROWN_OUT_DET_S  31
/* RTC_CNTL_BROWN_OUT_ENA:R/W；位位置：[30]；默认值：1’b1；*/
/*description:启用褐化*/
#define RTC_CNTL_BROWN_OUT_ENA  (BIT(30))
#define RTC_CNTL_BROWN_OUT_ENA_M  (BIT(30))
#define RTC_CNTL_BROWN_OUT_ENA_V  0x1
#define RTC_CNTL_BROWN_OUT_ENA_S  30
/* RTC_CNTL_BROWN_OUT_CNT_CLR:WO；位位置：[29]；默认值：1’b0；*/
/*描述：透明棕色计数器*/
#define RTC_CNTL_BROWN_OUT_CNT_CLR  (BIT(29))
#define RTC_CNTL_BROWN_OUT_CNT_CLR_M  (BIT(29))
#define RTC_CNTL_BROWN_OUT_CNT_CLR_V  0x1
#define RTC_CNTL_BROWN_OUT_CNT_CLR_S  29
/* RTC_CNTL_BROWN_OUT_ANA_RST_EN:R/W；位位置：[28]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BROWN_OUT_ANA_RST_EN  (BIT(28))
#define RTC_CNTL_BROWN_OUT_ANA_RST_EN_M  (BIT(28))
#define RTC_CNTL_BROWN_OUT_ANA_RST_EN_V  0x1
#define RTC_CNTL_BROWN_OUT_ANA_RST_EN_S  28
/* RTC_CNTL_BROWN_OUT_RST_SEL:R/W；位位置：[27]；默认值：1’b0；*/
/*description:1:4-pos复位*/
#define RTC_CNTL_BROWN_OUT_RST_SEL  (BIT(27))
#define RTC_CNTL_BROWN_OUT_RST_SEL_M  (BIT(27))
#define RTC_CNTL_BROWN_OUT_RST_SEL_V  0x1
#define RTC_CNTL_BROWN_OUT_RST_SEL_S  27
/* RTC_CNTL_BROWN_OUT_RST_ENA:R/W；位位置：[26]；默认值：1’b0；*/
/*description:启用褐化重置*/
#define RTC_CNTL_BROWN_OUT_RST_ENA  (BIT(26))
#define RTC_CNTL_BROWN_OUT_RST_ENA_M  (BIT(26))
#define RTC_CNTL_BROWN_OUT_RST_ENA_V  0x1
#define RTC_CNTL_BROWN_OUT_RST_ENA_S  26
/* RTC_CNTL_BROWN_OUT_RST_WAIT:R/W；比特位置：[25:16]；默认值：10'h3ff；*/
/*描述：棕色重置等待周期*/
#define RTC_CNTL_BROWN_OUT_RST_WAIT  0x000003FF
#define RTC_CNTL_BROWN_OUT_RST_WAIT_M  ((RTC_CNTL_BROWN_OUT_RST_WAIT_V)<<(RTC_CNTL_BROWN_OUT_RST_WAIT_S))
#define RTC_CNTL_BROWN_OUT_RST_WAIT_V  0x3FF
#define RTC_CNTL_BROWN_OUT_RST_WAIT_S  16
/* RTC_CNTL_BROWN_OUT_PD_RF_ENA:R/W；位位置：[15]；默认值：1’b0；*/
/*描述：发生断电时启用断电RF*/
#define RTC_CNTL_BROWN_OUT_PD_RF_ENA  (BIT(15))
#define RTC_CNTL_BROWN_OUT_PD_RF_ENA_M  (BIT(15))
#define RTC_CNTL_BROWN_OUT_PD_RF_ENA_V  0x1
#define RTC_CNTL_BROWN_OUT_PD_RF_ENA_S  15
/* RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA:R/W；位位置：[14]；默认值：1’b0；*/
/*描述：在发生断电时启用关闭闪光灯*/
#define RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA  (BIT(14))
#define RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA_M  (BIT(14))
#define RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA_V  0x1
#define RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA_S  14
/* RTC_CNTL_BROWN_OUT_INT_WAIT:R/W；比特位置：[13:4]；默认值：10'h1；*/
/*描述：棕色中断等待周期*/
#define RTC_CNTL_BROWN_OUT_INT_WAIT  0x000003FF
#define RTC_CNTL_BROWN_OUT_INT_WAIT_M  ((RTC_CNTL_BROWN_OUT_INT_WAIT_V)<<(RTC_CNTL_BROWN_OUT_INT_WAIT_S))
#define RTC_CNTL_BROWN_OUT_INT_WAIT_V  0x3FF
#define RTC_CNTL_BROWN_OUT_INT_WAIT_S  4

#define RTC_CNTL_TIME_LOW1_REG          (DR_REG_RTCCNTL_BASE + 0x0104)
/* RTC_CNTL_TIMER_VALUE1_LOW:RO；位位置：[31:0]；默认值：32'h0；*/
/*描述：RTC定时器低32位*/
#define RTC_CNTL_TIMER_VALUE1_LOW  0xFFFFFFFF
#define RTC_CNTL_TIMER_VALUE1_LOW_M  ((RTC_CNTL_TIMER_VALUE1_LOW_V)<<(RTC_CNTL_TIMER_VALUE1_LOW_S))
#define RTC_CNTL_TIMER_VALUE1_LOW_V  0xFFFFFFFF
#define RTC_CNTL_TIMER_VALUE1_LOW_S  0

#define RTC_CNTL_TIME_HIGH1_REG          (DR_REG_RTCCNTL_BASE + 0x0108)
/* RTC_CNTL_TIMER_VALUE1_HIGH:RO；比特位置：[15:0]；默认值：16'0；*/
/*描述：RTC定时器高16位*/
#define RTC_CNTL_TIMER_VALUE1_HIGH  0x0000FFFF
#define RTC_CNTL_TIMER_VALUE1_HIGH_M  ((RTC_CNTL_TIMER_VALUE1_HIGH_V)<<(RTC_CNTL_TIMER_VALUE1_HIGH_S))
#define RTC_CNTL_TIMER_VALUE1_HIGH_V  0xFFFF
#define RTC_CNTL_TIMER_VALUE1_HIGH_S  0

#define RTC_CNTL_XTAL32K_CLK_FACTOR_REG          (DR_REG_RTCCNTL_BASE + 0x010C)
/* RTC_CNTL-XTAL32K_CLK_FACTOR:R/W；位位置：[31:0]；默认值：32'h0；*/
/*描述：xtal 32k看门狗备份时钟因子*/
#define RTC_CNTL_XTAL32K_CLK_FACTOR  0xFFFFFFFF
#define RTC_CNTL_XTAL32K_CLK_FACTOR_M  ((RTC_CNTL_XTAL32K_CLK_FACTOR_V)<<(RTC_CNTL_XTAL32K_CLK_FACTOR_S))
#define RTC_CNTL_XTAL32K_CLK_FACTOR_V  0xFFFFFFFF
#define RTC_CNTL_XTAL32K_CLK_FACTOR_S  0

#define RTC_CNTL_XTAL32K_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x0110)
/* RTC_CNTL-XTAL32K_STABLE_THRES:R/W；位位置：[31:28]；默认值：4'0；*/
/*描述：如果重新启动的xtal32k周期小于*/
#define RTC_CNTL_XTAL32K_STABLE_THRES  0x0000000F
#define RTC_CNTL_XTAL32K_STABLE_THRES_M  ((RTC_CNTL_XTAL32K_STABLE_THRES_V)<<(RTC_CNTL_XTAL32K_STABLE_THRES_S))
#define RTC_CNTL_XTAL32K_STABLE_THRES_V  0xF
#define RTC_CNTL_XTAL32K_STABLE_THRES_S  28
/* RTC_CNTL-XTAL32K_WDT_TIMEOUT:R/W；位位置：[27:20]；默认值：8'ff；*/
/*description:如果在这段时间内没有检测到时钟*/
#define RTC_CNTL_XTAL32K_WDT_TIMEOUT  0x000000FF
#define RTC_CNTL_XTAL32K_WDT_TIMEOUT_M  ((RTC_CNTL_XTAL32K_WDT_TIMEOUT_V)<<(RTC_CNTL_XTAL32K_WDT_TIMEOUT_S))
#define RTC_CNTL_XTAL32K_WDT_TIMEOUT_V  0xFF
#define RTC_CNTL_XTAL32K_WDT_TIMEOUT_S  20
/* RTC_CNTL-XTAL32K_RESTART等待：R/W；比特位置：[19:4]；默认值：16'0；*/
/*描述：等待xtal 32k重新供电的周期*/
#define RTC_CNTL_XTAL32K_RESTART_WAIT  0x0000FFFF
#define RTC_CNTL_XTAL32K_RESTART_WAIT_M  ((RTC_CNTL_XTAL32K_RESTART_WAIT_V)<<(RTC_CNTL_XTAL32K_RESTART_WAIT_S))
#define RTC_CNTL_XTAL32K_RESTART_WAIT_V  0xFFFF
#define RTC_CNTL_XTAL32K_RESTART_WAIT_S  4
/* RTC_CNTL-XTAL32K_RETURN_WAIT:R/W；位位置：[3:0]；默认值：4'0；*/
/*description:等待返回noral xtal 32k的周期*/
#define RTC_CNTL_XTAL32K_RETURN_WAIT  0x0000000F
#define RTC_CNTL_XTAL32K_RETURN_WAIT_M  ((RTC_CNTL_XTAL32K_RETURN_WAIT_V)<<(RTC_CNTL_XTAL32K_RETURN_WAIT_S))
#define RTC_CNTL_XTAL32K_RETURN_WAIT_V  0xF
#define RTC_CNTL_XTAL32K_RETURN_WAIT_S  0

#define RTC_CNTL_USB_CONF_REG          (DR_REG_RTCCNTL_BASE + 0x0114)
/* RTC_CNTL.IO_max_RESET_DISABLE:R/W；位位置：[18]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_IO_MUX_RESET_DISABLE  (BIT(18))
#define RTC_CNTL_IO_MUX_RESET_DISABLE_M  (BIT(18))
#define RTC_CNTL_IO_MUX_RESET_DISABLE_V  0x1
#define RTC_CNTL_IO_MUX_RESET_DISABLE_S  18

#define RTC_CNTL_SLP_REJECT_CAUSE_REG          (DR_REG_RTCCNTL_BASE + 0x0118)
/* RTC_CNTL拒绝原因：RO；比特位置：[18:0]；默认值：19'd0；*/
/*description:睡眠拒绝原因*/
#define RTC_CNTL_REJECT_CAUSE  0x0007FFFF
#define RTC_CNTL_REJECT_CAUSE_M  ((RTC_CNTL_REJECT_CAUSE_V)<<(RTC_CNTL_REJECT_CAUSE_S))
#define RTC_CNTL_REJECT_CAUSE_V  0x7FFFF
#define RTC_CNTL_REJECT_CAUSE_S  0

#define RTC_CNTL_OPTION1_REG          (DR_REG_RTCCNTL_BASE + 0x011C)
/* RTC_CNTL_FORCE_DOWNLOAD_BOOT:R/W；位位置：[0]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_FORCE_DOWNLOAD_BOOT  (BIT(0))
#define RTC_CNTL_FORCE_DOWNLOAD_BOOT_M  (BIT(0))
#define RTC_CNTL_FORCE_DOWNLOAD_BOOT_V  0x1
#define RTC_CNTL_FORCE_DOWNLOAD_BOOT_S  0

#define RTC_CNTL_SLP_WAKEUP_CAUSE_REG          (DR_REG_RTCCNTL_BASE + 0x0120)
/* RTC_CNTL-WAKEUP_CAUSE:RO；比特位置：[18:0]；默认值：19'd0；*/
/*描述：睡眠唤醒原因*/
#define RTC_CNTL_WAKEUP_CAUSE  0x0007FFFF
#define RTC_CNTL_WAKEUP_CAUSE_M  ((RTC_CNTL_WAKEUP_CAUSE_V)<<(RTC_CNTL_WAKEUP_CAUSE_S))
#define RTC_CNTL_WAKEUP_CAUSE_V  0x7FFFF
#define RTC_CNTL_WAKEUP_CAUSE_S  0

#define RTC_CNTL_ULP_CP_TIMER_1_REG          (DR_REG_RTCCNTL_BASE + 0x0124)
/* RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE:R/W；位位置：[31:8]；默认值：24'd200；*/
/*描述：ULP协处理器计时器的休眠周期*/
#define RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE  0x00FFFFFF
#define RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_M  ((RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_V)<<(RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_S))
#define RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_V  0xFFFFFF
#define RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_S  8

#define RTC_CNTL_INT_ENA_W1TS_REG          (DR_REG_RTCCNTL_BASE + 0x0128)
/* RTC_CNTL-VSET_DCDC_DONE_INT_ENA_W1TS:WO；位位置：[22]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_W1TS  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_W1TS_M  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_W1TS_S  22
/* RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TS:WO；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TS  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TS_M  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TS_S  21
/* RTC_CNTL_BBPLL_CAL_INT_ENA_W1TS:WO；位位置：[20]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BBPLL_CAL_INT_ENA_W1TS  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_ENA_W1TS_M  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_BBPLL_CAL_INT_ENA_W1TS_S  20
/* RTC_CNTL-gill_DET_INT_ENA_W1TS:WO；位位置：[19]；默认值：1’b0；*/
/*description:enbale gitch det中断*/
#define RTC_CNTL_GLITCH_DET_INT_ENA_W1TS  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_ENA_W1TS_M  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_GLITCH_DET_INT_ENA_W1TS_S  19
/* RTC_CNTL-XTAL32K_DEAD_INT_ENA_W1TS:WO；位位置：[16]；默认值：1’b0；*/
/*描述：启用xtal32k_adead中断*/
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TS  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TS_M  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TS_S  16
/* RTC_CNTL_SWD_INT_ENA_W1TS:WO；位位置：[15]；默认值：1’b0；*/
/*描述：启用超级看门狗中断*/
#define RTC_CNTL_SWD_INT_ENA_W1TS  (BIT(15))
#define RTC_CNTL_SWD_INT_ENA_W1TS_M  (BIT(15))
#define RTC_CNTL_SWD_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_SWD_INT_ENA_W1TS_S  15
/* RTC_CNTL_MAIN_TIMER_INT_ENA_W1TS:WO；位位置：[10]；默认值：1’b0；*/
/*description:启用RTC主计时器中断*/
#define RTC_CNTL_MAIN_TIMER_INT_ENA_W1TS  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_ENA_W1TS_M  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_MAIN_TIMER_INT_ENA_W1TS_S  10
/* RTC_CNTL_BROWN_OUT_INT_ENA_W1TS:WO；位位置：[9]；默认值：1’b0；*/
/*描述：启用棕色中断*/
#define RTC_CNTL_BROWN_OUT_INT_ENA_W1TS  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_ENA_W1TS_M  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_BROWN_OUT_INT_ENA_W1TS_S  9
/* RTC_CNTL_WDT_INT_ENA_W1TS:WO；位位置：[3]；默认值：1’b0；*/
/*description:启用RTC WDT中断*/
#define RTC_CNTL_WDT_INT_ENA_W1TS  (BIT(3))
#define RTC_CNTL_WDT_INT_ENA_W1TS_M  (BIT(3))
#define RTC_CNTL_WDT_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_WDT_INT_ENA_W1TS_S  3
/* RTC_CNTL_SLP_REJECT_INT_ENA_W1TS:WO；位位置：[1]；默认值：1’b0；*/
/*description:启用睡眠拒绝中断*/
#define RTC_CNTL_SLP_REJECT_INT_ENA_W1TS  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_ENA_W1TS_M  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_SLP_REJECT_INT_ENA_W1TS_S  1
/* RTC_CNTL_SLP_awakeup_INT_ENA_W1TS:WO；位位置：[0]；默认值：1’b0；*/
/*描述：启用睡眠唤醒中断*/
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TS  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TS_M  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TS_V  0x1
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TS_S  0

#define RTC_CNTL_INT_ENA_W1TC_REG          (DR_REG_RTCCNTL_BASE + 0x012C)
/* RTC_CNTL-VSET_DCDC_DONE_INT_ENA_W1TC:WO；位位置：[22]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_W1TC  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_W1TC_M  (BIT(22))
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_VSET_DCDC_DONE_INT_ENA_W1TC_S  22
/* RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TC:WO；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TC  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TC_M  (BIT(21))
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_BLE_COMPARE_WAKE_INT_ENA_W1TC_S  21
/* RTC_CNTL_bbpl_CAL_INT_ENA_W1TC:WO；位位置：[20]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_BBPLL_CAL_INT_ENA_W1TC  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_ENA_W1TC_M  (BIT(20))
#define RTC_CNTL_BBPLL_CAL_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_BBPLL_CAL_INT_ENA_W1TC_S  20
/* RTC_CNTL-gill_DET_INT_ENA_W1TC：WO；位位置：[19]；默认值：1’b0；*/
/*description:enbale gitch det中断*/
#define RTC_CNTL_GLITCH_DET_INT_ENA_W1TC  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_ENA_W1TC_M  (BIT(19))
#define RTC_CNTL_GLITCH_DET_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_GLITCH_DET_INT_ENA_W1TC_S  19
/* RTC_CNTL-XTAL32K_DEAD_INT_ENA_W1TC:WO；位位置：[16]；默认值：1’b0；*/
/*描述：启用xtal32k_adead中断*/
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TC  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TC_M  (BIT(16))
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TC_S  16
/* RTC_CNTL_SWD_INT_ENA_W1TC:WO；位位置：[15]；默认值：1’b0；*/
/*描述：启用超级看门狗中断*/
#define RTC_CNTL_SWD_INT_ENA_W1TC  (BIT(15))
#define RTC_CNTL_SWD_INT_ENA_W1TC_M  (BIT(15))
#define RTC_CNTL_SWD_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_SWD_INT_ENA_W1TC_S  15
/* RTC_CNTL_MAIN_TIMER_INT_ENA_W1TC:WO；位位置：[10]；默认值：1’b0；*/
/*description:启用RTC主计时器中断*/
#define RTC_CNTL_MAIN_TIMER_INT_ENA_W1TC  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_ENA_W1TC_M  (BIT(10))
#define RTC_CNTL_MAIN_TIMER_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_MAIN_TIMER_INT_ENA_W1TC_S  10
/* RTC_CNTL_BROWN_OUT_INT_ENA_W1TC:WO；位位置：[9]；默认值：1’b0；*/
/*描述：启用棕色中断*/
#define RTC_CNTL_BROWN_OUT_INT_ENA_W1TC  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_ENA_W1TC_M  (BIT(9))
#define RTC_CNTL_BROWN_OUT_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_BROWN_OUT_INT_ENA_W1TC_S  9
/* RTC_CNTL_WDT_INT_ENA_W1TC：WO；位位置：[3]；默认值：1’b0；*/
/*description:启用RTC WDT中断*/
#define RTC_CNTL_WDT_INT_ENA_W1TC  (BIT(3))
#define RTC_CNTL_WDT_INT_ENA_W1TC_M  (BIT(3))
#define RTC_CNTL_WDT_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_WDT_INT_ENA_W1TC_S  3
/* RTC_CNTL_SLP拒绝INT_ENA_W1TC：WO；位位置：[1]；默认值：1’b0；*/
/*description:启用睡眠拒绝中断*/
#define RTC_CNTL_SLP_REJECT_INT_ENA_W1TC  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_ENA_W1TC_M  (BIT(1))
#define RTC_CNTL_SLP_REJECT_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_SLP_REJECT_INT_ENA_W1TC_S  1
/* RTC_CNTL_SLP_awakeup_INT_ENA_W1TC:WO；位位置：[0]；默认值：1’b0；*/
/*描述：启用睡眠唤醒中断*/
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TC  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TC_M  (BIT(0))
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TC_V  0x1
#define RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TC_S  0

#define RTC_CNTL_RETENTION_CTRL_REG          (DR_REG_RTCCNTL_BASE + 0x0130)
/* RTC_CNTL_gretention_ewait:R/W；位位置：[31:27]；默认值：5'd20；*/
/*description:租用操作的等待周期*/
#define RTC_CNTL_RETENTION_WAIT  0x0000001F
#define RTC_CNTL_RETENTION_WAIT_M  ((RTC_CNTL_RETENTION_WAIT_V)<<(RTC_CNTL_RETENTION_WAIT_S))
#define RTC_CNTL_RETENTION_WAIT_V  0x1F
#define RTC_CNTL_RETENTION_WAIT_S  27
/* RTC_CNTL_gretention_EN:R/W；位位置：[26]；默认值：1'd0；*/
/*说明：*/
#define RTC_CNTL_RETENTION_EN  (BIT(26))
#define RTC_CNTL_RETENTION_EN_M  (BIT(26))
#define RTC_CNTL_RETENTION_EN_V  0x1
#define RTC_CNTL_RETENTION_EN_S  26
/* RTC_CNTL_gretention_CLKOFF_WAIT:R/W；位位置：[25:22]；默认值：4'd3；*/
/*说明：*/
#define RTC_CNTL_RETENTION_CLKOFF_WAIT  0x0000000F
#define RTC_CNTL_RETENTION_CLKOFF_WAIT_M  ((RTC_CNTL_RETENTION_CLKOFF_WAIT_V)<<(RTC_CNTL_RETENTION_CLKOFF_WAIT_S))
#define RTC_CNTL_RETENTION_CLKOFF_WAIT_V  0xF
#define RTC_CNTL_RETENTION_CLKOFF_WAIT_S  22
/* RTC_CNTL_gretention_edone_WAIT:R/W；比特位置：[21:19]；默认值：3'd2；*/
/*说明：*/
#define RTC_CNTL_RETENTION_DONE_WAIT  0x00000007
#define RTC_CNTL_RETENTION_DONE_WAIT_M  ((RTC_CNTL_RETENTION_DONE_WAIT_V)<<(RTC_CNTL_RETENTION_DONE_WAIT_S))
#define RTC_CNTL_RETENTION_DONE_WAIT_V  0x7
#define RTC_CNTL_RETENTION_DONE_WAIT_S  19
/* RTC_CNTL_gretention_CLK_SEL:R/W；位位置：[18]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_RETENTION_CLK_SEL  (BIT(18))
#define RTC_CNTL_RETENTION_CLK_SEL_M  (BIT(18))
#define RTC_CNTL_RETENTION_CLK_SEL_V  0x1
#define RTC_CNTL_RETENTION_CLK_SEL_S  18
/* RTC_CNTL_CNTL_CLK_EN:R/W；位位置：[17]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_CNTL_CLK_EN  (BIT(17))
#define RTC_CNTL_CNTL_CLK_EN_M  (BIT(17))
#define RTC_CNTL_CNTL_CLK_EN_V  0x1
#define RTC_CNTL_CNTL_CLK_EN_S  17

#define RTC_CNTL_RETENTION_CTRL1_REG          (DR_REG_RTCCNTL_BASE + 0x0134)
/* RTC_CNTL_gretention_LINK_ADDR:R/W；位位置：[26:0]；默认值：27'd0；*/
/*说明：*/
#define RTC_CNTL_RETENTION_LINK_ADDR  0x07FFFFFF
#define RTC_CNTL_RETENTION_LINK_ADDR_M  ((RTC_CNTL_RETENTION_LINK_ADDR_V)<<(RTC_CNTL_RETENTION_LINK_ADDR_S))
#define RTC_CNTL_RETENTION_LINK_ADDR_V  0x7FFFFFF
#define RTC_CNTL_RETENTION_LINK_ADDR_S  0

#define RTC_CNTL_FIB_SEL_REG          (DR_REG_RTCCNTL_BASE + 0x0138)
/* RTC_CNTL_fibe_SEL:R/W；位位置：[2:0]；默认值：3'd7；*/
/*描述：选择使用模拟fib信号*/
#define RTC_CNTL_FIB_SEL  0x00000007
#define RTC_CNTL_FIB_SEL_M  ((RTC_CNTL_FIB_SEL_V)<<(RTC_CNTL_FIB_SEL_S))
#define RTC_CNTL_FIB_SEL_V  0x7
#define RTC_CNTL_FIB_SEL_S  0

#define RTC_CNTL_FIB_GLITCH_RST BIT(0)
#define RTC_CNTL_FIB_BOR_RST BIT(1)
#define RTC_CNTL_FIB_SUPER_WDT_RST BIT(2)

#define RTC_CNTL_GPIO_WAKEUP_REG          (DR_REG_RTCCNTL_BASE + 0x013C)
/* RTC_CNTL_GPIO_PIN0_WAKEUP_ENABLE:R/W；位位置：[31]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN0_WAKEUP_ENABLE  (BIT(31))
#define RTC_CNTL_GPIO_PIN0_WAKEUP_ENABLE_M  (BIT(31))
#define RTC_CNTL_GPIO_PIN0_WAKEUP_ENABLE_V  0x1
#define RTC_CNTL_GPIO_PIN0_WAKEUP_ENABLE_S  31
/* RTC_CNTL_GPIO_pin_唤醒启用：R/W；位位置：[30]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN1_WAKEUP_ENABLE  (BIT(30))
#define RTC_CNTL_GPIO_PIN1_WAKEUP_ENABLE_M  (BIT(30))
#define RTC_CNTL_GPIO_PIN1_WAKEUP_ENABLE_V  0x1
#define RTC_CNTL_GPIO_PIN1_WAKEUP_ENABLE_S  30
/* RTC_CNTL_GPIO_PIN2_唤醒启用：R/W；位位置：[29]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN2_WAKEUP_ENABLE  (BIT(29))
#define RTC_CNTL_GPIO_PIN2_WAKEUP_ENABLE_M  (BIT(29))
#define RTC_CNTL_GPIO_PIN2_WAKEUP_ENABLE_V  0x1
#define RTC_CNTL_GPIO_PIN2_WAKEUP_ENABLE_S  29
/* RTC_CNTL_GPIO_PIN3_WAKEUP_ENABLE:R/W；位位置：[28]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN3_WAKEUP_ENABLE  (BIT(28))
#define RTC_CNTL_GPIO_PIN3_WAKEUP_ENABLE_M  (BIT(28))
#define RTC_CNTL_GPIO_PIN3_WAKEUP_ENABLE_V  0x1
#define RTC_CNTL_GPIO_PIN3_WAKEUP_ENABLE_S  28
/* RTC_CNTL_GPIO_PIN4_WAKEUP_ENABLE:R/W；位位置：[27]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN4_WAKEUP_ENABLE  (BIT(27))
#define RTC_CNTL_GPIO_PIN4_WAKEUP_ENABLE_M  (BIT(27))
#define RTC_CNTL_GPIO_PIN4_WAKEUP_ENABLE_V  0x1
#define RTC_CNTL_GPIO_PIN4_WAKEUP_ENABLE_S  27
/* RTC_CNTL_GPIO_PIN5_WAKEUP_ENABLE:R/W；位位置：[26]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN5_WAKEUP_ENABLE  (BIT(26))
#define RTC_CNTL_GPIO_PIN5_WAKEUP_ENABLE_M  (BIT(26))
#define RTC_CNTL_GPIO_PIN5_WAKEUP_ENABLE_V  0x1
#define RTC_CNTL_GPIO_PIN5_WAKEUP_ENABLE_S  26
/* RTC_CNTL_GPIO_PIN0_INT_TYPE:R/W；位位置：[25:23]；默认值：3'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN0_INT_TYPE  0x00000007
#define RTC_CNTL_GPIO_PIN0_INT_TYPE_M  ((RTC_CNTL_GPIO_PIN0_INT_TYPE_V)<<(RTC_CNTL_GPIO_PIN0_INT_TYPE_S))
#define RTC_CNTL_GPIO_PIN0_INT_TYPE_V  0x7
#define RTC_CNTL_GPIO_PIN0_INT_TYPE_S  23
/* RTC_CNTL_GPIO_pin_INT_TYPE：R/W；比特位置：[22:20]；默认值：3'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN1_INT_TYPE  0x00000007
#define RTC_CNTL_GPIO_PIN1_INT_TYPE_M  ((RTC_CNTL_GPIO_PIN1_INT_TYPE_V)<<(RTC_CNTL_GPIO_PIN1_INT_TYPE_S))
#define RTC_CNTL_GPIO_PIN1_INT_TYPE_V  0x7
#define RTC_CNTL_GPIO_PIN1_INT_TYPE_S  20
/* RTC_CNTL_GPIO_pin_INT_TYPE：R/W；比特位置：[19:17]；默认值：3'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN2_INT_TYPE  0x00000007
#define RTC_CNTL_GPIO_PIN2_INT_TYPE_M  ((RTC_CNTL_GPIO_PIN2_INT_TYPE_V)<<(RTC_CNTL_GPIO_PIN2_INT_TYPE_S))
#define RTC_CNTL_GPIO_PIN2_INT_TYPE_V  0x7
#define RTC_CNTL_GPIO_PIN2_INT_TYPE_S  17
/* RTC_CNTL_GPIO_pin_INT_TYPE：R/W；比特位置：[16:14]；默认值：3'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN3_INT_TYPE  0x00000007
#define RTC_CNTL_GPIO_PIN3_INT_TYPE_M  ((RTC_CNTL_GPIO_PIN3_INT_TYPE_V)<<(RTC_CNTL_GPIO_PIN3_INT_TYPE_S))
#define RTC_CNTL_GPIO_PIN3_INT_TYPE_V  0x7
#define RTC_CNTL_GPIO_PIN3_INT_TYPE_S  14
/* RTC_CNTL_GPIO_PIN4_INT类型：R/W；比特位置：[13:11]；默认值：3'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN4_INT_TYPE  0x00000007
#define RTC_CNTL_GPIO_PIN4_INT_TYPE_M  ((RTC_CNTL_GPIO_PIN4_INT_TYPE_V)<<(RTC_CNTL_GPIO_PIN4_INT_TYPE_S))
#define RTC_CNTL_GPIO_PIN4_INT_TYPE_V  0x7
#define RTC_CNTL_GPIO_PIN4_INT_TYPE_S  11
/* RTC_CNTL_GPIO_PIN5_INT类型：R/W；比特位置：[10:8]；默认值：3'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN5_INT_TYPE  0x00000007
#define RTC_CNTL_GPIO_PIN5_INT_TYPE_M  ((RTC_CNTL_GPIO_PIN5_INT_TYPE_V)<<(RTC_CNTL_GPIO_PIN5_INT_TYPE_S))
#define RTC_CNTL_GPIO_PIN5_INT_TYPE_V  0x7
#define RTC_CNTL_GPIO_PIN5_INT_TYPE_S  8
/* RTC_CNTL_GPIO_PIN_CLK_GATE:R/W；位位置：[7]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN_CLK_GATE  (BIT(7))
#define RTC_CNTL_GPIO_PIN_CLK_GATE_M  (BIT(7))
#define RTC_CNTL_GPIO_PIN_CLK_GATE_V  0x1
#define RTC_CNTL_GPIO_PIN_CLK_GATE_S  7
/* RTC_CNTL_GPIO_WAKEUP_STATUS_CLR:R/W；位位置：[6]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_WAKEUP_STATUS_CLR  (BIT(6))
#define RTC_CNTL_GPIO_WAKEUP_STATUS_CLR_M  (BIT(6))
#define RTC_CNTL_GPIO_WAKEUP_STATUS_CLR_V  0x1
#define RTC_CNTL_GPIO_WAKEUP_STATUS_CLR_S  6
/* RTC_CNTL_GPIO_WAKEUP_STATUS:RO；比特位置：[5:0]；默认值：6'b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_WAKEUP_STATUS  0x0000003F
#define RTC_CNTL_GPIO_WAKEUP_STATUS_M  ((RTC_CNTL_GPIO_WAKEUP_STATUS_V)<<(RTC_CNTL_GPIO_WAKEUP_STATUS_S))
#define RTC_CNTL_GPIO_WAKEUP_STATUS_V  0x3F
#define RTC_CNTL_GPIO_WAKEUP_STATUS_S  0

#define RTC_CNTL_DBG_SEL_REG          (DR_REG_RTCCNTL_BASE + 0x0140)
/* RTC_CNTL-DEBUG_SEL4:R/W；位位置：[31:27]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_DEBUG_SEL4  0x0000001F
#define RTC_CNTL_DEBUG_SEL4_M  ((RTC_CNTL_DEBUG_SEL4_V)<<(RTC_CNTL_DEBUG_SEL4_S))
#define RTC_CNTL_DEBUG_SEL4_V  0x1F
#define RTC_CNTL_DEBUG_SEL4_S  27
/* RTC_CNTL-DEBUG_SEL3:R/W；比特位置：[26:22]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_DEBUG_SEL3  0x0000001F
#define RTC_CNTL_DEBUG_SEL3_M  ((RTC_CNTL_DEBUG_SEL3_V)<<(RTC_CNTL_DEBUG_SEL3_S))
#define RTC_CNTL_DEBUG_SEL3_V  0x1F
#define RTC_CNTL_DEBUG_SEL3_S  22
/* RTC_CNTL-DEBUG_SEL2:R/W；比特位置：[21:17]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_DEBUG_SEL2  0x0000001F
#define RTC_CNTL_DEBUG_SEL2_M  ((RTC_CNTL_DEBUG_SEL2_V)<<(RTC_CNTL_DEBUG_SEL2_S))
#define RTC_CNTL_DEBUG_SEL2_V  0x1F
#define RTC_CNTL_DEBUG_SEL2_S  17
/* RTC_CNTL-DEBUG_SEL1:R/W；比特位置：[16:12]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_DEBUG_SEL1  0x0000001F
#define RTC_CNTL_DEBUG_SEL1_M  ((RTC_CNTL_DEBUG_SEL1_V)<<(RTC_CNTL_DEBUG_SEL1_S))
#define RTC_CNTL_DEBUG_SEL1_V  0x1F
#define RTC_CNTL_DEBUG_SEL1_S  12
/* RTC_CNTL-DEBUG_SEL0：R/W；比特位置：[11:7]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_DEBUG_SEL0  0x0000001F
#define RTC_CNTL_DEBUG_SEL0_M  ((RTC_CNTL_DEBUG_SEL0_V)<<(RTC_CNTL_DEBUG_SEL0_S))
#define RTC_CNTL_DEBUG_SEL0_V  0x1F
#define RTC_CNTL_DEBUG_SEL0_S  7
/* RTC_CNTL-DEBUG_BIT_SEL:R/W；位位置：[6:2]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_DEBUG_BIT_SEL  0x0000001F
#define RTC_CNTL_DEBUG_BIT_SEL_M  ((RTC_CNTL_DEBUG_BIT_SEL_V)<<(RTC_CNTL_DEBUG_BIT_SEL_S))
#define RTC_CNTL_DEBUG_BIT_SEL_V  0x1F
#define RTC_CNTL_DEBUG_BIT_SEL_S  2
/* RTC_CNTL-DEBUG_12M_NO门控：R/W；位位置：[1]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DEBUG_12M_NO_GATING  (BIT(1))
#define RTC_CNTL_DEBUG_12M_NO_GATING_M  (BIT(1))
#define RTC_CNTL_DEBUG_12M_NO_GATING_V  0x1
#define RTC_CNTL_DEBUG_12M_NO_GATING_S  1
/* RTC_CNTL_MTDI_ENAMUX:R/W；位位置：[0]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_MTDI_ENAMUX  (BIT(0))
#define RTC_CNTL_MTDI_ENAMUX_M  (BIT(0))
#define RTC_CNTL_MTDI_ENAMUX_V  0x1
#define RTC_CNTL_MTDI_ENAMUX_S  0

#define RTC_CNTL_DBG_MAP_REG          (DR_REG_RTCCNTL_BASE + 0x0144)
/* RTC_CNTL_GPIO_PIN0_FUN_SEL:R/W；位位置：[31:28]；默认值：4'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN0_FUN_SEL  0x0000000F
#define RTC_CNTL_GPIO_PIN0_FUN_SEL_M  ((RTC_CNTL_GPIO_PIN0_FUN_SEL_V)<<(RTC_CNTL_GPIO_PIN0_FUN_SEL_S))
#define RTC_CNTL_GPIO_PIN0_FUN_SEL_V  0xF
#define RTC_CNTL_GPIO_PIN0_FUN_SEL_S  28
/* RTC_CNTL_GPIO_PIN1_FUN_SEL:R/W；位位置：[27:24]；默认值：4'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN1_FUN_SEL  0x0000000F
#define RTC_CNTL_GPIO_PIN1_FUN_SEL_M  ((RTC_CNTL_GPIO_PIN1_FUN_SEL_V)<<(RTC_CNTL_GPIO_PIN1_FUN_SEL_S))
#define RTC_CNTL_GPIO_PIN1_FUN_SEL_V  0xF
#define RTC_CNTL_GPIO_PIN1_FUN_SEL_S  24
/* RTC_CNTL_GPIO_PIN2_FUN_SEL:R/W；比特位置：[23:20]；默认值：4'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN2_FUN_SEL  0x0000000F
#define RTC_CNTL_GPIO_PIN2_FUN_SEL_M  ((RTC_CNTL_GPIO_PIN2_FUN_SEL_V)<<(RTC_CNTL_GPIO_PIN2_FUN_SEL_S))
#define RTC_CNTL_GPIO_PIN2_FUN_SEL_V  0xF
#define RTC_CNTL_GPIO_PIN2_FUN_SEL_S  20
/* RTC_CNTL_GPIO_pind_FUN_SEL:R/W；比特位置：[19:16]；默认值：4'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN3_FUN_SEL  0x0000000F
#define RTC_CNTL_GPIO_PIN3_FUN_SEL_M  ((RTC_CNTL_GPIO_PIN3_FUN_SEL_V)<<(RTC_CNTL_GPIO_PIN3_FUN_SEL_S))
#define RTC_CNTL_GPIO_PIN3_FUN_SEL_V  0xF
#define RTC_CNTL_GPIO_PIN3_FUN_SEL_S  16
/* RTC_CNTL_GPIO_PIN4_FUN_SEL:R/W；比特位置：[15:12]；默认值：4'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN4_FUN_SEL  0x0000000F
#define RTC_CNTL_GPIO_PIN4_FUN_SEL_M  ((RTC_CNTL_GPIO_PIN4_FUN_SEL_V)<<(RTC_CNTL_GPIO_PIN4_FUN_SEL_S))
#define RTC_CNTL_GPIO_PIN4_FUN_SEL_V  0xF
#define RTC_CNTL_GPIO_PIN4_FUN_SEL_S  12
/* RTC_CNTL_GPIO_PIN5_FUN_SEL:R/W；位位置：[11:8]；默认值：4'd0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN5_FUN_SEL  0x0000000F
#define RTC_CNTL_GPIO_PIN5_FUN_SEL_M  ((RTC_CNTL_GPIO_PIN5_FUN_SEL_V)<<(RTC_CNTL_GPIO_PIN5_FUN_SEL_S))
#define RTC_CNTL_GPIO_PIN5_FUN_SEL_V  0xF
#define RTC_CNTL_GPIO_PIN5_FUN_SEL_S  8
/* RTC_CNTL_GPIO_PIN0_MUX_SEL：R/W；位位置：[7]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN0_MUX_SEL  (BIT(7))
#define RTC_CNTL_GPIO_PIN0_MUX_SEL_M  (BIT(7))
#define RTC_CNTL_GPIO_PIN0_MUX_SEL_V  0x1
#define RTC_CNTL_GPIO_PIN0_MUX_SEL_S  7
/* RTC_CNTL_GPIO_PIN1_max_SEL:R/W；位位置：[6]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN1_MUX_SEL  (BIT(6))
#define RTC_CNTL_GPIO_PIN1_MUX_SEL_M  (BIT(6))
#define RTC_CNTL_GPIO_PIN1_MUX_SEL_V  0x1
#define RTC_CNTL_GPIO_PIN1_MUX_SEL_S  6
/* RTC_CNTL_GPIO_PIN2_max_SEL:R/W；位位置：[5]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN2_MUX_SEL  (BIT(5))
#define RTC_CNTL_GPIO_PIN2_MUX_SEL_M  (BIT(5))
#define RTC_CNTL_GPIO_PIN2_MUX_SEL_V  0x1
#define RTC_CNTL_GPIO_PIN2_MUX_SEL_S  5
/* RTC_CNTL_GPIO_PIN3_max_SEL:R/W；位位置：[4]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN3_MUX_SEL  (BIT(4))
#define RTC_CNTL_GPIO_PIN3_MUX_SEL_M  (BIT(4))
#define RTC_CNTL_GPIO_PIN3_MUX_SEL_V  0x1
#define RTC_CNTL_GPIO_PIN3_MUX_SEL_S  4
/* RTC_CNTL_GPIO_PIN4_MUX_SEL：R/W；位位置：[3]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN4_MUX_SEL  (BIT(3))
#define RTC_CNTL_GPIO_PIN4_MUX_SEL_M  (BIT(3))
#define RTC_CNTL_GPIO_PIN4_MUX_SEL_V  0x1
#define RTC_CNTL_GPIO_PIN4_MUX_SEL_S  3
/* RTC_CNTL_GPIO_PIN5_MUX_SEL：R/W；位位置：[2]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_GPIO_PIN5_MUX_SEL  (BIT(2))
#define RTC_CNTL_GPIO_PIN5_MUX_SEL_M  (BIT(2))
#define RTC_CNTL_GPIO_PIN5_MUX_SEL_V  0x1
#define RTC_CNTL_GPIO_PIN5_MUX_SEL_S  2
/* RTC_CNTL_VDD_DIG_TEST:R/W；位位置：[1:0]；默认值：2’b0；*/
/*说明：*/
#define RTC_CNTL_VDD_DIG_TEST  0x00000003
#define RTC_CNTL_VDD_DIG_TEST_M  ((RTC_CNTL_VDD_DIG_TEST_V)<<(RTC_CNTL_VDD_DIG_TEST_S))
#define RTC_CNTL_VDD_DIG_TEST_V  0x3
#define RTC_CNTL_VDD_DIG_TEST_S  0

#define RTC_CNTL_DBG_SAR_SEL_REG          (DR_REG_RTCCNTL_BASE + 0x0148)
/* RTC_CNTL_SAR_DEBUG_SEL:R/W；位位置：[31:27]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_SAR_DEBUG_SEL  0x0000001F
#define RTC_CNTL_SAR_DEBUG_SEL_M  ((RTC_CNTL_SAR_DEBUG_SEL_V)<<(RTC_CNTL_SAR_DEBUG_SEL_S))
#define RTC_CNTL_SAR_DEBUG_SEL_V  0x1F
#define RTC_CNTL_SAR_DEBUG_SEL_S  27

#define RTC_CNTL_PG_CTRL_REG          (DR_REG_RTCCNTL_BASE + 0x014C)
/* RTC_CNTL-POWER_GLITCH_EN:R/W；位位置：[31]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_POWER_GLITCH_EN  (BIT(31))
#define RTC_CNTL_POWER_GLITCH_EN_M  (BIT(31))
#define RTC_CNTL_POWER_GLITCH_EN_V  0x1
#define RTC_CNTL_POWER_GLITCH_EN_S  31
/* RTC_CNTL-POWER_GLITCH_EFUSE_SEL：R/W；位位置：[30]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_POWER_GLITCH_EFUSE_SEL  (BIT(30))
#define RTC_CNTL_POWER_GLITCH_EFUSE_SEL_M  (BIT(30))
#define RTC_CNTL_POWER_GLITCH_EFUSE_SEL_V  0x1
#define RTC_CNTL_POWER_GLITCH_EFUSE_SEL_S  30
/* RTC_CNTL-POWER_GLITCH_FORCE_PU:R/W；位位置：[29]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_POWER_GLITCH_FORCE_PU  (BIT(29))
#define RTC_CNTL_POWER_GLITCH_FORCE_PU_M  (BIT(29))
#define RTC_CNTL_POWER_GLITCH_FORCE_PU_V  0x1
#define RTC_CNTL_POWER_GLITCH_FORCE_PU_S  29
/* RTC_CNTL-POWER_GLITCH_FORCE_PD:R/W；位位置：[28]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_POWER_GLITCH_FORCE_PD  (BIT(28))
#define RTC_CNTL_POWER_GLITCH_FORCE_PD_M  (BIT(28))
#define RTC_CNTL_POWER_GLITCH_FORCE_PD_V  0x1
#define RTC_CNTL_POWER_GLITCH_FORCE_PD_S  28
/* RTC_CNTL-POWER_GLITCH_dense:R/W；位位置：[27:26]；默认值：2’b0；*/
/*说明：*/
#define RTC_CNTL_POWER_GLITCH_DSENSE  0x00000003
#define RTC_CNTL_POWER_GLITCH_DSENSE_M  ((RTC_CNTL_POWER_GLITCH_DSENSE_V)<<(RTC_CNTL_POWER_GLITCH_DSENSE_S))
#define RTC_CNTL_POWER_GLITCH_DSENSE_V  0x3
#define RTC_CNTL_POWER_GLITCH_DSENSE_S  26

#define RTC_CNTL_DCDC_CTRL0_REG          (DR_REG_RTCCNTL_BASE + 0x0150)
/* RTC_CNTL_pocenb_DCDC:R/W；位位置：[31]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_POCPENB_DCDC  (BIT(31))
#define RTC_CNTL_POCPENB_DCDC_M  (BIT(31))
#define RTC_CNTL_POCPENB_DCDC_V  0x1
#define RTC_CNTL_POCPENB_DCDC_S  31
/* RTC_CNTL_stime_DCDC:R/W；位位置：[30]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_SSTIME_DCDC  (BIT(30))
#define RTC_CNTL_SSTIME_DCDC_M  (BIT(30))
#define RTC_CNTL_SSTIME_DCDC_V  0x1
#define RTC_CNTL_SSTIME_DCDC_S  30
/* RTC_CNTL_CCM_DCDC:R/W；位位置：[29]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_CCM_DCDC  (BIT(29))
#define RTC_CNTL_CCM_DCDC_M  (BIT(29))
#define RTC_CNTL_CCM_DCDC_V  0x1
#define RTC_CNTL_CCM_DCDC_S  29
/* RTC_CNTL_FSW_DCDC:R/W；位位置：[28:26]；默认值：3'd0；*/
/*说明：*/
#define RTC_CNTL_FSW_DCDC  0x00000007
#define RTC_CNTL_FSW_DCDC_M  ((RTC_CNTL_FSW_DCDC_V)<<(RTC_CNTL_FSW_DCDC_S))
#define RTC_CNTL_FSW_DCDC_V  0x7
#define RTC_CNTL_FSW_DCDC_S  26
/* RTC_CNTL_DCMLEVEL_DCDC:R/W；位位置：[25:24]；默认值：2’b0；*/
/*说明：*/
#define RTC_CNTL_DCMLEVEL_DCDC  0x00000003
#define RTC_CNTL_DCMLEVEL_DCDC_M  ((RTC_CNTL_DCMLEVEL_DCDC_V)<<(RTC_CNTL_DCMLEVEL_DCDC_S))
#define RTC_CNTL_DCMLEVEL_DCDC_V  0x3
#define RTC_CNTL_DCMLEVEL_DCDC_S  24
/* RTC_CNTL_dcm2nb-DCDC:R/W；位位置：[23]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_DCM2ENB_DCDC  (BIT(23))
#define RTC_CNTL_DCM2ENB_DCDC_M  (BIT(23))
#define RTC_CNTL_DCM2ENB_DCDC_V  0x1
#define RTC_CNTL_DCM2ENB_DCDC_S  23
/* RTC_CNTL_rramp_DCDC:R/W；位位置：[22]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_RAMP_DCDC  (BIT(22))
#define RTC_CNTL_RAMP_DCDC_M  (BIT(22))
#define RTC_CNTL_RAMP_DCDC_V  0x1
#define RTC_CNTL_RAMP_DCDC_S  22
/* RTC_CNTL_RAMPLEVEL_DCDC:R/W；位位置：[21]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_RAMPLEVEL_DCDC  (BIT(21))
#define RTC_CNTL_RAMPLEVEL_DCDC_M  (BIT(21))
#define RTC_CNTL_RAMPLEVEL_DCDC_V  0x1
#define RTC_CNTL_RAMPLEVEL_DCDC_S  21
/* RTC_CNTL_POWER_GOOD_DCDC:RO；位位置：[5]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_POWER_GOOD_DCDC  (BIT(5))
#define RTC_CNTL_POWER_GOOD_DCDC_M  (BIT(5))
#define RTC_CNTL_POWER_GOOD_DCDC_V  0x1
#define RTC_CNTL_POWER_GOOD_DCDC_S  5
/* RTC_CNTL-VSET_DCDC值：RO；位位置：[4:0]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_VALUE  0x0000001F
#define RTC_CNTL_VSET_DCDC_VALUE_M  ((RTC_CNTL_VSET_DCDC_VALUE_V)<<(RTC_CNTL_VSET_DCDC_VALUE_S))
#define RTC_CNTL_VSET_DCDC_VALUE_V  0x1F
#define RTC_CNTL_VSET_DCDC_VALUE_S  0

#define RTC_CNTL_DCDC_CTRL1_REG          (DR_REG_RTCCNTL_BASE + 0x0154)
/* RTC_CNTL_DCDC_MODE_IDLE:R/W；位位置：[31:29]；默认值：3'b100；*/
/*说明：*/
#define RTC_CNTL_DCDC_MODE_IDLE  0x00000007
#define RTC_CNTL_DCDC_MODE_IDLE_M  ((RTC_CNTL_DCDC_MODE_IDLE_V)<<(RTC_CNTL_DCDC_MODE_IDLE_S))
#define RTC_CNTL_DCDC_MODE_IDLE_V  0x7
#define RTC_CNTL_DCDC_MODE_IDLE_S  29
/* RTC_CNTL_DCDC_MODE_MONITOR:R/W；位位置：[28:26]；默认值：3'b100；*/
/*说明：*/
#define RTC_CNTL_DCDC_MODE_MONITOR  0x00000007
#define RTC_CNTL_DCDC_MODE_MONITOR_M  ((RTC_CNTL_DCDC_MODE_MONITOR_V)<<(RTC_CNTL_DCDC_MODE_MONITOR_S))
#define RTC_CNTL_DCDC_MODE_MONITOR_V  0x7
#define RTC_CNTL_DCDC_MODE_MONITOR_S  26
/* RTC_CNTL_DCDC_MODE_SLP:R/W；位位置：[25:23]；默认值：3'b100；*/
/*说明：*/
#define RTC_CNTL_DCDC_MODE_SLP  0x00000007
#define RTC_CNTL_DCDC_MODE_SLP_M  ((RTC_CNTL_DCDC_MODE_SLP_V)<<(RTC_CNTL_DCDC_MODE_SLP_S))
#define RTC_CNTL_DCDC_MODE_SLP_V  0x7
#define RTC_CNTL_DCDC_MODE_SLP_S  23

#define RTC_CNTL_DCDC_CTRL2_REG          (DR_REG_RTCCNTL_BASE + 0x0158)
/* RTC_CNTL-VSET_DCDC_SW_SEL:R/W；位位置：[28]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_SW_SEL  (BIT(28))
#define RTC_CNTL_VSET_DCDC_SW_SEL_M  (BIT(28))
#define RTC_CNTL_VSET_DCDC_SW_SEL_V  0x1
#define RTC_CNTL_VSET_DCDC_SW_SEL_S  28
/* RTC_CNTL-VSET_DCDC_SEL_HW_SW:R/W；位位置：[27]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_SEL_HW_SW  (BIT(27))
#define RTC_CNTL_VSET_DCDC_SEL_HW_SW_M  (BIT(27))
#define RTC_CNTL_VSET_DCDC_SEL_HW_SW_V  0x1
#define RTC_CNTL_VSET_DCDC_SEL_HW_SW_S  27
/* RTC_CNTL_VSET_DCDC_GAP:R/W；比特位置：[26:22]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_GAP  0x0000001F
#define RTC_CNTL_VSET_DCDC_GAP_M  ((RTC_CNTL_VSET_DCDC_GAP_V)<<(RTC_CNTL_VSET_DCDC_GAP_S))
#define RTC_CNTL_VSET_DCDC_GAP_V  0x1F
#define RTC_CNTL_VSET_DCDC_GAP_S  22
/* RTC_CNTL_VSET_DCDC步骤：R/W；比特位置：[21:17]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_STEP  0x0000001F
#define RTC_CNTL_VSET_DCDC_STEP_M  ((RTC_CNTL_VSET_DCDC_STEP_V)<<(RTC_CNTL_VSET_DCDC_STEP_S))
#define RTC_CNTL_VSET_DCDC_STEP_V  0x1F
#define RTC_CNTL_VSET_DCDC_STEP_S  17
/* RTC_CNTL_VSET_DCDC_FIX:R/W；位位置：[16]；默认值：1’b1；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_FIX  (BIT(16))
#define RTC_CNTL_VSET_DCDC_FIX_M  (BIT(16))
#define RTC_CNTL_VSET_DCDC_FIX_V  0x1
#define RTC_CNTL_VSET_DCDC_FIX_S  16
/* RTC_CNTL_VSET_DCDC_INIT:WO；位位置：[15]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_INIT  (BIT(15))
#define RTC_CNTL_VSET_DCDC_INIT_M  (BIT(15))
#define RTC_CNTL_VSET_DCDC_INIT_V  0x1
#define RTC_CNTL_VSET_DCDC_INIT_S  15
/* RTC_CNTL_VSET_DCDC_INIT_VALUE:R/W；比特位置：[14:10]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_INIT_VALUE  0x0000001F
#define RTC_CNTL_VSET_DCDC_INIT_VALUE_M  ((RTC_CNTL_VSET_DCDC_INIT_VALUE_V)<<(RTC_CNTL_VSET_DCDC_INIT_VALUE_S))
#define RTC_CNTL_VSET_DCDC_INIT_VALUE_V  0x1F
#define RTC_CNTL_VSET_DCDC_INIT_VALUE_S  10
/* RTC_CNTL_VSET_DCDC_TARGET_VALUE0:R/W；比特位置：[9:5]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_TARGET_VALUE0  0x0000001F
#define RTC_CNTL_VSET_DCDC_TARGET_VALUE0_M  ((RTC_CNTL_VSET_DCDC_TARGET_VALUE0_V)<<(RTC_CNTL_VSET_DCDC_TARGET_VALUE0_S))
#define RTC_CNTL_VSET_DCDC_TARGET_VALUE0_V  0x1F
#define RTC_CNTL_VSET_DCDC_TARGET_VALUE0_S  5
/* RTC_CNTL_VSET_DCDC_TARGET_VALUE1:R/W；位位置：[4:0]；默认值：5'd0；*/
/*说明：*/
#define RTC_CNTL_VSET_DCDC_TARGET_VALUE1  0x0000001F
#define RTC_CNTL_VSET_DCDC_TARGET_VALUE1_M  ((RTC_CNTL_VSET_DCDC_TARGET_VALUE1_V)<<(RTC_CNTL_VSET_DCDC_TARGET_VALUE1_S))
#define RTC_CNTL_VSET_DCDC_TARGET_VALUE1_V  0x1F
#define RTC_CNTL_VSET_DCDC_TARGET_VALUE1_S  0

#define RTC_CNTL_RC32K_CTRL_REG          (DR_REG_RTCCNTL_BASE + 0x015C)
/* RTC_CNTL_RC32K_XPD：R/W；位位置：[31]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_RC32K_XPD  (BIT(31))
#define RTC_CNTL_RC32K_XPD_M  (BIT(31))
#define RTC_CNTL_RC32K_XPD_V  0x1
#define RTC_CNTL_RC32K_XPD_S  31
/* RTC_CNTL_RC32K_DFREQ：R/W；位位置：[30:21]；默认值：10'h1ff；*/
/*说明：*/
#define RTC_CNTL_RC32K_DFREQ  0x000003FF
#define RTC_CNTL_RC32K_DFREQ_M  ((RTC_CNTL_RC32K_DFREQ_V)<<(RTC_CNTL_RC32K_DFREQ_S))
#define RTC_CNTL_RC32K_DFREQ_V  0x3FF
#define RTC_CNTL_RC32K_DFREQ_S  21

#define RTC_CNTL_PLL8M_REG          (DR_REG_RTCCNTL_BASE + 0x0160)
/* RTC_CNTL-XPD_PLL8M:R/W；位位置：[31]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_XPD_PLL8M  (BIT(31))
#define RTC_CNTL_XPD_PLL8M_M  (BIT(31))
#define RTC_CNTL_XPD_PLL8M_V  0x1
#define RTC_CNTL_XPD_PLL8M_S  31
/* RTC_CNTL_CKREF_PLL8M_SEL:R/W；位位置：[30]；默认值：1’b0；*/
/*说明：*/
#define RTC_CNTL_CKREF_PLL8M_SEL  (BIT(30))
#define RTC_CNTL_CKREF_PLL8M_SEL_M  (BIT(30))
#define RTC_CNTL_CKREF_PLL8M_SEL_V  0x1
#define RTC_CNTL_CKREF_PLL8M_SEL_S  30

#define RTC_CNTL_DATE_REG          (DR_REG_RTCCNTL_BASE + 0x01fc)
/* RTC_CNTL_CNTL_DATE:R/W；位位置：[27:0]；默认值：28'h2103250；*/
/*说明：*/
#define RTC_CNTL_CNTL_DATE  0x0FFFFFFF
#define RTC_CNTL_CNTL_DATE_M  ((RTC_CNTL_CNTL_DATE_V)<<(RTC_CNTL_CNTL_DATE_S))
#define RTC_CNTL_CNTL_DATE_V  0xFFFFFFF
#define RTC_CNTL_CNTL_DATE_S  0

#ifdef __cplusplus
}
#endif

#endif /*_SOC_RTC_CNTL_REG_H_ */

