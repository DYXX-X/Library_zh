/** 版权所有2021 Espressif Systems（Shanghai）PTE LTD
 *
 *  根据Apache许可证2.0版（“许可证”）获得许可；除非符合许可证，否则不得使用此文件。您可以在以下地址获取许可证副本：
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  除非适用法律要求或书面同意，否则根据许可证分发的软件是按“原样”分发的，无任何明示或暗示的担保或条件。有关许可证下权限和限制的具体语言，请参阅许可证。
 */
#pragma once

#include <stdint.h>
#include "soc/soc.h"
#ifdef __cplusplus
extern "C" {
#endif

/** RTC_I2C_SCL_LOW_REG寄存器配置低SCL周期
 */
#define RTC_I2C_SCL_LOW_REG (DR_REG_RTC_BASE + 0x0)
/** RTC_I2C_SCL_LOW_PERIOD_REG:R/W；比特位置：[19:0]；默认值：256；scl=0的时间段
 */
#define RTC_I2C_SCL_LOW_PERIOD_REG    0x000FFFFFU
#define RTC_I2C_SCL_LOW_PERIOD_REG_M  (RTC_I2C_SCL_LOW_PERIOD_REG_V << RTC_I2C_SCL_LOW_PERIOD_REG_S)
#define RTC_I2C_SCL_LOW_PERIOD_REG_V  0x000FFFFFU
#define RTC_I2C_SCL_LOW_PERIOD_REG_S  0

/** RTC_I2C_CTRL_REG寄存器配置I2C CTRL
 */
#define RTC_I2C_CTRL_REG (DR_REG_RTC_BASE + 0x4)
/** RTC_I2C_SDA_frce_OUT:R/W；位位置：[0]；默认值：0；1=推拉式，0=开放式排水
 */
#define RTC_I2C_SDA_FORCE_OUT    (BIT(0))
#define RTC_I2C_SDA_FORCE_OUT_M  (RTC_I2C_SDA_FORCE_OUT_V << RTC_I2C_SDA_FORCE_OUT_S)
#define RTC_I2C_SDA_FORCE_OUT_V  0x00000001U
#define RTC_I2C_SDA_FORCE_OUT_S  0
/** RTC_I2C_SCL_FORCE_OUT:R/W；位位置：[1]；默认值：0；1=推拉式，0=开放式排水
 */
#define RTC_I2C_SCL_FORCE_OUT    (BIT(1))
#define RTC_I2C_SCL_FORCE_OUT_M  (RTC_I2C_SCL_FORCE_OUT_V << RTC_I2C_SCL_FORCE_OUT_S)
#define RTC_I2C_SCL_FORCE_OUT_V  0x00000001U
#define RTC_I2C_SCL_FORCE_OUT_S  1
/** RTC_I2C_MS_MODE：R/W；位位置：[2]；默认值：0；1=主，0=从
 */
#define RTC_I2C_MS_MODE    (BIT(2))
#define RTC_I2C_MS_MODE_M  (RTC_I2C_MS_MODE_V << RTC_I2C_MS_MODE_S)
#define RTC_I2C_MS_MODE_V  0x00000001U
#define RTC_I2C_MS_MODE_S  2
/** RTC_I2C_TRANS_START:R/W；位位置：[3]；默认值：0；强制启动
 */
#define RTC_I2C_TRANS_START    (BIT(3))
#define RTC_I2C_TRANS_START_M  (RTC_I2C_TRANS_START_V << RTC_I2C_TRANS_START_S)
#define RTC_I2C_TRANS_START_V  0x00000001U
#define RTC_I2C_TRANS_START_S  3
/** RTC_I2C_TX_LSB_FIRST:R/W；位位置：[4]；默认值：0；先通过lsb
 */
#define RTC_I2C_TX_LSB_FIRST    (BIT(4))
#define RTC_I2C_TX_LSB_FIRST_M  (RTC_I2C_TX_LSB_FIRST_V << RTC_I2C_TX_LSB_FIRST_S)
#define RTC_I2C_TX_LSB_FIRST_V  0x00000001U
#define RTC_I2C_TX_LSB_FIRST_S  4
/** RTC_I2C_RX_LSB_FIRST:R/W；位位置：[5]；默认值：0；首先接收lsb
 */
#define RTC_I2C_RX_LSB_FIRST    (BIT(5))
#define RTC_I2C_RX_LSB_FIRST_M  (RTC_I2C_RX_LSB_FIRST_V << RTC_I2C_RX_LSB_FIRST_S)
#define RTC_I2C_RX_LSB_FIRST_V  0x00000001U
#define RTC_I2C_RX_LSB_FIRST_S  5
/** RTC_I2C_I2C_CTRL_CLK_GATE_EN:R/W；位位置：[29]；默认值：0；配置i2c ctrl clk启用
 */
#define RTC_I2C_I2C_CTRL_CLK_GATE_EN    (BIT(29))
#define RTC_I2C_I2C_CTRL_CLK_GATE_EN_M  (RTC_I2C_I2C_CTRL_CLK_GATE_EN_V << RTC_I2C_I2C_CTRL_CLK_GATE_EN_S)
#define RTC_I2C_I2C_CTRL_CLK_GATE_EN_V  0x00000001U
#define RTC_I2C_I2C_CTRL_CLK_GATE_EN_S  29
/** RTC_I2C_I2C_RESET:R/W；位位置：[30]；默认值：0；rtc i2c开关复位
 */
#define RTC_I2C_I2C_RESET    (BIT(30))
#define RTC_I2C_I2C_RESET_M  (RTC_I2C_I2C_RESET_V << RTC_I2C_I2C_RESET_S)
#define RTC_I2C_I2C_RESET_V  0x00000001U
#define RTC_I2C_I2C_RESET_S  30
/** RTC_I2C_I2CCLK_EN:R/W；位位置：[31]；默认值：0；rtc i2c reg clk门控
 */
#define RTC_I2C_I2CCLK_EN    (BIT(31))
#define RTC_I2C_I2CCLK_EN_M  (RTC_I2C_I2CCLK_EN_V << RTC_I2C_I2CCLK_EN_S)
#define RTC_I2C_I2CCLK_EN_V  0x00000001U
#define RTC_I2C_I2CCLK_EN_S  31

/** RTC_I2C_STATUS_REG寄存器获取I2C状态
 */
#define RTC_I2C_STATUS_REG (DR_REG_RTC_BASE + 0x8)
/** RTC_I2C_ACK_REC:RO；位位置：[0]；默认值：0；确认响应
 */
#define RTC_I2C_ACK_REC    (BIT(0))
#define RTC_I2C_ACK_REC_M  (RTC_I2C_ACK_REC_V << RTC_I2C_ACK_REC_S)
#define RTC_I2C_ACK_REC_V  0x00000001U
#define RTC_I2C_ACK_REC_S  0
/** RTC_I2C_SLAVE_RW:RO；位位置：[1]；默认值：0；从读或写
 */
#define RTC_I2C_SLAVE_RW    (BIT(1))
#define RTC_I2C_SLAVE_RW_M  (RTC_I2C_SLAVE_RW_V << RTC_I2C_SLAVE_RW_S)
#define RTC_I2C_SLAVE_RW_V  0x00000001U
#define RTC_I2C_SLAVE_RW_S  1
/** RTC_I2C_ARB_list:RO；位位置：[2]；默认值：0；仲裁失败
 */
#define RTC_I2C_ARB_LOST    (BIT(2))
#define RTC_I2C_ARB_LOST_M  (RTC_I2C_ARB_LOST_V << RTC_I2C_ARB_LOST_S)
#define RTC_I2C_ARB_LOST_V  0x00000001U
#define RTC_I2C_ARB_LOST_S  2
/** RTC_I2C_BUS_BUSY:RO；位位置：[3]；默认值：0；公共汽车很忙
 */
#define RTC_I2C_BUS_BUSY    (BIT(3))
#define RTC_I2C_BUS_BUSY_M  (RTC_I2C_BUS_BUSY_V << RTC_I2C_BUS_BUSY_S)
#define RTC_I2C_BUS_BUSY_V  0x00000001U
#define RTC_I2C_BUS_BUSY_S  3
/** RTC_I2C_SLAVE_address:RO；位位置：[4]；默认值：0；从属寄存器子地址
 */
#define RTC_I2C_SLAVE_ADDRESSED    (BIT(4))
#define RTC_I2C_SLAVE_ADDRESSED_M  (RTC_I2C_SLAVE_ADDRESSED_V << RTC_I2C_SLAVE_ADDRESSED_S)
#define RTC_I2C_SLAVE_ADDRESSED_V  0x00000001U
#define RTC_I2C_SLAVE_ADDRESSED_S  4
/** RTC_I2C_BYTE_TRANS:RO；位位置：[5]；默认值：0；已完成一字节传输
 */
#define RTC_I2C_BYTE_TRANS    (BIT(5))
#define RTC_I2C_BYTE_TRANS_M  (RTC_I2C_BYTE_TRANS_V << RTC_I2C_BYTE_TRANS_S)
#define RTC_I2C_BYTE_TRANS_V  0x00000001U
#define RTC_I2C_BYTE_TRANS_S  5
/** RTC_I2C_OP_CNT:RO；位位置：[7:6]；默认值：0；哪个操作有效
 */
#define RTC_I2C_OP_CNT    0x00000003U
#define RTC_I2C_OP_CNT_M  (RTC_I2C_OP_CNT_V << RTC_I2C_OP_CNT_S)
#define RTC_I2C_OP_CNT_V  0x00000003U
#define RTC_I2C_OP_CNT_S  6
/** RTC_I2C_SHIFT_REG:RO；比特位置：[23:16]；默认值：0；移位器内容
 */
#define RTC_I2C_SHIFT_REG    0x000000FFU
#define RTC_I2C_SHIFT_REG_M  (RTC_I2C_SHIFT_REG_V << RTC_I2C_SHIFT_REG_S)
#define RTC_I2C_SHIFT_REG_V  0x000000FFU
#define RTC_I2C_SHIFT_REG_S  16
/** RTC_I2C_SCL_MAIN_STATE_LAST:RO；比特位置：[26:24]；默认值：0；i2c最后一个主状态
 */
#define RTC_I2C_SCL_MAIN_STATE_LAST    0x00000007U
#define RTC_I2C_SCL_MAIN_STATE_LAST_M  (RTC_I2C_SCL_MAIN_STATE_LAST_V << RTC_I2C_SCL_MAIN_STATE_LAST_S)
#define RTC_I2C_SCL_MAIN_STATE_LAST_V  0x00000007U
#define RTC_I2C_SCL_MAIN_STATE_LAST_S  24
/** RTC_I2C_SCL_STATE_LAST:RO；位位置：[30:28]；默认值：0；scl最后状态
 */
#define RTC_I2C_SCL_STATE_LAST    0x00000007U
#define RTC_I2C_SCL_STATE_LAST_M  (RTC_I2C_SCL_STATE_LAST_V << RTC_I2C_SCL_STATE_LAST_S)
#define RTC_I2C_SCL_STATE_LAST_V  0x00000007U
#define RTC_I2C_SCL_STATE_LAST_S  28

/** RTC_I2C_TO_REG寄存器配置超时
 */
#define RTC_I2C_TO_REG (DR_REG_RTC_BASE + 0xc)
/** RTC_I2C_TIME_OUT_REG:R/W；比特位置：[19:0]；默认值：65536；超时阈值
 */
#define RTC_I2C_TIME_OUT_REG    0x000FFFFFU
#define RTC_I2C_TIME_OUT_REG_M  (RTC_I2C_TIME_OUT_REG_V << RTC_I2C_TIME_OUT_REG_S)
#define RTC_I2C_TIME_OUT_REG_V  0x000FFFFFU
#define RTC_I2C_TIME_OUT_REG_S  0

/** RTC_I2C_SLAVE_ADDR_REG寄存器配置从属id
 */
#define RTC_I2C_SLAVE_ADDR_REG (DR_REG_RTC_BASE + 0x10)
/** RTC_I2C_SLAVE_ADDR:R/W；位位置：[14:0]；默认值：0；从属地址
 */
#define RTC_I2C_SLAVE_ADDR    0x00007FFFU
#define RTC_I2C_SLAVE_ADDR_M  (RTC_I2C_SLAVE_ADDR_V << RTC_I2C_SLAVE_ADDR_S)
#define RTC_I2C_SLAVE_ADDR_V  0x00007FFFU
#define RTC_I2C_SLAVE_ADDR_S  0
/** RTC_I2C_ADDR_10BIT_EN:R/W；位位置：[31]；默认值：0；i2c 10位模式启用
 */
#define RTC_I2C_ADDR_10BIT_EN    (BIT(31))
#define RTC_I2C_ADDR_10BIT_EN_M  (RTC_I2C_ADDR_10BIT_EN_V << RTC_I2C_ADDR_10BIT_EN_S)
#define RTC_I2C_ADDR_10BIT_EN_V  0x00000001U
#define RTC_I2C_ADDR_10BIT_EN_S  31

/** RTC_I2C_SCL_HIGH_REG寄存器配置高SCL周期
 */
#define RTC_I2C_SCL_HIGH_REG (DR_REG_RTC_BASE + 0x14)
/** RTC_I2C_SCL_HIGH_PERIOD_REG:R/W；比特位置：[19:0]；默认值：256；scl=1的时间段
 */
#define RTC_I2C_SCL_HIGH_PERIOD_REG    0x000FFFFFU
#define RTC_I2C_SCL_HIGH_PERIOD_REG_M  (RTC_I2C_SCL_HIGH_PERIOD_REG_V << RTC_I2C_SCL_HIGH_PERIOD_REG_S)
#define RTC_I2C_SCL_HIGH_PERIOD_REG_V  0x000FFFFFU
#define RTC_I2C_SCL_HIGH_PERIOD_REG_S  0

/** RTC_I2C_SDA_DUTY_REG寄存器配置SDA负载
 */
#define RTC_I2C_SDA_DUTY_REG (DR_REG_RTC_BASE + 0x18)
/** RTC_I2C_SDA_DUTY_NUM:R/W；比特位置：[19:0]；默认值：16；SCL变低后SDA切换的时间段
 */
#define RTC_I2C_SDA_DUTY_NUM    0x000FFFFFU
#define RTC_I2C_SDA_DUTY_NUM_M  (RTC_I2C_SDA_DUTY_NUM_V << RTC_I2C_SDA_DUTY_NUM_S)
#define RTC_I2C_SDA_DUTY_NUM_V  0x000FFFFFU
#define RTC_I2C_SDA_DUTY_NUM_S  0

/** RTC_I2C_SCL_START_PERIOD_REG寄存器配置SCL启动周期
 */
#define RTC_I2C_SCL_START_PERIOD_REG (DR_REG_RTC_BASE + 0x1c)
/** RTC_I2C_SCL_START_PERIOD:R/W；比特位置：[19:0]；默认值：8；触发I2C启动后SCL切换的时间段
 */
#define RTC_I2C_SCL_START_PERIOD    0x000FFFFFU
#define RTC_I2C_SCL_START_PERIOD_M  (RTC_I2C_SCL_START_PERIOD_V << RTC_I2C_SCL_START_PERIOD_S)
#define RTC_I2C_SCL_START_PERIOD_V  0x000FFFFFU
#define RTC_I2C_SCL_START_PERIOD_S  0

/** RTC_I2C_SCL_STOP_PERIOD_REG寄存器配置SCL停止周期
 */
#define RTC_I2C_SCL_STOP_PERIOD_REG (DR_REG_RTC_BASE + 0x20)
/** RTC_I2C_SCL_STOP_PERIOD:R/W；比特位置：[19:0]；默认值：8；触发I2C结束后SCL停止的时间段
 */
#define RTC_I2C_SCL_STOP_PERIOD    0x000FFFFFU
#define RTC_I2C_SCL_STOP_PERIOD_M  (RTC_I2C_SCL_STOP_PERIOD_V << RTC_I2C_SCL_STOP_PERIOD_S)
#define RTC_I2C_SCL_STOP_PERIOD_V  0x000FFFFFU
#define RTC_I2C_SCL_STOP_PERIOD_S  0

/** RTC_I2C_INT_CLR_REG寄存器中断清除寄存器
 */
#define RTC_I2C_INT_CLR_REG (DR_REG_RTC_BASE + 0x24)
/** RTC_I2C_SLAVE_trans_COMP_INT_CLR:WO；位位置：[0]；默认值：0；清除从属传输完成中断
 */
#define RTC_I2C_SLAVE_TRAN_COMP_INT_CLR    (BIT(0))
#define RTC_I2C_SLAVE_TRAN_COMP_INT_CLR_M  (RTC_I2C_SLAVE_TRAN_COMP_INT_CLR_V << RTC_I2C_SLAVE_TRAN_COMP_INT_CLR_S)
#define RTC_I2C_SLAVE_TRAN_COMP_INT_CLR_V  0x00000001U
#define RTC_I2C_SLAVE_TRAN_COMP_INT_CLR_S  0
/** RTC_I2C_ARBITRATION_LOST_INT_CLR:WO；位位置：[1]；默认值：0；清除仲裁丢失中断
 */
#define RTC_I2C_ARBITRATION_LOST_INT_CLR    (BIT(1))
#define RTC_I2C_ARBITRATION_LOST_INT_CLR_M  (RTC_I2C_ARBITRATION_LOST_INT_CLR_V << RTC_I2C_ARBITRATION_LOST_INT_CLR_S)
#define RTC_I2C_ARBITRATION_LOST_INT_CLR_V  0x00000001U
#define RTC_I2C_ARBITRATION_LOST_INT_CLR_S  1
/** RTC_I2C_MASTER_TRAN_COMP_INT_CLR:WO；位位置：[2]；默认值：0；清除主传输完成中断
 */
#define RTC_I2C_MASTER_TRAN_COMP_INT_CLR    (BIT(2))
#define RTC_I2C_MASTER_TRAN_COMP_INT_CLR_M  (RTC_I2C_MASTER_TRAN_COMP_INT_CLR_V << RTC_I2C_MASTER_TRAN_COMP_INT_CLR_S)
#define RTC_I2C_MASTER_TRAN_COMP_INT_CLR_V  0x00000001U
#define RTC_I2C_MASTER_TRAN_COMP_INT_CLR_S  2
/** RTC_I2C_TRANS_COMPLETE_INT_CLR:WO；位位置：[3]；默认值：0；清除传输完成中断
 */
#define RTC_I2C_TRANS_COMPLETE_INT_CLR    (BIT(3))
#define RTC_I2C_TRANS_COMPLETE_INT_CLR_M  (RTC_I2C_TRANS_COMPLETE_INT_CLR_V << RTC_I2C_TRANS_COMPLETE_INT_CLR_S)
#define RTC_I2C_TRANS_COMPLETE_INT_CLR_V  0x00000001U
#define RTC_I2C_TRANS_COMPLETE_INT_CLR_S  3
/** RTC_I2C_TIME_OUT_INT_CLR:WO；位位置：[4]；默认值：0；清除超时中断
 */
#define RTC_I2C_TIME_OUT_INT_CLR    (BIT(4))
#define RTC_I2C_TIME_OUT_INT_CLR_M  (RTC_I2C_TIME_OUT_INT_CLR_V << RTC_I2C_TIME_OUT_INT_CLR_S)
#define RTC_I2C_TIME_OUT_INT_CLR_V  0x00000001U
#define RTC_I2C_TIME_OUT_INT_CLR_S  4
/** RTC_I2C_ACK_ERR_INT_CLR:WO；位位置：[5]；默认值：0；清除确认错误中断
 */
#define RTC_I2C_ACK_ERR_INT_CLR    (BIT(5))
#define RTC_I2C_ACK_ERR_INT_CLR_M  (RTC_I2C_ACK_ERR_INT_CLR_V << RTC_I2C_ACK_ERR_INT_CLR_S)
#define RTC_I2C_ACK_ERR_INT_CLR_V  0x00000001U
#define RTC_I2C_ACK_ERR_INT_CLR_S  5
/** RTC_I2C_RX_DATA_INT_CLR:WO；位位置：[6]；默认值：0；清除接收数据中断
 */
#define RTC_I2C_RX_DATA_INT_CLR    (BIT(6))
#define RTC_I2C_RX_DATA_INT_CLR_M  (RTC_I2C_RX_DATA_INT_CLR_V << RTC_I2C_RX_DATA_INT_CLR_S)
#define RTC_I2C_RX_DATA_INT_CLR_V  0x00000001U
#define RTC_I2C_RX_DATA_INT_CLR_S  6
/** RTC_I2C_TX_DATA_INT_CLR:WO；位位置：[7]；默认值：0；清除运输装载数据完成中断
 */
#define RTC_I2C_TX_DATA_INT_CLR    (BIT(7))
#define RTC_I2C_TX_DATA_INT_CLR_M  (RTC_I2C_TX_DATA_INT_CLR_V << RTC_I2C_TX_DATA_INT_CLR_S)
#define RTC_I2C_TX_DATA_INT_CLR_V  0x00000001U
#define RTC_I2C_TX_DATA_INT_CLR_S  7
/** RTC_I2C_DETECT_START_INT_CLR:WO；位位置：[8]；默认值：0；清除检测启动中断
 */
#define RTC_I2C_DETECT_START_INT_CLR    (BIT(8))
#define RTC_I2C_DETECT_START_INT_CLR_M  (RTC_I2C_DETECT_START_INT_CLR_V << RTC_I2C_DETECT_START_INT_CLR_S)
#define RTC_I2C_DETECT_START_INT_CLR_V  0x00000001U
#define RTC_I2C_DETECT_START_INT_CLR_S  8

/** RTC_I2C_INT_RAW_REG寄存器中断原始寄存器
 */
#define RTC_I2C_INT_RAW_REG (DR_REG_RTC_BASE + 0x28)
/** RTC_I2C_SLAVE_trans_COMP_INT_RAW:RO；位位置：[0]；默认值：0；从传输完成中断原始
 */
#define RTC_I2C_SLAVE_TRAN_COMP_INT_RAW    (BIT(0))
#define RTC_I2C_SLAVE_TRAN_COMP_INT_RAW_M  (RTC_I2C_SLAVE_TRAN_COMP_INT_RAW_V << RTC_I2C_SLAVE_TRAN_COMP_INT_RAW_S)
#define RTC_I2C_SLAVE_TRAN_COMP_INT_RAW_V  0x00000001U
#define RTC_I2C_SLAVE_TRAN_COMP_INT_RAW_S  0
/** RTC_I2C_ARBITRATION_LOST_INT_RAW:RO；位位置：[1]；默认值：0；仲裁丢失中断原始
 */
#define RTC_I2C_ARBITRATION_LOST_INT_RAW    (BIT(1))
#define RTC_I2C_ARBITRATION_LOST_INT_RAW_M  (RTC_I2C_ARBITRATION_LOST_INT_RAW_V << RTC_I2C_ARBITRATION_LOST_INT_RAW_S)
#define RTC_I2C_ARBITRATION_LOST_INT_RAW_V  0x00000001U
#define RTC_I2C_ARBITRATION_LOST_INT_RAW_S  1
/** RTC_I2C_MASTER_TRAN_COMP_INT_RAW:RO；位位置：[2]；默认值：0；主传输完成中断原始
 */
#define RTC_I2C_MASTER_TRAN_COMP_INT_RAW    (BIT(2))
#define RTC_I2C_MASTER_TRAN_COMP_INT_RAW_M  (RTC_I2C_MASTER_TRAN_COMP_INT_RAW_V << RTC_I2C_MASTER_TRAN_COMP_INT_RAW_S)
#define RTC_I2C_MASTER_TRAN_COMP_INT_RAW_V  0x00000001U
#define RTC_I2C_MASTER_TRAN_COMP_INT_RAW_S  2
/** RTC_I2C_TRANS_COMPLETE_INT_RAW:RO；位位置：[3]；默认值：0；传输完成中断原始
 */
#define RTC_I2C_TRANS_COMPLETE_INT_RAW    (BIT(3))
#define RTC_I2C_TRANS_COMPLETE_INT_RAW_M  (RTC_I2C_TRANS_COMPLETE_INT_RAW_V << RTC_I2C_TRANS_COMPLETE_INT_RAW_S)
#define RTC_I2C_TRANS_COMPLETE_INT_RAW_V  0x00000001U
#define RTC_I2C_TRANS_COMPLETE_INT_RAW_S  3
/** RTC_I2C_TIME_OUT_INT_RAW:RO；位位置：[4]；默认值：0；原始超时中断
 */
#define RTC_I2C_TIME_OUT_INT_RAW    (BIT(4))
#define RTC_I2C_TIME_OUT_INT_RAW_M  (RTC_I2C_TIME_OUT_INT_RAW_V << RTC_I2C_TIME_OUT_INT_RAW_S)
#define RTC_I2C_TIME_OUT_INT_RAW_V  0x00000001U
#define RTC_I2C_TIME_OUT_INT_RAW_S  4
/** RTC_I2C_ACK_ERR_INT_RAW:RO；位位置：[5]；默认值：0；ack错误中断原始
 */
#define RTC_I2C_ACK_ERR_INT_RAW    (BIT(5))
#define RTC_I2C_ACK_ERR_INT_RAW_M  (RTC_I2C_ACK_ERR_INT_RAW_V << RTC_I2C_ACK_ERR_INT_RAW_S)
#define RTC_I2C_ACK_ERR_INT_RAW_V  0x00000001U
#define RTC_I2C_ACK_ERR_INT_RAW_S  5
/** RTC_I2C_RX_DATA_INT_RAW:RO；位位置：[6]；默认值：0；原始接收数据中断
 */
#define RTC_I2C_RX_DATA_INT_RAW    (BIT(6))
#define RTC_I2C_RX_DATA_INT_RAW_M  (RTC_I2C_RX_DATA_INT_RAW_V << RTC_I2C_RX_DATA_INT_RAW_S)
#define RTC_I2C_RX_DATA_INT_RAW_V  0x00000001U
#define RTC_I2C_RX_DATA_INT_RAW_S  6
/** RTC_I2C_TX_DATA_INT_RAW:RO；位位置：[7]；默认值：0；原始传输数据中断
 */
#define RTC_I2C_TX_DATA_INT_RAW    (BIT(7))
#define RTC_I2C_TX_DATA_INT_RAW_M  (RTC_I2C_TX_DATA_INT_RAW_V << RTC_I2C_TX_DATA_INT_RAW_S)
#define RTC_I2C_TX_DATA_INT_RAW_V  0x00000001U
#define RTC_I2C_TX_DATA_INT_RAW_S  7
/** RTC_I2C_DETECT_START_INT_RAW:RO；位位置：[8]；默认值：0；原始检测启动中断
 */
#define RTC_I2C_DETECT_START_INT_RAW    (BIT(8))
#define RTC_I2C_DETECT_START_INT_RAW_M  (RTC_I2C_DETECT_START_INT_RAW_V << RTC_I2C_DETECT_START_INT_RAW_S)
#define RTC_I2C_DETECT_START_INT_RAW_V  0x00000001U
#define RTC_I2C_DETECT_START_INT_RAW_S  8

/** RTC_I2C_INT_ST_REG寄存器中断状态寄存器
 */
#define RTC_I2C_INT_ST_REG (DR_REG_RTC_BASE + 0x2c)
/** RTC_I2C_SLAVE_trans_COMP_INT_ST:RO；位位置：[0]；默认值：0；从传输完成中断状态
 */
#define RTC_I2C_SLAVE_TRAN_COMP_INT_ST    (BIT(0))
#define RTC_I2C_SLAVE_TRAN_COMP_INT_ST_M  (RTC_I2C_SLAVE_TRAN_COMP_INT_ST_V << RTC_I2C_SLAVE_TRAN_COMP_INT_ST_S)
#define RTC_I2C_SLAVE_TRAN_COMP_INT_ST_V  0x00000001U
#define RTC_I2C_SLAVE_TRAN_COMP_INT_ST_S  0
/** RTC_I2C_ARBITRATION_LOST_INT_ST:RO；位位置：[1]；默认值：0；仲裁丢失中断状态
 */
#define RTC_I2C_ARBITRATION_LOST_INT_ST    (BIT(1))
#define RTC_I2C_ARBITRATION_LOST_INT_ST_M  (RTC_I2C_ARBITRATION_LOST_INT_ST_V << RTC_I2C_ARBITRATION_LOST_INT_ST_S)
#define RTC_I2C_ARBITRATION_LOST_INT_ST_V  0x00000001U
#define RTC_I2C_ARBITRATION_LOST_INT_ST_S  1
/** RTC_I2C_MASTER_TRAN_COMP_INT_ST:RO；位位置：[2]；默认值：0；主传输完成中断状态
 */
#define RTC_I2C_MASTER_TRAN_COMP_INT_ST    (BIT(2))
#define RTC_I2C_MASTER_TRAN_COMP_INT_ST_M  (RTC_I2C_MASTER_TRAN_COMP_INT_ST_V << RTC_I2C_MASTER_TRAN_COMP_INT_ST_S)
#define RTC_I2C_MASTER_TRAN_COMP_INT_ST_V  0x00000001U
#define RTC_I2C_MASTER_TRAN_COMP_INT_ST_S  2
/** RTC_I2C_TRANS_COMPLETE_INT_ST:RO；位位置：[3]；默认值：0；传输完成中断状态
 */
#define RTC_I2C_TRANS_COMPLETE_INT_ST    (BIT(3))
#define RTC_I2C_TRANS_COMPLETE_INT_ST_M  (RTC_I2C_TRANS_COMPLETE_INT_ST_V << RTC_I2C_TRANS_COMPLETE_INT_ST_S)
#define RTC_I2C_TRANS_COMPLETE_INT_ST_V  0x00000001U
#define RTC_I2C_TRANS_COMPLETE_INT_ST_S  3
/** RTC_I2C_TIME_OUT_INT_ST:RO；位位置：[4]；默认值：0；超时中断状态
 */
#define RTC_I2C_TIME_OUT_INT_ST    (BIT(4))
#define RTC_I2C_TIME_OUT_INT_ST_M  (RTC_I2C_TIME_OUT_INT_ST_V << RTC_I2C_TIME_OUT_INT_ST_S)
#define RTC_I2C_TIME_OUT_INT_ST_V  0x00000001U
#define RTC_I2C_TIME_OUT_INT_ST_S  4
/** RTC_I2C_ACK_ERR_INT_ST:RO；位位置：[5]；默认值：0；ack错误中断状态
 */
#define RTC_I2C_ACK_ERR_INT_ST    (BIT(5))
#define RTC_I2C_ACK_ERR_INT_ST_M  (RTC_I2C_ACK_ERR_INT_ST_V << RTC_I2C_ACK_ERR_INT_ST_S)
#define RTC_I2C_ACK_ERR_INT_ST_V  0x00000001U
#define RTC_I2C_ACK_ERR_INT_ST_S  5
/** RTC_I2C_RX_DATA_INT_ST:RO；位位置：[6]；默认值：0；接收数据中断状态
 */
#define RTC_I2C_RX_DATA_INT_ST    (BIT(6))
#define RTC_I2C_RX_DATA_INT_ST_M  (RTC_I2C_RX_DATA_INT_ST_V << RTC_I2C_RX_DATA_INT_ST_S)
#define RTC_I2C_RX_DATA_INT_ST_V  0x00000001U
#define RTC_I2C_RX_DATA_INT_ST_S  6
/** RTC_I2C_TX_DATA_INT_ST:RO；位位置：[7]；默认值：0；传输数据中断状态
 */
#define RTC_I2C_TX_DATA_INT_ST    (BIT(7))
#define RTC_I2C_TX_DATA_INT_ST_M  (RTC_I2C_TX_DATA_INT_ST_V << RTC_I2C_TX_DATA_INT_ST_S)
#define RTC_I2C_TX_DATA_INT_ST_V  0x00000001U
#define RTC_I2C_TX_DATA_INT_ST_S  7
/** RTC_I2C_DETECT_START_INT_ST:RO；位位置：[8]；默认值：0；检测启动中断状态
 */
#define RTC_I2C_DETECT_START_INT_ST    (BIT(8))
#define RTC_I2C_DETECT_START_INT_ST_M  (RTC_I2C_DETECT_START_INT_ST_V << RTC_I2C_DETECT_START_INT_ST_S)
#define RTC_I2C_DETECT_START_INT_ST_V  0x00000001U
#define RTC_I2C_DETECT_START_INT_ST_S  8

/** RTC_I2C_INT_ENA_REG寄存器中断启用寄存器
 */
#define RTC_I2C_INT_ENA_REG (DR_REG_RTC_BASE + 0x30)
/** RTC_I2C_SLAVE_trans_COMP_INT_ENA:R/W；位位置：[0]；默认值：0；启用从传输完成中断
 */
#define RTC_I2C_SLAVE_TRAN_COMP_INT_ENA    (BIT(0))
#define RTC_I2C_SLAVE_TRAN_COMP_INT_ENA_M  (RTC_I2C_SLAVE_TRAN_COMP_INT_ENA_V << RTC_I2C_SLAVE_TRAN_COMP_INT_ENA_S)
#define RTC_I2C_SLAVE_TRAN_COMP_INT_ENA_V  0x00000001U
#define RTC_I2C_SLAVE_TRAN_COMP_INT_ENA_S  0
/** RTC_I2C_ARBITRATION_LOST_INT_ENA:R/W；位位置：[1]；默认值：0；启用仲裁丢失中断
 */
#define RTC_I2C_ARBITRATION_LOST_INT_ENA    (BIT(1))
#define RTC_I2C_ARBITRATION_LOST_INT_ENA_M  (RTC_I2C_ARBITRATION_LOST_INT_ENA_V << RTC_I2C_ARBITRATION_LOST_INT_ENA_S)
#define RTC_I2C_ARBITRATION_LOST_INT_ENA_V  0x00000001U
#define RTC_I2C_ARBITRATION_LOST_INT_ENA_S  1
/** RTC_I2C_MASTER_TRAN_COMP_INT_ENA:R/W；位位置：[2]；默认值：0；启用主传输完成中断
 */
#define RTC_I2C_MASTER_TRAN_COMP_INT_ENA    (BIT(2))
#define RTC_I2C_MASTER_TRAN_COMP_INT_ENA_M  (RTC_I2C_MASTER_TRAN_COMP_INT_ENA_V << RTC_I2C_MASTER_TRAN_COMP_INT_ENA_S)
#define RTC_I2C_MASTER_TRAN_COMP_INT_ENA_V  0x00000001U
#define RTC_I2C_MASTER_TRAN_COMP_INT_ENA_S  2
/** RTC_I2C_TRANS_COMPLETE_INT_ENA:R/W；位位置：[3]；默认值：0；启用传输完成中断
 */
#define RTC_I2C_TRANS_COMPLETE_INT_ENA    (BIT(3))
#define RTC_I2C_TRANS_COMPLETE_INT_ENA_M  (RTC_I2C_TRANS_COMPLETE_INT_ENA_V << RTC_I2C_TRANS_COMPLETE_INT_ENA_S)
#define RTC_I2C_TRANS_COMPLETE_INT_ENA_V  0x00000001U
#define RTC_I2C_TRANS_COMPLETE_INT_ENA_S  3
/** RTC_I2C_TIME_OUT_INT_ENA:R/W；位位置：[4]；默认值：0；启用超时中断
 */
#define RTC_I2C_TIME_OUT_INT_ENA    (BIT(4))
#define RTC_I2C_TIME_OUT_INT_ENA_M  (RTC_I2C_TIME_OUT_INT_ENA_V << RTC_I2C_TIME_OUT_INT_ENA_S)
#define RTC_I2C_TIME_OUT_INT_ENA_V  0x00000001U
#define RTC_I2C_TIME_OUT_INT_ENA_S  4
/** RTC_I2C_ACK_ERR_INT_ENA:R/W；位位置：[5]；默认值：0；启用eack错误中断
 */
#define RTC_I2C_ACK_ERR_INT_ENA    (BIT(5))
#define RTC_I2C_ACK_ERR_INT_ENA_M  (RTC_I2C_ACK_ERR_INT_ENA_V << RTC_I2C_ACK_ERR_INT_ENA_S)
#define RTC_I2C_ACK_ERR_INT_ENA_V  0x00000001U
#define RTC_I2C_ACK_ERR_INT_ENA_S  5
/** RTC_I2C_RX_DATA_INT_ENA:R/W；位位置：[6]；默认值：0；启用接收数据中断
 */
#define RTC_I2C_RX_DATA_INT_ENA    (BIT(6))
#define RTC_I2C_RX_DATA_INT_ENA_M  (RTC_I2C_RX_DATA_INT_ENA_V << RTC_I2C_RX_DATA_INT_ENA_S)
#define RTC_I2C_RX_DATA_INT_ENA_V  0x00000001U
#define RTC_I2C_RX_DATA_INT_ENA_S  6
/** RTC_I2C_TX_DATA_INT_ENA：R/W；位位置：[7]；默认值：0；启用传输数据中断
 */
#define RTC_I2C_TX_DATA_INT_ENA    (BIT(7))
#define RTC_I2C_TX_DATA_INT_ENA_M  (RTC_I2C_TX_DATA_INT_ENA_V << RTC_I2C_TX_DATA_INT_ENA_S)
#define RTC_I2C_TX_DATA_INT_ENA_V  0x00000001U
#define RTC_I2C_TX_DATA_INT_ENA_S  7
/** RTC_I2C_DETECT_START_INT_ENA:R/W；位位置：[8]；默认值：0；启用检测启动中断
 */
#define RTC_I2C_DETECT_START_INT_ENA    (BIT(8))
#define RTC_I2C_DETECT_START_INT_ENA_M  (RTC_I2C_DETECT_START_INT_ENA_V << RTC_I2C_DETECT_START_INT_ENA_S)
#define RTC_I2C_DETECT_START_INT_ENA_V  0x00000001U
#define RTC_I2C_DETECT_START_INT_ENA_S  8

/** RTC_I2C_DATA_REG寄存器获取I2C数据状态
 */
#define RTC_I2C_DATA_REG (DR_REG_RTC_BASE + 0x34)
/** RTC_I2C_I2C_RDATA:RO；位位置：[7:0]；默认值：0；收到的数据
 */
#define RTC_I2C_I2C_RDATA    0x000000FFU
#define RTC_I2C_I2C_RDATA_M  (RTC_I2C_I2C_RDATA_V << RTC_I2C_I2C_RDATA_S)
#define RTC_I2C_I2C_RDATA_V  0x000000FFU
#define RTC_I2C_I2C_RDATA_S  0
/** RTC_I2C_SLAVE_TX_DATA：R/W；比特位置：[15:8]；默认值：0；从设备发送的数据
 */
#define RTC_I2C_SLAVE_TX_DATA    0x000000FFU
#define RTC_I2C_SLAVE_TX_DATA_M  (RTC_I2C_SLAVE_TX_DATA_V << RTC_I2C_SLAVE_TX_DATA_S)
#define RTC_I2C_SLAVE_TX_DATA_V  0x000000FFU
#define RTC_I2C_SLAVE_TX_DATA_S  8
/** RTC_I2C_I2C_DONE:RO；位位置：[31]；默认值：0；i2c完成
 */
#define RTC_I2C_I2C_DONE    (BIT(31))
#define RTC_I2C_I2C_DONE_M  (RTC_I2C_I2C_DONE_V << RTC_I2C_I2C_DONE_S)
#define RTC_I2C_I2C_DONE_V  0x00000001U
#define RTC_I2C_I2C_DONE_S  31

/** RTC_I2C_CMD0_REG寄存器I2C公共0寄存器
 */
#define RTC_I2C_CMD0_REG (DR_REG_RTC_BASE + 0x38)
/** RTC_I2C_COMMAND0:R/W；比特位置：[13:0]；默认值：2307；命令0
 */
#define RTC_I2C_COMMAND0    0x00003FFFU
#define RTC_I2C_COMMAND0_M  (RTC_I2C_COMMAND0_V << RTC_I2C_COMMAND0_S)
#define RTC_I2C_COMMAND0_V  0x00003FFFU
#define RTC_I2C_COMMAND0_S  0
/** RTC_I2C_COMMAND0_DONE:RO；位位置：[31]；默认值：0；命令_已完成
 */
#define RTC_I2C_COMMAND0_DONE    (BIT(31))
#define RTC_I2C_COMMAND0_DONE_M  (RTC_I2C_COMMAND0_DONE_V << RTC_I2C_COMMAND0_DONE_S)
#define RTC_I2C_COMMAND0_DONE_V  0x00000001U
#define RTC_I2C_COMMAND0_DONE_S  31

/** RTC_I2C_CMD1_REG寄存器I2C公共1寄存器
 */
#define RTC_I2C_CMD1_REG (DR_REG_RTC_BASE + 0x3c)
/** RTC_I2C_COMMAND1:R/W；比特位置：[13:0]；默认值：6401；命令1
 */
#define RTC_I2C_COMMAND1    0x00003FFFU
#define RTC_I2C_COMMAND1_M  (RTC_I2C_COMMAND1_V << RTC_I2C_COMMAND1_S)
#define RTC_I2C_COMMAND1_V  0x00003FFFU
#define RTC_I2C_COMMAND1_S  0
/** RTC_I2C_COMMAND1_DONE:RO；位位置：[31]；默认值：0；命令1_已完成
 */
#define RTC_I2C_COMMAND1_DONE    (BIT(31))
#define RTC_I2C_COMMAND1_DONE_M  (RTC_I2C_COMMAND1_DONE_V << RTC_I2C_COMMAND1_DONE_S)
#define RTC_I2C_COMMAND1_DONE_V  0x00000001U
#define RTC_I2C_COMMAND1_DONE_S  31

/** RTC_I2C_CMD2_REG寄存器I2C公共2寄存器
 */
#define RTC_I2C_CMD2_REG (DR_REG_RTC_BASE + 0x40)
/** RTC_I2C_COMMAND2:R/W；比特位置：[13:0]；默认值：2306；命令2
 */
#define RTC_I2C_COMMAND2    0x00003FFFU
#define RTC_I2C_COMMAND2_M  (RTC_I2C_COMMAND2_V << RTC_I2C_COMMAND2_S)
#define RTC_I2C_COMMAND2_V  0x00003FFFU
#define RTC_I2C_COMMAND2_S  0
/** RTC_I2C_COMMAND2_DONE:RO；位位置：[31]；默认值：0；命令2_done
 */
#define RTC_I2C_COMMAND2_DONE    (BIT(31))
#define RTC_I2C_COMMAND2_DONE_M  (RTC_I2C_COMMAND2_DONE_V << RTC_I2C_COMMAND2_DONE_S)
#define RTC_I2C_COMMAND2_DONE_V  0x00000001U
#define RTC_I2C_COMMAND2_DONE_S  31

/** RTC_I2C_CMD3_REG寄存器I2C公共3寄存器
 */
#define RTC_I2C_CMD3_REG (DR_REG_RTC_BASE + 0x44)
/** RTC_I2C_COMMAND3:R/W；比特位置：[13:0]；默认值：257；命令3
 */
#define RTC_I2C_COMMAND3    0x00003FFFU
#define RTC_I2C_COMMAND3_M  (RTC_I2C_COMMAND3_V << RTC_I2C_COMMAND3_S)
#define RTC_I2C_COMMAND3_V  0x00003FFFU
#define RTC_I2C_COMMAND3_S  0
/** RTC_I2C_COMMAND3_DONE:RO；位位置：[31]；默认值：0；命令3_done
 */
#define RTC_I2C_COMMAND3_DONE    (BIT(31))
#define RTC_I2C_COMMAND3_DONE_M  (RTC_I2C_COMMAND3_DONE_V << RTC_I2C_COMMAND3_DONE_S)
#define RTC_I2C_COMMAND3_DONE_V  0x00000001U
#define RTC_I2C_COMMAND3_DONE_S  31

/** RTC_I2C_CMD4_REG寄存器I2C公共4寄存器
 */
#define RTC_I2C_CMD4_REG (DR_REG_RTC_BASE + 0x48)
/** RTC_I2C_COMMAND4:R/W；比特位置：[13:0]；默认值：2305；命令4
 */
#define RTC_I2C_COMMAND4    0x00003FFFU
#define RTC_I2C_COMMAND4_M  (RTC_I2C_COMMAND4_V << RTC_I2C_COMMAND4_S)
#define RTC_I2C_COMMAND4_V  0x00003FFFU
#define RTC_I2C_COMMAND4_S  0
/** RTC_I2C_COMMAND4_DONE:RO；位位置：[31]；默认值：0；命令4_done
 */
#define RTC_I2C_COMMAND4_DONE    (BIT(31))
#define RTC_I2C_COMMAND4_DONE_M  (RTC_I2C_COMMAND4_DONE_V << RTC_I2C_COMMAND4_DONE_S)
#define RTC_I2C_COMMAND4_DONE_V  0x00000001U
#define RTC_I2C_COMMAND4_DONE_S  31

/** RTC_I2C_CMD5_REG寄存器I2C commond5_register
 */
#define RTC_I2C_CMD5_REG (DR_REG_RTC_BASE + 0x4c)
/** RTC_I2C_COMMAND5:R/W；比特位置：[13:0]；默认值：5889；命令5
 */
#define RTC_I2C_COMMAND5    0x00003FFFU
#define RTC_I2C_COMMAND5_M  (RTC_I2C_COMMAND5_V << RTC_I2C_COMMAND5_S)
#define RTC_I2C_COMMAND5_V  0x00003FFFU
#define RTC_I2C_COMMAND5_S  0
/** RTC_I2C_COMMAND5_DONE:RO；位位置：[31]；默认值：0；命令5_done
 */
#define RTC_I2C_COMMAND5_DONE    (BIT(31))
#define RTC_I2C_COMMAND5_DONE_M  (RTC_I2C_COMMAND5_DONE_V << RTC_I2C_COMMAND5_DONE_S)
#define RTC_I2C_COMMAND5_DONE_V  0x00000001U
#define RTC_I2C_COMMAND5_DONE_S  31

/** RTC_I2C_CMD6_REG寄存器I2C公共6寄存器
 */
#define RTC_I2C_CMD6_REG (DR_REG_RTC_BASE + 0x50)
/** RTC_I2C_COMMAND6:R/W；比特位置：[13:0]；默认值：6401；命令6
 */
#define RTC_I2C_COMMAND6    0x00003FFFU
#define RTC_I2C_COMMAND6_M  (RTC_I2C_COMMAND6_V << RTC_I2C_COMMAND6_S)
#define RTC_I2C_COMMAND6_V  0x00003FFFU
#define RTC_I2C_COMMAND6_S  0
/** RTC_I2C_COMMAND6_DONE:RO；位位置：[31]；默认值：0；命令6_done
 */
#define RTC_I2C_COMMAND6_DONE    (BIT(31))
#define RTC_I2C_COMMAND6_DONE_M  (RTC_I2C_COMMAND6_DONE_V << RTC_I2C_COMMAND6_DONE_S)
#define RTC_I2C_COMMAND6_DONE_V  0x00000001U
#define RTC_I2C_COMMAND6_DONE_S  31

/** RTC_I2C_CMD7_REG寄存器I2C公共7寄存器
 */
#define RTC_I2C_CMD7_REG (DR_REG_RTC_BASE + 0x54)
/** RTC_I2C_COMMAND7:R/W；比特位置：[13:0]；默认值：2308；命令7
 */
#define RTC_I2C_COMMAND7    0x00003FFFU
#define RTC_I2C_COMMAND7_M  (RTC_I2C_COMMAND7_V << RTC_I2C_COMMAND7_S)
#define RTC_I2C_COMMAND7_V  0x00003FFFU
#define RTC_I2C_COMMAND7_S  0
/** RTC_I2C_COMMAND7_DONE:RO；位位置：[31]；默认值：0；命令7_done
 */
#define RTC_I2C_COMMAND7_DONE    (BIT(31))
#define RTC_I2C_COMMAND7_DONE_M  (RTC_I2C_COMMAND7_DONE_V << RTC_I2C_COMMAND7_DONE_S)
#define RTC_I2C_COMMAND7_DONE_V  0x00000001U
#define RTC_I2C_COMMAND7_DONE_S  31

/** RTC_I2C_CMD8_REG寄存器I2C公共8寄存器
 */
#define RTC_I2C_CMD8_REG (DR_REG_RTC_BASE + 0x58)
/** RTC_I2C_COMMAND8:R/W；比特位置：[13:0]；默认值：6401；命令8
 */
#define RTC_I2C_COMMAND8    0x00003FFFU
#define RTC_I2C_COMMAND8_M  (RTC_I2C_COMMAND8_V << RTC_I2C_COMMAND8_S)
#define RTC_I2C_COMMAND8_V  0x00003FFFU
#define RTC_I2C_COMMAND8_S  0
/** RTC_I2C_COMMAND8_DONE:RO；位位置：[31]；默认值：0；命令8_done
 */
#define RTC_I2C_COMMAND8_DONE    (BIT(31))
#define RTC_I2C_COMMAND8_DONE_M  (RTC_I2C_COMMAND8_DONE_V << RTC_I2C_COMMAND8_DONE_S)
#define RTC_I2C_COMMAND8_DONE_V  0x00000001U
#define RTC_I2C_COMMAND8_DONE_S  31

/** RTC_I2C_CMD9_REG寄存器I2C公共9寄存器
 */
#define RTC_I2C_CMD9_REG (DR_REG_RTC_BASE + 0x5c)
/** RTC_I2C_COMMAND9:R/W；比特位置：[13:0]；默认值：2307；命令9
 */
#define RTC_I2C_COMMAND9    0x00003FFFU
#define RTC_I2C_COMMAND9_M  (RTC_I2C_COMMAND9_V << RTC_I2C_COMMAND9_S)
#define RTC_I2C_COMMAND9_V  0x00003FFFU
#define RTC_I2C_COMMAND9_S  0
/** RTC_I2C_COMMAND9_DONE:RO；位位置：[31]；默认值：0；命令9_done
 */
#define RTC_I2C_COMMAND9_DONE    (BIT(31))
#define RTC_I2C_COMMAND9_DONE_M  (RTC_I2C_COMMAND9_DONE_V << RTC_I2C_COMMAND9_DONE_S)
#define RTC_I2C_COMMAND9_DONE_V  0x00000001U
#define RTC_I2C_COMMAND9_DONE_S  31

/** RTC_I2C_CMD10_REG寄存器I2C公共10寄存器
 */
#define RTC_I2C_CMD10_REG (DR_REG_RTC_BASE + 0x60)
/** RTC_I2C_COMMAND10:R/W；比特位置：[13:0]；默认值：257；命令10
 */
#define RTC_I2C_COMMAND10    0x00003FFFU
#define RTC_I2C_COMMAND10_M  (RTC_I2C_COMMAND10_V << RTC_I2C_COMMAND10_S)
#define RTC_I2C_COMMAND10_V  0x00003FFFU
#define RTC_I2C_COMMAND10_S  0
/** RTC_I2C_COMMAND10_DONE:RO；位位置：[31]；默认值：0；命令10_done
 */
#define RTC_I2C_COMMAND10_DONE    (BIT(31))
#define RTC_I2C_COMMAND10_DONE_M  (RTC_I2C_COMMAND10_DONE_V << RTC_I2C_COMMAND10_DONE_S)
#define RTC_I2C_COMMAND10_DONE_V  0x00000001U
#define RTC_I2C_COMMAND10_DONE_S  31

/** RTC_I2C_CMD11_REG寄存器I2C公共11寄存器
 */
#define RTC_I2C_CMD11_REG (DR_REG_RTC_BASE + 0x64)
/** RTC_I2C_COMMAND11:R/W；比特位置：[13:0]；默认值：2305；命令11
 */
#define RTC_I2C_COMMAND11    0x00003FFFU
#define RTC_I2C_COMMAND11_M  (RTC_I2C_COMMAND11_V << RTC_I2C_COMMAND11_S)
#define RTC_I2C_COMMAND11_V  0x00003FFFU
#define RTC_I2C_COMMAND11_S  0
/** RTC_I2C_COMMAND11_DONE:RO；位位置：[31]；默认值：0；命令11_done
 */
#define RTC_I2C_COMMAND11_DONE    (BIT(31))
#define RTC_I2C_COMMAND11_DONE_M  (RTC_I2C_COMMAND11_DONE_V << RTC_I2C_COMMAND11_DONE_S)
#define RTC_I2C_COMMAND11_DONE_V  0x00000001U
#define RTC_I2C_COMMAND11_DONE_S  31

/** RTC_I2C_CMD12_REG寄存器I2C公共12寄存器
 */
#define RTC_I2C_CMD12_REG (DR_REG_RTC_BASE + 0x68)
/** RTC_I2C_COMMAND12:R/W；比特位置：[13:0]；默认值：5889；命令12
 */
#define RTC_I2C_COMMAND12    0x00003FFFU
#define RTC_I2C_COMMAND12_M  (RTC_I2C_COMMAND12_V << RTC_I2C_COMMAND12_S)
#define RTC_I2C_COMMAND12_V  0x00003FFFU
#define RTC_I2C_COMMAND12_S  0
/** RTC_I2C_COMMAND12_DONE:RO；位位置：[31]；默认值：0；命令12_done
 */
#define RTC_I2C_COMMAND12_DONE    (BIT(31))
#define RTC_I2C_COMMAND12_DONE_M  (RTC_I2C_COMMAND12_DONE_V << RTC_I2C_COMMAND12_DONE_S)
#define RTC_I2C_COMMAND12_DONE_V  0x00000001U
#define RTC_I2C_COMMAND12_DONE_S  31

/** RTC_I2C_CMD13_REG寄存器I2C公共13寄存器
 */
#define RTC_I2C_CMD13_REG (DR_REG_RTC_BASE + 0x6c)
/** RTC_I2C_COMMAND13:R/W；比特位置：[13:0]；默认值：6401；命令13
 */
#define RTC_I2C_COMMAND13    0x00003FFFU
#define RTC_I2C_COMMAND13_M  (RTC_I2C_COMMAND13_V << RTC_I2C_COMMAND13_S)
#define RTC_I2C_COMMAND13_V  0x00003FFFU
#define RTC_I2C_COMMAND13_S  0
/** RTC_I2C_COMMAND13_DONE:RO；位位置：[31]；默认值：0；命令13_done
 */
#define RTC_I2C_COMMAND13_DONE    (BIT(31))
#define RTC_I2C_COMMAND13_DONE_M  (RTC_I2C_COMMAND13_DONE_V << RTC_I2C_COMMAND13_DONE_S)
#define RTC_I2C_COMMAND13_DONE_V  0x00000001U
#define RTC_I2C_COMMAND13_DONE_S  31

/** RTC_I2C_CMD14_REG寄存器I2C公共14寄存器
 */
#define RTC_I2C_CMD14_REG (DR_REG_RTC_BASE + 0x70)
/** RTC_I2C_COMMAND14:R/W；比特位置：[13:0]；默认值：0；命令14
 */
#define RTC_I2C_COMMAND14    0x00003FFFU
#define RTC_I2C_COMMAND14_M  (RTC_I2C_COMMAND14_V << RTC_I2C_COMMAND14_S)
#define RTC_I2C_COMMAND14_V  0x00003FFFU
#define RTC_I2C_COMMAND14_S  0
/** RTC_I2C_COMMAND14_DONE:RO；位位置：[31]；默认值：0；命令14_done
 */
#define RTC_I2C_COMMAND14_DONE    (BIT(31))
#define RTC_I2C_COMMAND14_DONE_M  (RTC_I2C_COMMAND14_DONE_V << RTC_I2C_COMMAND14_DONE_S)
#define RTC_I2C_COMMAND14_DONE_V  0x00000001U
#define RTC_I2C_COMMAND14_DONE_S  31

/** RTC_I2C_CMD15_REG寄存器I2C公共15寄存器
 */
#define RTC_I2C_CMD15_REG (DR_REG_RTC_BASE + 0x74)
/** RTC_I2C_COMMAND15:R/W；比特位置：[13:0]；默认值：0；命令15
 */
#define RTC_I2C_COMMAND15    0x00003FFFU
#define RTC_I2C_COMMAND15_M  (RTC_I2C_COMMAND15_V << RTC_I2C_COMMAND15_S)
#define RTC_I2C_COMMAND15_V  0x00003FFFU
#define RTC_I2C_COMMAND15_S  0
/** RTC_I2C_COMMAND15_DONE:RO；位位置：[31]；默认值：0；命令15_done
 */
#define RTC_I2C_COMMAND15_DONE    (BIT(31))
#define RTC_I2C_COMMAND15_DONE_M  (RTC_I2C_COMMAND15_DONE_V << RTC_I2C_COMMAND15_DONE_S)
#define RTC_I2C_COMMAND15_DONE_V  0x00000001U
#define RTC_I2C_COMMAND15_DONE_S  31

/** RTC_I2C_DATE_REG寄存器版本寄存器
 */
#define RTC_I2C_DATE_REG (DR_REG_RTC_BASE + 0xfc)
/** RTC_I2C_I2C_DATE:R/W；位位置：[27:0]；默认值：26235664；版本
 */
#define RTC_I2C_I2C_DATE    0x0FFFFFFFU
#define RTC_I2C_I2C_DATE_M  (RTC_I2C_I2C_DATE_V << RTC_I2C_I2C_DATE_S)
#define RTC_I2C_I2C_DATE_V  0x0FFFFFFFU
#define RTC_I2C_I2C_DATE_S  0

#ifdef __cplusplus
}
#endif

