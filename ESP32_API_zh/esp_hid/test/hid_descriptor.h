// 版权所有2015-2019 Espressif Systems（上海）私人有限公司
//
// 根据Apache许可证2.0版（“许可证”）获得许可；
// 除非符合许可证，否则不得使用此文件。
// 您可以在以下地址获取许可证副本：
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// 除非适用法律要求或书面同意，软件
// 根据许可证分发的内容是按“原样”分发的，
// 无任何明示或暗示的保证或条件。
// 有关管理权限和
// 许可证下的限制。
#pragma once

const unsigned char hidReportMap[] = {
    0x05, 0x01,        // 用法页（通用桌面Ctrls）
    0x09, 0x02,        // 用法（鼠标）
    0xA1, 0x01,        // 集合（应用程序）
    0x85, 0x01,        //   报告ID（1）
    0x09, 0x01,        //   用法（指针）
    0xA1, 0x00,        //   集合（物理）
    0x05, 0x09,        //     用法页（按钮）
    0x19, 0x01,        //     最低使用率（0x01）
    0x29, 0x03,        //     使用率最大值（0x03）
    0x15, 0x00,        //     逻辑最小值（0）
    0x25, 0x01,        //     逻辑最大值（1）
    0x75, 0x01,        //     报告大小（1）
    0x95, 0x03,        //     报告计数（3）
    0x81, 0x02,        //     输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x75, 0x05,        //     报告大小（5）
    0x95, 0x01,        //     报告计数（1）
    0x81, 0x01,        //     输入（Const、Array、Abs、No Wrap、Linear、Preferred State、No Null Position）
    0x05, 0x01,        //     用法页（通用桌面Ctrls）
    0x09, 0x30,        //     用法（X）
    0x09, 0x31,        //     用法（Y）
    0x09, 0x38,        //     用途（车轮）
    0x15, 0x81,        //     逻辑最小值（-127）
    0x25, 0x7F,        //     逻辑最大值（127）
    0x75, 0x08,        //     报告大小（8）
    0x95, 0x03,        //     报告计数（3）
    0x81, 0x06,        //     输入（数据、变量、Rel、无换行、线性、首选状态、无空位置）
    0xC0,              //   结束收集
    0xC0,              // 结束收集

    0x05, 0x01,        // 用法页（通用桌面Ctrls）
    0x09, 0x06,        // 用法（键盘）
    0xA1, 0x01,        // 集合（应用程序）
    0x85, 0x02,        //   报告ID（2）
    0x05, 0x07,        //   使用页面（Kbrd/键盘）
    0x19, 0xE0,        //   最小使用量（0xE0）
    0x29, 0xE7,        //   最大使用量（0xE7）
    0x15, 0x00,        //   逻辑最小值（0）
    0x25, 0x01,        //   逻辑最大值（1）
    0x75, 0x01,        //   报告大小（1）
    0x95, 0x08,        //   报告计数（8）
    0x81, 0x02,        //   输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x95, 0x01,        //   报告计数（1）
    0x75, 0x08,        //   报告大小（8）
    0x81, 0x01,        //   输入（Const、Array、Abs、No Wrap、Linear、Preferred State、No Null Position）
    0x95, 0x05,        //   报告计数（5）
    0x75, 0x01,        //   报告大小（1）
    0x05, 0x08,        //   使用页面（LED）
    0x19, 0x01,        //   最小使用量（Num Lock）
    0x29, 0x05,        //   最大使用量（假名）
    0x91, 0x02,        //   输出（数据、变量、绝对值、无包裹、线性、优选状态、无空位置、非易失性）
    0x95, 0x01,        //   报告计数（1）
    0x75, 0x03,        //   报告大小（3）
    0x91, 0x01,        //   输出（Const、Array、Abs、No Wrap、Linear、Preferred State、No Null Position、Non volatile）
    0x95, 0x06,        //   报告计数（6）
    0x75, 0x08,        //   报告大小（8）
    0x15, 0x00,        //   逻辑最小值（0）
    0x25, 0x65,        //   逻辑最大值（101）
    0x05, 0x07,        //   使用页面（Kbrd/键盘）
    0x19, 0x00,        //   使用最小值（0x00）
    0x29, 0x65,        //   最大使用量（0x65）
    0x81, 0x00,        //   输入（数据、阵列、绝对值、无换行、线性、首选状态、无空位置）
    0xC0,              // 结束收集

    0x05, 0x0C,        // 使用情况页面（消费者）
    0x09, 0x01,        // 用法（消费者控制）
    0xA1, 0x01,        // 集合（应用程序）
    0x85, 0x03,        //   报告ID（3）
    0x09, 0x02,        //   用法（数字键盘）
    0xA1, 0x02,        //   集合（逻辑）
    0x05, 0x09,        //     用法页（按钮）
    0x19, 0x01,        //     最低使用率（0x01）
    0x29, 0x0A,        //     使用率最大值（0x0A）
    0x15, 0x01,        //     逻辑最小值（1）
    0x25, 0x0A,        //     逻辑最大值（10）
    0x75, 0x04,        //     报告大小（4）
    0x95, 0x01,        //     报告计数（1）
    0x81, 0x00,        //     输入（数据、阵列、绝对值、无换行、线性、首选状态、无空位置）
    0xC0,              //   结束收集
    0x05, 0x0C,        //   使用情况页面（消费者）
    0x09, 0x86,        //   用法（频道）
    0x15, 0xFF,        //   逻辑最小值（-1）
    0x25, 0x01,        //   逻辑最大值（1）
    0x75, 0x02,        //   报告大小（2）
    0x95, 0x01,        //   报告计数（1）
    0x81, 0x46,        //   输入（数据、变量、Rel、无换行、线性、首选状态、空状态）
    0x09, 0xE9,        //   使用量（体积增量）
    0x09, 0xEA,        //   用法（音量递减）
    0x15, 0x00,        //   逻辑最小值（0）
    0x75, 0x01,        //   报告大小（1）
    0x95, 0x02,        //   报告计数（2）
    0x81, 0x02,        //   输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x09, 0xE2,        //   用法（静音）
    0x09, 0x30,        //   使用（功率）
    0x09, 0x83,        //   用法（上次调用）
    0x09, 0x81,        //   用法（指定选择）
    0x09, 0xB0,        //   用法（播放）
    0x09, 0xB1,        //   用法（暂停）
    0x09, 0xB2,        //   用法（记录）
    0x09, 0xB3,        //   用法（快进）
    0x09, 0xB4,        //   用法（倒带）
    0x09, 0xB5,        //   用法（扫描下一曲目）
    0x09, 0xB6,        //   用法（扫描上一曲目）
    0x09, 0xB7,        //   用法（停止）
    0x15, 0x01,        //   逻辑最小值（1）
    0x25, 0x0C,        //   逻辑最大值（12）
    0x75, 0x04,        //   报告大小（4）
    0x95, 0x01,        //   报告计数（1）
    0x81, 0x00,        //   输入（数据、阵列、绝对值、无换行、线性、首选状态、无空位置）
    0x09, 0x80,        //   用法（选择）
    0xA1, 0x02,        //   集合（逻辑）
    0x05, 0x09,        //     用法页（按钮）
    0x19, 0x01,        //     最低使用率（0x01）
    0x29, 0x03,        //     使用率最大值（0x03）
    0x15, 0x01,        //     逻辑最小值（1）
    0x25, 0x03,        //     逻辑最大值（3）
    0x75, 0x02,        //     报告大小（2）
    0x81, 0x00,        //     输入（数据、阵列、绝对值、无换行、线性、首选状态、无空位置）
    0xC0,              //   结束收集
    0x81, 0x03,        //   输入（Const、Var、Abs、No Wrap、Linear、Preferred State、No Null Position）
    0xC0,              // 结束收集

    0x06, 0xFF, 0xFF,  // 使用页面（供应商定义的0xFFFF）
    0x09, 0xA5,        // 用法（0xA5）
    0xA1, 0x01,        // 集合（应用程序）
    0x85, 0x04,        //   报告ID（4）
    0x09, 0xA6,        //   用法（0xA6）
    0x09, 0xA9,        //   用法（0xA9）
    0x75, 0x08,        //   报告大小（8）
    0x95, 0x7F,        //   报告计数（127）
    0x91, 0x02,        //   输出（数据、变量、绝对值、无包裹、线性、优选状态、无空位置、非易失性）
    0xC0,              // 结束收集

    // 250字节
};

const unsigned char relMouseReportMap[] = { //4字节（btns，x，y，wheel）
    0x05, 0x01,        // 用法页（通用桌面Ctrls）
    0x09, 0x02,        // 用法（鼠标）
    0xA1, 0x01,        // 集合（应用程序）
    0x09, 0x01,        //   用法（指针）
    0xA1, 0x00,        //   集合（物理）
    0x85, 0x01,        //     报告ID（1）
    0x05, 0x09,        //     用法页（按钮）
    0x19, 0x01,        //     最低使用率（0x01）
    0x29, 0x05,        //     使用率最大值（0x05）
    0x15, 0x00,        //     逻辑最小值（0）
    0x25, 0x01,        //     逻辑最大值（1）
    0x95, 0x05,        //     报告计数（5）
    0x75, 0x01,        //     报告大小（1）
    0x81, 0x02,        //     输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x95, 0x01,        //     报告计数（1）
    0x75, 0x03,        //     报告大小（3）
    0x81, 0x03,        //     输入（Const、Var、Abs、No Wrap、Linear、Preferred State、No Null Position）
    0x05, 0x01,        //     用法页（通用桌面Ctrls）
    0x09, 0x30,        //     用法（X）
    0x09, 0x31,        //     用法（Y）
    0x09, 0x38,        //     用途（车轮）
    0x15, 0x81,        //     逻辑最小值（-127）
    0x25, 0x7F,        //     逻辑最大值（127）
    0x75, 0x08,        //     报告大小（8）
    0x95, 0x03,        //     报告计数（3）
    0x81, 0x06,        //     输入（数据、变量、Rel、无换行、线性、首选状态、无空位置）
    0xC0,              //   结束收集
    0xC0,              // 结束收集

    // 54字节
};

const unsigned char absMouseReportMap[] = { //6字节（btns，x*2，y*2，wheel）
    0x05, 0x01,        // 用法页（通用桌面Ctrls）
    0x09, 0x02,        // 用法（鼠标）
    0xA1, 0x01,        // 集合（应用程序）
    0x09, 0x01,        //   用法（指针）
    0xA1, 0x00,        //   集合（物理）
    0x85, 0x01,        //     报告ID（1）
    0x05, 0x09,        //     用法页（按钮）
    0x19, 0x01,        //     最低使用率（0x01）
    0x29, 0x05,        //     使用率最大值（0x05）
    0x15, 0x00,        //     逻辑最小值（0）
    0x25, 0x01,        //     逻辑最大值（1）
    0x95, 0x05,        //     报告计数（5）
    0x75, 0x01,        //     报告大小（1）
    0x81, 0x02,        //     输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x95, 0x01,        //     报告计数（1）
    0x75, 0x03,        //     报告大小（3）
    0x81, 0x01,        //     输入（Const、Array、Abs、No Wrap、Linear、Preferred State、No Null Position）
    0x05, 0x01,        //     用法页（通用桌面Ctrls）
    0x09, 0x30,        //     用法（X）
    0x09, 0x31,        //     用法（Y）
    0x15, 0x00,        //     逻辑最小值（0）
    0x26, 0xFF, 0x7F,  //     逻辑最大值（32767）
    0x75, 0x10,        //     报告大小（16）
    0x95, 0x02,        //     报告计数（2）
    0x81, 0x02,        //     输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x05, 0x01,        //     用法页（通用桌面Ctrls）
    0x09, 0x38,        //     用途（车轮）
    0x15, 0x81,        //     逻辑最小值（-127）
    0x25, 0x7F,        //     逻辑最大值（127）
    0x75, 0x08,        //     报告大小（8）
    0x95, 0x01,        //     报告计数（1）
    0x81, 0x06,        //     输入（数据、变量、Rel、无换行、线性、首选状态、无空位置）
    0xC0,              //   结束收集
    0xC0,              // 结束收集

    // 67字节
};

const unsigned char keyboardReportMap[] = { //7字节输入（修饰符、resrvd、键*5），1字节输出
    0x05, 0x01,        // 用法页（通用桌面Ctrls）
    0x09, 0x06,        // 用法（键盘）
    0xA1, 0x01,        // 集合（应用程序）
    0x85, 0x01,        //   报告ID（1）
    0x05, 0x07,        //   使用页面（Kbrd/键盘）
    0x19, 0xE0,        //   最小使用量（0xE0）
    0x29, 0xE7,        //   最大使用量（0xE7）
    0x15, 0x00,        //   逻辑最小值（0）
    0x25, 0x01,        //   逻辑最大值（1）
    0x75, 0x01,        //   报告大小（1）
    0x95, 0x08,        //   报告计数（8）
    0x81, 0x02,        //   输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x95, 0x01,        //   报告计数（1）
    0x75, 0x08,        //   报告大小（8）
    0x81, 0x03,        //   输入（Const、Var、Abs、No Wrap、Linear、Preferred State、No Null Position）
    0x95, 0x05,        //   报告计数（5）
    0x75, 0x01,        //   报告大小（1）
    0x05, 0x08,        //   使用页面（LED）
    0x19, 0x01,        //   最小使用量（Num Lock）
    0x29, 0x05,        //   最大使用量（假名）
    0x91, 0x02,        //   输出（数据、变量、绝对值、无包裹、线性、优选状态、无空位置、非易失性）
    0x95, 0x01,        //   报告计数（1）
    0x75, 0x03,        //   报告大小（3）
    0x91, 0x03,        //   输出（Const、Var、Abs、无缠绕、线性、优选状态、无零位、非易失性）
    0x95, 0x05,        //   报告计数（5）
    0x75, 0x08,        //   报告大小（8）
    0x15, 0x00,        //   逻辑最小值（0）
    0x25, 0x65,        //   逻辑最大值（101）
    0x05, 0x07,        //   使用页面（Kbrd/键盘）
    0x19, 0x00,        //   使用最小值（0x00）
    0x29, 0x65,        //   最大使用量（0x65）
    0x81, 0x00,        //   输入（数据、阵列、绝对值、无换行、线性、首选状态、无空位置）
    0xC0,              // 结束收集

    // 65字节
};

const unsigned char joystickReportMap[] = { // 8字节（8字节、4字节+帽子、r、y、rx、ry、z、rz）
    0x05, 0x01,        // 用法页（通用桌面Ctrls）
    0x09, 0x04,        // 用法（操纵手柄）
    0xA1, 0x01,        // 集合（应用程序）
    0x85, 0x01,        //   报告ID（1）
    0x05, 0x09,        //   用法页（按钮）
    0x19, 0x01,        //   最低使用率（0x01）
    0x29, 0x0C,        //   使用率最大值（0x0C）
    0x15, 0x00,        //   逻辑最小值（0）
    0x25, 0x01,        //   逻辑最大值（1）
    0x75, 0x01,        //   报告大小（1）
    0x95, 0x0C,        //   报告计数（12）
    0x81, 0x02,        //   输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x05, 0x01,        //   用法页（通用桌面Ctrls）
    0x09, 0x39,        //   用法（帽子开关）
    0x15, 0x01,        //   逻辑最小值（1）
    0x25, 0x08,        //   逻辑最大值（8）
    0x95, 0x01,        //   报告计数（1）
    0x75, 0x04,        //   报告大小（4）
    0x81, 0x02,        //   输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x05, 0x01,        //   用法页（通用桌面Ctrls）
    0xA1, 0x00,        //   集合（物理）
    0x09, 0x30,        //     用法（X）
    0x09, 0x31,        //     用法（Y）
    0x09, 0x33,        //     用法（Rx）
    0x09, 0x34,        //     用法（Ry）
    0x15, 0x80,        //     逻辑最小值（-128）
    0x25, 0x7F,        //     逻辑最大值（127）
    0x75, 0x08,        //     报告大小（8）
    0x95, 0x04,        //     报告计数（4）
    0x81, 0x02,        //     输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x09, 0x32,        //     用法（Z）
    0x09, 0x35,        //     用法（Rz）
    0x15, 0x80,        //     逻辑最小值（-128）
    0x25, 0x7F,        //     逻辑最大值（127）
    0x75, 0x08,        //     报告大小（8）
    0x95, 0x02,        //     报告计数（2）
    0x81, 0x02,        //     输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0xC0,              //   结束收集
    0xC0,              // 结束收集

    // 76字节
};

const unsigned char mediaReportMap[] = { //6字节（3 x 16位）
    0x05, 0x0C,        // 使用情况页面（消费者）
    0x09, 0x01,        // 用法（消费者控制）
    0xA1, 0x01,        // 集合（应用程序）
    0x85, 0x03,        //   报告ID（3）
    0x19, 0x00,        //   最小使用量（未分配）
    0x2A, 0xFF, 0x03,  //   使用率最大值（0x03FF）
    0x15, 0x00,        //   逻辑最小值（0）
    0x26, 0xFF, 0x03,  //   逻辑最大值（1023）
    0x95, 0x03,        //   报告计数（3）
    0x75, 0x10,        //   报告大小（16）
    0x81, 0x00,        //   输入（数据、阵列、绝对值、无换行、线性、首选状态、无空位置）
    0xC0,              // 结束收集

    // 25字节
};

const unsigned char mediaReportMap2[] = {
    0x05, 0x0C,        // 使用情况页面（消费者）
    0x09, 0x01,        // 用法（消费者控制）
    0xA1, 0x01,        // 集合（应用程序）
    0x85, 0x03,        //   报告ID（3）
    0x09, 0x02,        //   用法（数字键盘）
    0xA1, 0x02,        //   集合（逻辑）
    0x05, 0x09,        //     用法页（按钮）
    0x19, 0x01,        //     最低使用率（0x01）
    0x29, 0x0A,        //     使用率最大值（0x0A）
    0x15, 0x01,        //     逻辑最小值（1）
    0x25, 0x0A,        //     逻辑最大值（10）
    0x75, 0x04,        //     报告大小（4）
    0x95, 0x01,        //     报告计数（1）
    0x81, 0x00,        //     输入（数据、阵列、绝对值、无换行、线性、首选状态、无空位置）
    0xC0,              //   结束收集
    0x05, 0x0C,        //   使用情况页面（消费者）
    0x09, 0x86,        //   用法（频道）
    0x15, 0xFF,        //   逻辑最小值（-1）
    0x25, 0x01,        //   逻辑最大值（1）
    0x75, 0x02,        //   报告大小（2）
    0x95, 0x01,        //   报告计数（1）
    0x81, 0x46,        //   输入（数据、变量、Rel、无换行、线性、首选状态、空状态）
    0x09, 0xE9,        //   使用量（体积增量）
    0x09, 0xEA,        //   用法（音量递减）
    0x15, 0x00,        //   逻辑最小值（0）
    0x75, 0x01,        //   报告大小（1）
    0x95, 0x02,        //   报告计数（2）
    0x81, 0x02,        //   输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置）
    0x09, 0xE2,        //   用法（静音）
    0x09, 0x30,        //   使用（功率）
    0x09, 0x83,        //   用法（上次调用）
    0x09, 0x81,        //   用法（指定选择）
    0x09, 0xB0,        //   用法（播放）
    0x09, 0xB1,        //   用法（暂停）
    0x09, 0xB2,        //   用法（记录）
    0x09, 0xB3,        //   用法（快进）
    0x09, 0xB4,        //   用法（倒带）
    0x09, 0xB5,        //   用法（扫描下一曲目）
    0x09, 0xB6,        //   用法（扫描上一曲目）
    0x09, 0xB7,        //   用法（停止）
    0x15, 0x01,        //   逻辑最小值（1）
    0x25, 0x0C,        //   逻辑最大值（12）
    0x75, 0x04,        //   报告大小（4）
    0x95, 0x01,        //   报告计数（1）
    0x81, 0x00,        //   输入（数据、阵列、绝对值、无换行、线性、首选状态、无空位置）
    0x09, 0x80,        //   用法（选择）
    0xA1, 0x02,        //   集合（逻辑）
    0x05, 0x09,        //     用法页（按钮）
    0x19, 0x01,        //     最低使用率（0x01）
    0x29, 0x03,        //     使用率最大值（0x03）
    0x15, 0x01,        //     逻辑最小值（1）
    0x25, 0x03,        //     逻辑最大值（3）
    0x75, 0x02,        //     报告大小（2）
    0x81, 0x00,        //     输入（数据、阵列、绝对值、无换行、线性、首选状态、无空位置）
    0xC0,              //   结束收集
    0x81, 0x03,        //   输入（Const、Var、Abs、No Wrap、Linear、Preferred State、No Null Position）
    0xC0,              // 结束收集
};

const unsigned char hidapiReportMap[] = { //8字节输入，8字节功能
    0x06, 0x00, 0xFF,  // 使用页面（供应商定义的0xFF00）
    0x0A, 0x00, 0x01,  // 用法（0x0100）
    0xA1, 0x01,        // 集合（应用程序）
    0x85, 0x01,        //   报告ID（1）
    0x15, 0x00,        //   逻辑最小值（0）
    0x26, 0xFF, 0x00,  //   逻辑最大值（255）
    0x75, 0x08,        //   报告大小（8）
    0x95, 0x08,        //   报告计数（8）
    0x09, 0x01,        //   用法（0x01）
    0x82, 0x02, 0x01,  //   输入（数据、变量、绝对值、无换行、线性、首选状态、无空位置、缓冲字节）
    0x95, 0x08,        //   报告计数（8）
    0x09, 0x02,        //   用法（0x02）
    0xB2, 0x02, 0x01,  //   功能（数据、变量、绝对值、无换行、线性、首选状态、无空位置、非易失性、缓冲字节）
    0x95, 0x08,        //   报告计数（8）
    0x09, 0x03,        //   用法（0x03）
    0x91, 0x02,        //   输出（数据、变量、绝对值、无包裹、线性、优选状态、无空位置、非易失性）
    0xC0,              // 结束收集

    // 38字节
};

